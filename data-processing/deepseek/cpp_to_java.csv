example_id,start_language,target_language,source_code,reference_code,translated_code,inference_time,bleu_1,bleu_2,bleu_4,keyword_match,codebleu
2048,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int min ( int x , int y ) { return ( x < y ) ? x : y ; } int calcAngle ( double h , double m ) { if ( h < 0 m < 0 h > 12 m > 60 ) printf ( "" Wrong ▁ input "" ) ; if ( h == 12 ) h = 0 ; if ( m == 60 ) { m = 0 ; h += 1 ; if ( h > 12 ) h = h - 12 ; } float hour_angle = 0.5 * ( h * 60 + m ) ; float minute_angle = 6 * m ; float angle = abs ( hour_angle - minute_angle ) ; angle = min ( 360 - angle , angle ) ; return angle ; } int main ( ) { cout << calcAngle ( 9 , 60 ) << endl ; cout << calcAngle ( 3 , 30 ) << endl ; return 0 ; }","import java . io . * ; class GFG { static int calcAngle ( double h , double m ) { if ( h < 0 m < 0 h > 12 m > 60 ) System . out . println ( "" Wrong ▁ input "" ) ; if ( h == 12 ) h = 0 ; if ( m == 60 ) { m = 0 ; h += 1 ; if ( h > 12 ) h = h - 12 ; } int hour_angle = ( int ) ( 0.5 * ( h * 60 + m ) ) ; int minute_angle = ( int ) ( 6 * m ) ; int angle = Math . abs ( hour_angle - minute_angle ) ; angle = Math . min ( 360 - angle , angle ) ; return angle ; } public static void main ( String [ ] args ) { System . out . println ( calcAngle ( 9 , 60 ) + "" ▁ degree "" ) ; System . out . println ( calcAngle ( 3 , 30 ) + "" ▁ degree "" ) ; } }","import java.lang.*; public class Main { public static void main(String[] args) { System.out.println(calcAngle(9, 60)); System.out.println(calcAngle(3, 30)); } static int min(int x, int y){ return (x<y)?x:y; } static double calcAngle(double h, double m) { if (h < 0 || m < 0 || h > 12 || m > 60) System.out.println(""Wrong input""); if (h == 12) h = 0; if (m == 60) { m = 0; h += 1; if(h>12) h-=12; } double hour_angle = 0.5 * (h*60 + m); double minute_angle = 6 * m; double angle = Math.abs(hour_angle - minute_angle); angle = min((360-angle), angle); return angle; } } ",6.125494003295898,0.7485011433836462,0.6616275265749725,0.5291125649724627,1.0,0.6703787954807239
13186,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; long long moduloMultiplication ( long long a , long long b , long long mod ) { a %= mod ; while ( b ) { if ( b & 1 ) res = ( res + a ) % mod ; a = ( 2 * a ) % mod ; } return res ; } int main ( ) { long long a = 426 ; long long b = 964 ; long long m = 235 ; cout << moduloMultiplication ( a , b , m ) ; return 0 ; }","class GFG { static long moduloMultiplication ( long a , long b , long mod ) { long res = 0 ; a %= mod ; while ( b > 0 ) { if ( ( b & 1 ) > 0 ) { res = ( res + a ) % mod ; } a = ( 2 * a ) % mod ; } return res ; } public static void main ( String [ ] args ) { long a = 10123465234878998L ; long b = 65746311545646431L ; long m = 10005412336548794L ; System . out . print ( moduloMultiplication ( a , b , m ) ) ; } }","import java.lang.*; public class Main { static long moduloMultiplication (long a , long b , long mod ){ a %= mod ; while(b > 0){ if((b & 1) == 1) res = (res + a) % mod; a = (2 * a) % mod; b >>= 1; } return res; <｜begin▁of▁sentence｜>",2.4886488914489746,0.5345258527115713,0.487432628365603,0.4319117621913808,0.8571428571428571,0.5594810906768237
2200,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int findMaximum ( int arr [ ] , int low , int high ) { if ( low == high ) return arr [ low ] ; if ( ( high == low + 1 ) && arr [ low ] >= arr [ high ] ) return arr [ low ] ; if ( ( high == low + 1 ) && arr [ low ] < arr [ high ] ) return arr [ high ] ; int mid = ( low + high ) / 2 ; if ( arr [ mid ] > arr [ mid + 1 ] && arr [ mid ] > arr [ mid - 1 ] ) return arr [ mid ] ; if ( arr [ mid ] > arr [ mid + 1 ] && arr [ mid ] < arr [ mid - 1 ] ) return findMaximum ( arr , low , mid - 1 ) ; else return findMaximum ( arr , mid + 1 , high ) ; } int main ( ) { int arr [ ] = { 1 , 3 , 50 , 10 , 9 , 7 , 6 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" The ▁ maximum ▁ element ▁ is ▁ "" << findMaximum ( arr , 0 , n - 1 ) ; return 0 ; }","class Main { static int findMaximum ( int arr [ ] , int low , int high ) { if ( low == high ) return arr [ low ] ; if ( ( high == low + 1 ) && arr [ low ] >= arr [ high ] ) return arr [ low ] ; if ( ( high == low + 1 ) && arr [ low ] < arr [ high ] ) return arr [ high ] ; int mid = ( low + high ) / 2 ; if ( arr [ mid ] > arr [ mid + 1 ] && arr [ mid ] > arr [ mid - 1 ] ) return arr [ mid ] ; if ( arr [ mid ] > arr [ mid + 1 ] && arr [ mid ] < arr [ mid - 1 ] ) return findMaximum ( arr , low , mid - 1 ) ; else return findMaximum ( arr , mid + 1 , high ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 3 , 50 , 10 , 9 , 7 , 6 } ; int n = arr . length ; System . out . println ( "" The ▁ maximum ▁ element ▁ is ▁ "" + findMaximum ( arr , 0 , n - 1 ) ) ; } }","import java.util.*; public class Main { static int findMaximum (int arr[], int low, int high) { if(low == high) return arr[low]; if((high == low + 1) && arr[low] >= arr[high]) return arr[low]; if((high == low + 1) && arr[low] < arr[high]) return arr[high]; int mid = (low + high)/2; if(arr[mid] > arr[mid+1] && arr[mid] > arr[mid-1]) return arr[mid]; if(arr[mid] > arr[mid+1] && arr[mid] < arr[mid-1]) return findMaximum (arr, low, mid-1); else return findMaximum (arr, mid+1, high); } public static void main(String [] args) { int arr[] = new int[]{1, 3, 50, 10, 9, 7, 6}; int n = arr.length; System.out.println(""The maximum element is ""+ findMaximum(arr, 0, n-1)); } } ",11.365877866744995,0.8639640205397251,0.8315025580892977,0.7808084035791039,0.9473684210526316,0.8307764088211621
9260,C++,Java,#include <bits/stdc++.h> NEW_LINE using namespace std ; #define PI  3.14159265 NEW_LINE float length_rope ( float r ) { return ( ( 2 * PI * r ) + 6 * r ) ; } int main ( ) { float r = 7 ; cout << ceil ( length_rope ( r ) ) << endl ; return 0 ; },import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double length_rope ( double r ) { return ( ( 2 * PI * r ) + 6 * r ) ; } public static void main ( String [ ] args ) { double r = 7 ; System . out . println ( length_rope ( r ) ) ; } },import java.lang.Math; public class Main { static final double PI = 3.14159265; static double lengthRope(double r) { return (2 * PI * r) + (6 * r); } public static void main(String[] args) { double r = 7.0; System.out.println((int)Math.ceil(lengthRope(r))); } } ,4.533202886581421,0.802735757344101,0.7263376748283452,0.5993936088558637,0.8571428571428571,0.6767183833419617
13513,C++,Java,"#include <iostream> NEW_LINE using namespace std ; int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } int phi ( unsigned int n ) { unsigned int result = 1 ; for ( int i = 2 ; i < n ; i ++ ) if ( gcd ( i , n ) == 1 ) result ++ ; return result ; } int main ( ) { int n ; for ( n = 1 ; n <= 10 ; n ++ ) cout << "" phi ( "" << n << "" ) ▁ = ▁ "" << phi ( n ) << endl ; return 0 ; }","import java . io . * ; class GFG { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int phi ( int n ) { int result = 1 ; for ( int i = 2 ; i < n ; i ++ ) if ( gcd ( i , n ) == 1 ) result ++ ; return result ; } public static void main ( String [ ] args ) { int n ; for ( n = 1 ; n <= 10 ; n ++ ) System . out . println ( "" phi ( "" + n + "" ) ▁ = ▁ "" + phi ( n ) ) ; } }","import java.io.*; public class Main { static int gcd (int a, int b){ if(a == 0) return b; else return gcd (b % a, a); } static int phi (int n ){ int result = 1; for (int i=2; i<n; i++) if (gcd(i, n) == 1) result ++; return result; } public static void main () throws IOException { PrintWriter out = new PrintWriter(System.out, true); for (int n=1; n<=10; n++){ out.println(""phi ("" + n + "") = "" + phi(n)); } } } ",9.093327045440674,0.8165648043181202,0.753275703679551,0.6710302964377208,0.7999999999999999,0.7097212075064046
2000,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int pow ( int a , int b ) { if ( b == 0 ) return 1 ; int answer = a ; int increment = a ; int i , j ; for ( i = 1 ; i < b ; i ++ ) { for ( j = 1 ; j < a ; j ++ ) { answer += increment ; } increment = answer ; } return answer ; } int main ( ) { cout << pow ( 5 , 3 ) ; return 0 ; }","import java . io . * ; class GFG { static int pow ( int a , int b ) { if ( b == 0 ) return 1 ; int answer = a ; int increment = a ; int i , j ; for ( i = 1 ; i < b ; i ++ ) { for ( j = 1 ; j < a ; j ++ ) { answer += increment ; } increment = answer ; } return answer ; } public static void main ( String [ ] args ) { System . out . println ( pow ( 5 , 3 ) ) ; } }","public class Main { static int pow (int a , int b ) { if (b == 0) return 1 ; int answer = a ; int increment = a ; for(int i = 1; i < b; i ++) { for(int j = 1; j < a; j ++) { answer+= increment ; } increment = answer; } return answer; } public static void main (String[] args) { System.out.println(pow(5,3)); } } ",3.652712821960449,0.797363827798824,0.770369801342137,0.7092437149882228,1.0,0.7964706004917559
1682,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int equilibrium ( int arr [ ] , int n ) { int i , j ; int leftsum , rightsum ; for ( i = 0 ; i < n ; ++ i ) { leftsum = 0 ; rightsum = 0 ; for ( j = 0 ; j < i ; j ++ ) leftsum += arr [ j ] ; for ( j = i + 1 ; j < n ; j ++ ) rightsum += arr [ j ] ; if ( leftsum == rightsum ) return i ; } return -1 ; } int main ( ) { int arr [ ] = { -7 , 1 , 5 , 2 , -4 , 3 , 0 } ; int arr_size = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << equilibrium ( arr , arr_size ) ; return 0 ; }","class EquilibriumIndex { int equilibrium ( int arr [ ] , int n ) { int i , j ; int leftsum , rightsum ; for ( i = 0 ; i < n ; ++ i ) { leftsum = 0 ; rightsum = 0 ; for ( j = 0 ; j < i ; j ++ ) leftsum += arr [ j ] ; for ( j = i + 1 ; j < n ; j ++ ) rightsum += arr [ j ] ; if ( leftsum == rightsum ) return i ; } return - 1 ; } public static void main ( String [ ] args ) { EquilibriumIndex equi = new EquilibriumIndex ( ) ; int arr [ ] = { - 7 , 1 , 5 , 2 , - 4 , 3 , 0 } ; int arr_size = arr . length ; System . out . println ( equi . equilibrium ( arr , arr_size ) ) ; } }","import java.util.*; public class Main { public static int equilibrium(int[] arr, int n){ for (int i = 0; i < n; ++i) { int leftsum = 0; int rightsum = 0; for(int j=0; j<i; j++) leftsum += arr[j]; for(int j=i+1; j<n; j++) rightsum += arr[j]; if (leftsum == rightsum) return i; } return -1; } public static void main(String[] args){ int arr[] = {-7, 1, 5, 2, -4, 3, 0}; int arr_size = arr.length; System.out.println(equilibrium(arr, arr_size)); } } ",5.616180896759033,0.7271971963946523,0.6661223409295013,0.5456971867730351,0.9473684210526316,0.666198557056914
13511,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int modInverse ( int a , int m ) { int m0 = m ; int y = 0 , x = 1 ; if ( m == 1 ) return 0 ; while ( a > 1 ) { int q = a / m ; int t = m ; m = a % m , a = t ; t = y ; y = x - q * y ; x = t ; } if ( x < 0 ) x += m0 ; return x ; } int main ( ) { int a = 3 , m = 11 ; cout << "" Modular ▁ multiplicative ▁ inverse ▁ is ▁ "" << modInverse ( a , m ) ; return 0 ; }","class GFG { static int modInverse ( int a , int m ) { int m0 = m ; int y = 0 , x = 1 ; if ( m == 1 ) return 0 ; while ( a > 1 ) { int q = a / m ; int t = m ; m = a % m ; a = t ; t = y ; y = x - q * y ; x = t ; } if ( x < 0 ) x += m0 ; return x ; } public static void main ( String args [ ] ) { int a = 3 , m = 11 ; System . out . println ( "" Modular ▁ multiplicative ▁ "" + "" inverse ▁ is ▁ "" + modInverse ( a , m ) ) ; } }","import java.util.*; public class Main { static int modInverse(int a, int m) { int m0 = m; int y = 0, x = 1; if (m == 1) return 0; while (a > 1) { int q = a / m; int t = m; m = a % m; a = t; t = y; y = x - q * y; x = t; } if (x < 0) x += m0; return x; } public static void main(String[] args){ int a = 3, m = 11; System.out<｜begin▁of▁sentence｜>("" Modular multiplicative inverse is "" + modInverse(a, m)); } } ",6.5194408893585205,0.9182807865478785,0.8831250645727908,0.845611880672947,1.0,0.891928316471063
1994,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define bool  int NEW_LINE bool isLucky ( int n ) { static int counter = 2 ; int next_position = n ; if ( counter > n ) return 1 ; if ( n % counter == 0 ) return 0 ; next_position -= next_position / counter ; counter ++ ; return isLucky ( next_position ) ; } int main ( ) { int x = 5 ; if ( isLucky ( x ) ) cout << x << "" ▁ is ▁ a ▁ lucky ▁ no . "" ; else cout << x << "" ▁ is ▁ not ▁ a ▁ lucky ▁ no . "" ; }","import java . io . * ; class GFG { public static int counter = 2 ; static boolean isLucky ( int n ) { int next_position = n ; if ( counter > n ) return true ; if ( n % counter == 0 ) return false ; next_position -= next_position / counter ; counter ++ ; return isLucky ( next_position ) ; } public static void main ( String [ ] args ) { int x = 5 ; if ( isLucky ( x ) ) System . out . println ( x + "" ▁ is ▁ a ▁ lucky ▁ no . "" ) ; else System . out . println ( x + "" ▁ is ▁ not ▁ a ▁ lucky ▁ no . "" ) ; } }","public class Main { public static void main(String[] args) { int x = 5; if (isLucky(x)) System.out.println(x + "" is a lucky no.""); else System.out.println(x + "" is not a lucky no.""); } public static boolean isLucky(int n) { int counter = 2; int next_position = n; if (counter > n) return true; if (n % counter == 0) return false; next_position -= next_position / counter; counter++; return isLucky(next_position); } } ",5.811733961105347,0.762375294231083,0.7095805852715641,0.6333851103757576,1.0,0.7433695772630302
1824,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void printMaxActivities ( int s [ ] , int f [ ] , int n ) { int i , j ; cout << "" Following ▁ activities ▁ are ▁ selected ▁ "" << endl ; i = 0 ; cout << "" ▁ "" << i ; for ( j = 1 ; j < n ; j ++ ) { if ( s [ j ] >= f [ i ] ) { cout << "" ▁ "" << j ; i = j ; } } } int main ( ) { int s [ ] = { 1 , 3 , 0 , 5 , 8 , 5 } ; int f [ ] = { 2 , 4 , 6 , 7 , 9 , 9 } ; int n = sizeof ( s ) / sizeof ( s [ 0 ] ) ; printMaxActivities ( s , f , n ) ; return 0 ; }","import java . util . * ; import java . lang . * ; import java . io . * ; class ActivitySelection { public static void printMaxActivities ( int s [ ] , int f [ ] , int n ) { int i , j ; System . out . print ( "" Following ▁ activities ▁ are ▁ selected ▁ : ▁ n "" ) ; i = 0 ; System . out . print ( i + "" ▁ "" ) ; for ( j = 1 ; j < n ; j ++ ) { if ( s [ j ] >= f [ i ] ) { System . out . print ( j + "" ▁ "" ) ; i = j ; } } } public static void main ( String [ ] args ) { int s [ ] = { 1 , 3 , 0 , 5 , 8 , 5 } ; int f [ ] = { 2 , 4 , 6 , 7 , 9 , 9 } ; int n = s . length ; printMaxActivities ( s , f , n ) ; } }","import java.util.*; public class Main { void printMaxActivities(int[] s, int[] f, int n) { System.out.println(""Following activities are selected""); int i = 0; System.out.print((i + 1)); for (int j = 1; j < n; j++) { if (s[j] >= f[i]) { System.out.print((j + 1)); i = j; } } } public static void main(String[] args){ int[] s={1,3,0,5,8,5}; int[] f={2,4,6,7,9,9}; int n = s.length; new Main().printMaxActivities(s,f,n); } } ",6.643022060394287,0.5468355395056811,0.4657691606929132,0.3525707719908421,0.9411764705882353,0.52915248157006
13031,C++,Java,"#include <iostream> NEW_LINE using namespace std ; bool check ( int n ) { if ( n <= 0 ) return false ; return 1162261467 % n == 0 ; } int main ( ) { int n = 9 ; if ( check ( n ) ) cout << "" Yes "" ; else cout << "" No "" ; return 0 ; }","public class Power_3 { static boolean check ( int n ) { if ( n <= 0 ) return false ; return 1162261467 % n == 0 ; } public static void main ( String args [ ] ) { int n = 9 ; if ( check ( n ) ) System . out . println ( "" Yes "" ) ; else System . out . println ( "" No "" ) ; } }","import java.util.*; public class Main { static boolean check(int n) { if (n <= 0) return false; return 1162261467 % n == 0; } public static void main(String[] args) { int n = 9; if (check(n)) System.out.println(""Yes""); else System.out.println(""No""); } } ",4.349194288253784,0.8454947064540445,0.7840571334492236,0.683040976566525,1.0,0.7781286835965675
2001,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int multiply ( int x , int y ) { if ( y ) return ( x + multiply ( x , y - 1 ) ) ; else return 0 ; } int pow ( int a , int b ) { if ( b ) return multiply ( a , pow ( a , b - 1 ) ) ; else return 1 ; } int main ( ) { cout << pow ( 5 , 3 ) ; getchar ( ) ; return 0 ; }","import java . io . * ; class GFG { static int multiply ( int x , int y ) { if ( y > 0 ) return ( x + multiply ( x , y - 1 ) ) ; else return 0 ; } static int pow ( int a , int b ) { if ( b > 0 ) return multiply ( a , pow ( a , b - 1 ) ) ; else return 1 ; } public static void main ( String [ ] args ) { System . out . println ( pow ( 5 , 3 ) ) ; } }","import java.util.*; public class Main { static int multiply (int x , int y ) { if (y != 0) return (x + multiply (x, y-1)) ; else return 0; } static int pow (int a , int b ){ if (b != 0) return multiply(a, pow(a, b-1)); else return 1; } public static void main (String[] args){ System.out.println(pow(5 ,3 )); } } ",3.282668113708496,0.8248574633126622,0.7820600844783525,0.7075207147797373,1.0,0.7952645003458161
1705,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void printRepeating ( int arr [ ] , int size ) { int Xor = arr [ 0 ] ; int set_bit_no ; int i ; int n = size - 2 ; int x = 0 , y = 0 ; for ( i = 1 ; i < size ; i ++ ) Xor ^= arr [ i ] ; for ( i = 1 ; i <= n ; i ++ ) Xor ^= i ; set_bit_no = Xor & ~ ( Xor - 1 ) ; for ( i = 0 ; i < size ; i ++ ) { if ( arr [ i ] & set_bit_no ) x = x ^ arr [ i ] ; else y = y ^ arr [ i ] ; } for ( i = 1 ; i <= n ; i ++ ) { if ( i & set_bit_no ) x = x ^ i ; else y = y ^ i ; } cout << "" The ▁ two ▁ repeating ▁ elements ▁ are ▁ "" << y << "" ▁ "" << x ; } int main ( ) { int arr [ ] = { 4 , 2 , 4 , 5 , 2 , 3 , 1 } ; int arr_size = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; printRepeating ( arr , arr_size ) ; return 0 ; }","class RepeatElement { void printRepeating ( int arr [ ] , int size ) { int xor = arr [ 0 ] ; int set_bit_no ; int i ; int n = size - 2 ; int x = 0 , y = 0 ; for ( i = 1 ; i < size ; i ++ ) xor ^= arr [ i ] ; for ( i = 1 ; i <= n ; i ++ ) xor ^= i ; set_bit_no = ( xor & ~ ( xor - 1 ) ) ; for ( i = 0 ; i < size ; i ++ ) { int a = arr [ i ] & set_bit_no ; if ( a != 0 ) x = x ^ arr [ i ] ; else y = y ^ arr [ i ] ; } for ( i = 1 ; i <= n ; i ++ ) { int a = i & set_bit_no ; if ( a != 0 ) x = x ^ i ; else y = y ^ i ; } System . out . println ( "" The ▁ two ▁ reppeated ▁ elements ▁ are ▁ : "" ) ; System . out . println ( x + "" ▁ "" + y ) ; } public static void main ( String [ ] args ) { RepeatElement repeat = new RepeatElement ( ) ; int arr [ ] = { 4 , 2 , 4 , 5 , 2 , 3 , 1 } ; int arr_size = arr . length ; repeat . printRepeating ( arr , arr_size ) ; } }","import java.util.*; public class Main { public static void main(String[] args) { int arr[] = {4, 2, 4, 5, 2, 3, 1}; printRepeating(arr); } private static void printRepeating(int arr[]) { int xor= arr[0]; int setBitNo; int n = arr.length - 2; int y = 0, x = 0; for (int i = 1; i < arr.length; i++) xor ^= arr[i]; for (int i = 1; i <= n; i++) xor ^= i; setBitNo = xor & ~(xor - 1); for (int i = 0; i < arr.length; i++) { if ((arr[i] & setBitNo) != 0) x = x ^ arr[i]; else y = y ^ arr[i]; } for (int i = 1; i <= n; i++) { if ((i & setBitNo) != 0) x = x ^ i; else y = y ^ i; } System.out.println(""The two repeating elements are "" + y + "" "" + x); } } ",11.690569877624512,0.757071318635658,0.6723290240177723,0.5401153509051059,0.9,0.6480807456335741
6659,C++,Java,"#include <bits/stdc++.h> NEW_LINE #include <iostream> NEW_LINE using namespace std ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } void printknapSack ( int W , int wt [ ] , int val [ ] , int n ) { int i , w ; int K [ n + 1 ] [ W + 1 ] ; for ( i = 0 ; i <= n ; i ++ ) { for ( w = 0 ; w <= W ; w ++ ) { if ( i == 0 w == 0 ) K [ i ] [ w ] = 0 ; else if ( wt [ i - 1 ] <= w ) K [ i ] [ w ] = max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] ) ; else K [ i ] [ w ] = K [ i - 1 ] [ w ] ; } } int res = K [ n ] [ W ] ; cout << res << endl ; w = W ; for ( i = n ; i > 0 && res > 0 ; i -- ) { if ( res == K [ i - 1 ] [ w ] ) continue ; else { cout << "" ▁ "" << wt [ i - 1 ] ; res = res - val [ i - 1 ] ; w = w - wt [ i - 1 ] ; } } } int main ( ) { int val [ ] = { 60 , 100 , 120 } ; int wt [ ] = { 10 , 20 , 30 } ; int W = 50 ; int n = sizeof ( val ) / sizeof ( val [ 0 ] ) ; printknapSack ( W , wt , val , n ) ; return 0 ; }","class GFG { static int max ( int a , int b ) { return ( a > b ) ? a : b ; } static void printknapSack ( int W , int wt [ ] , int val [ ] , int n ) { int i , w ; int K [ ] [ ] = new int [ n + 1 ] [ W + 1 ] ; for ( i = 0 ; i <= n ; i ++ ) { for ( w = 0 ; w <= W ; w ++ ) { if ( i == 0 w == 0 ) K [ i ] [ w ] = 0 ; else if ( wt [ i - 1 ] <= w ) K [ i ] [ w ] = Math . max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] ) ; else K [ i ] [ w ] = K [ i - 1 ] [ w ] ; } } int res = K [ n ] [ W ] ; System . out . println ( res ) ; w = W ; for ( i = n ; i > 0 && res > 0 ; i -- ) { if ( res == K [ i - 1 ] [ w ] ) continue ; else { System . out . print ( wt [ i - 1 ] + "" ▁ "" ) ; res = res - val [ i - 1 ] ; w = w - wt [ i - 1 ] ; } } } public static void main ( String arg [ ] ) { int val [ ] = { 60 , 100 , 120 } ; int wt [ ] = { 10 , 20 , 30 } ; int W = 50 ; int n = val . length ; printknapSack ( W , wt , val , n ) ; } }","import java.util.*; public class Main { static int max(int a, int b){ return (a > b) ? a : b; } static void printKnapSack(int W, int wt[], int val[], int n){ int i, w; int K[][] = new int[n+1][W+1]; for (i=0; i<=n; i++) { for (w=0; w<=W; w++) { if(i==0 || w==0){ K[i][w] = 0; } else if(wt[i-1] <= w){ K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]], K[i-1][w]); } else { K[i][w] = K[i-1][w]; } } } int res = K[n][W]; System.out.println(res); w= W; for (i=n; i>0 && res > 0; i--) { if(res == K[i-1][w]) continue; else{ System.out.print("" "" + wt[i-1]); res = res - val[i-1]; w= w-wt[i-1]; } } } public static void main(String[] args){ int val[] = {60, 100, 120}; int wt[] = {10, 20, 30}; int W = 50; int n = val.length; printKnapSack(W, wt, val, n); } } ",12.193388938903809,0.7544574617462682,0.6951862272093337,0.6029150898260672,1.0,0.722040562878247
2095,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int fun ( unsigned int n ) { return n & ( n - 1 ) ; } int main ( ) { int n = 7 ; cout << "" The ▁ number ▁ after ▁ unsetting ▁ the "" ; cout << "" ▁ rightmost ▁ set ▁ bit ▁ "" << fun ( n ) ; return 0 ; }","class GFG { static int fun ( int n ) { return n & ( n - 1 ) ; } public static void main ( String arg [ ] ) { int n = 7 ; System . out . print ( "" The ▁ number ▁ after ▁ unsetting ▁ "" + "" the ▁ rightmost ▁ set ▁ bit ▁ "" + fun ( n ) ) ; } }","public class Main { public static void main(String[] args) { int n = 7; System.out.println(""The number after unsetting the rightmost set bit is "" + fun(n)); } public static int fun (int n){ return n & (n - 1); } } ",2.2539267539978027,0.7406241588299984,0.6447595007939123,0.54995535159566,1.0,0.684968746116962
1861,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int knapSack ( int W , int wt [ ] , int val [ ] , int n ) { if ( n == 0 W == 0 ) return 0 ; if ( wt [ n - 1 ] > W ) return knapSack ( W , wt , val , n - 1 ) ; else return max ( val [ n - 1 ] + knapSack ( W - wt [ n - 1 ] , wt , val , n - 1 ) , knapSack ( W , wt , val , n - 1 ) ) ; } int main ( ) { int val [ ] = { 60 , 100 , 120 } ; int wt [ ] = { 10 , 20 , 30 } ; int W = 50 ; int n = sizeof ( val ) / sizeof ( val [ 0 ] ) ; cout << knapSack ( W , wt , val , n ) ; return 0 ; }","class Knapsack { static int max ( int a , int b ) { return ( a > b ) ? a : b ; } static int knapSack ( int W , int wt [ ] , int val [ ] , int n ) { if ( n == 0 W == 0 ) return 0 ; if ( wt [ n - 1 ] > W ) return knapSack ( W , wt , val , n - 1 ) ; else return max ( val [ n - 1 ] + knapSack ( W - wt [ n - 1 ] , wt , val , n - 1 ) , knapSack ( W , wt , val , n - 1 ) ) ; } public static void main ( String args [ ] ) { int val [ ] = new int [ ] { 60 , 100 , 120 } ; int wt [ ] = new int [ ] { 10 , 20 , 30 } ; int W = 50 ; int n = val . length ; System . out . println ( knapSack ( W , wt , val , n ) ) ; } }","import java.util.*; public class Main { static int max (int a , int b ){ return (a > b)? a : b ; } static int knapSack(int W, int wt [], int val[], int n){ if(n == 0 || W == 0) return 0; if(wt[n-1] > W) return knapSack (W, wt, val, n-1); else return max(val[n-1] + knapSack(W - wt[n-1], wt, val, n-1), knapSack(W, wt, val, n-1)); } public static void main (String [] args){ int val[] = {60, 100, 120}; int wt[] = {10, 20, 30}; int W = 50; int n = val.length; System.out.println(knapSack (W, wt, val, n)); } } ",8.605928897857666,0.8317576238256189,0.7919434282027297,0.7267449337990738,0.9473684210526316,0.7929319799751411
1843,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define R  3 NEW_LINE #define C  3 NEW_LINE int min ( int x , int y , int z ) ; int min ( int x , int y , int z ) { if ( x < y ) return ( x < z ) ? x : z ; else return ( y < z ) ? y : z ; } int minCost ( int cost [ R ] [ C ] , int m , int n ) { if ( n < 0 m < 0 ) return INT_MAX ; else if ( m == 0 && n == 0 ) return cost [ m ] [ n ] ; else return cost [ m ] [ n ] + min ( minCost ( cost , m - 1 , n - 1 ) , minCost ( cost , m - 1 , n ) , minCost ( cost , m , n - 1 ) ) ; } int main ( ) { int cost [ R ] [ C ] = { { 1 , 2 , 3 } , { 4 , 8 , 2 } , { 1 , 5 , 3 } } ; cout << minCost ( cost , 2 , 2 ) << endl ; return 0 ; }","public class GFG { static int min ( int x , int y , int z ) { if ( x < y ) return ( x < z ) ? x : z ; else return ( y < z ) ? y : z ; } static int minCost ( int cost [ ] [ ] , int m , int n ) { if ( n < 0 m < 0 ) return Integer . MAX_VALUE ; else if ( m == 0 && n == 0 ) return cost [ m ] [ n ] ; else return cost [ m ] [ n ] + min ( minCost ( cost , m - 1 , n - 1 ) , minCost ( cost , m - 1 , n ) , minCost ( cost , m , n - 1 ) ) ; } public static void main ( String args [ ] ) { int cost [ ] [ ] = { { 1 , 2 , 3 } , { 4 , 8 , 2 } , { 1 , 5 , 3 } } ; System . out . print ( minCost ( cost , 2 , 2 ) ) ; } }","import java.util.*; public class Main { static int R = 3; static int C = 3; static int min(int x, int y, int z) { if (x < y) return (x < z) ? x : z; else return (y < z) ? y : z; } static int minCost(int cost[][], int m, int n) { if (n < 0 || m < 0) return Integer.MAX_VALUE; else if (m == 0 && n == 0) return cost[m][n]; else return cost[m][n] + min(minCost(cost, m-1, n-1), minCost(cost, m-1, n), minCost(cost, m, n-1)); } public static void main (String[] args) { int cost[][] = {{1, 2, 3}, {4, 8, 2}, {1, 5, 3}}; System.out.println(minCost(cost, 2, 2)); } } ",6.552543878555298,0.8888888888888888,0.8602625643293815,0.8139895693488765,1.0,0.8697926985442135
1867,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int max ( int x , int y ) { return ( x > y ) ? x : y ; } int lps ( char * seq , int i , int j ) { if ( i == j ) return 1 ; if ( seq [ i ] == seq [ j ] && i + 1 == j ) return 2 ; if ( seq [ i ] == seq [ j ] ) return lps ( seq , i + 1 , j - 1 ) + 2 ; return max ( lps ( seq , i , j - 1 ) , lps ( seq , i + 1 , j ) ) ; } int main ( ) { char seq [ ] = "" GEEKSFORGEEKS "" ; int n = strlen ( seq ) ; cout << "" The ▁ length ▁ of ▁ the ▁ LPS ▁ is ▁ "" << lps ( seq , 0 , n - 1 ) ; return 0 ; }","class GFG { static int max ( int x , int y ) { return ( x > y ) ? x : y ; } static int lps ( char seq [ ] , int i , int j ) { if ( i == j ) { return 1 ; } if ( seq [ i ] == seq [ j ] && i + 1 == j ) { return 2 ; } if ( seq [ i ] == seq [ j ] ) { return lps ( seq , i + 1 , j - 1 ) + 2 ; } return max ( lps ( seq , i , j - 1 ) , lps ( seq , i + 1 , j ) ) ; } public static void main ( String [ ] args ) { String seq = "" GEEKSFORGEEKS "" ; int n = seq . length ( ) ; System . out . printf ( "" The ▁ length ▁ of ▁ the ▁ LPS ▁ is ▁ % d "" , lps ( seq . toCharArray ( ) , 0 , n - 1 ) ) ; } }","import java.lang.*; public class Main { static int max (int x , int y ){ return(x > y)? x : y ; } static int lps (String seq, int i, int j){ if (i == j) return 1; if ((seq.charAt(i) == seq.charAt(j)) && (i + 1 == j)) return 2; if (seq.charAt(i) == seq.charAt(j)) return lps(seq, i+1 ,j-1 )+ 2; return max(lps(seq, i, j-1 ), lps(seq, i+1 ,j)); } public static void main (){ String seq = ""GEEKSFORGEEKS""; int n = seq.length(); System.out.print(""The length of the LPS is: "" + lps(seq,0 ,n-1)); } } ",7.559311866760254,0.6878460601736572,0.5867530802098057,0.4608611052156844,1.0,0.622602773650979
1949,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void search ( char * pat , char * txt ) { int M = strlen ( pat ) ; int N = strlen ( txt ) ; for ( int i = 0 ; i <= N - M ; i ++ ) { int j ; for ( j = 0 ; j < M ; j ++ ) if ( txt [ i + j ] != pat [ j ] ) break ; if ( j == M ) cout << "" Pattern ▁ found ▁ at ▁ index ▁ "" << i << endl ; } } int main ( ) { char txt [ ] = "" AABAACAADAABAAABAA "" ; char pat [ ] = "" AABA "" ; search ( pat , txt ) ; return 0 ; }","public class NaiveSearch { public static void search ( String txt , String pat ) { int M = pat . length ( ) ; int N = txt . length ( ) ; for ( int i = 0 ; i <= N - M ; i ++ ) { int j ; for ( j = 0 ; j < M ; j ++ ) if ( txt . charAt ( i + j ) != pat . charAt ( j ) ) break ; if ( j == M ) System . out . println ( "" Pattern ▁ found ▁ at ▁ index ▁ "" + i ) ; } } public static void main ( String [ ] args ) { String txt = "" AABAACAADAABAAABAA "" ; String pat = "" AABA "" ; search ( txt , pat ) ; } }","import java.lang.*; class Main { public static void main(String[] args) { String txt = "" AABAACAADAABAAABAA ""; String pat = "" AABA ""; search(pat, txt); } public static void search(String pat, String txt){ int M = pat.length(); int N = txt.length(); for (int i = 0; i <= N - M; i++) { int j; for (j=0; j<M; j++) if (txt.charAt(i + j) != pat.charAt(j)) break; if (j == M) System.out.println("" Pattern found at index "" + i); } } } ",6.331605911254883,0.8027015906486841,0.7330766392805387,0.6160510987005031,1.0,0.7312357690903522
13418,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void findRoots ( int a , int b , int c ) { if ( a == 0 ) { cout << "" Invalid "" ; return ; } int d = b * b - 4 * a * c ; double sqrt_val = sqrt ( abs ( d ) ) ; if ( d > 0 ) { cout << "" Roots ▁ are ▁ real ▁ and ▁ different ▁ STRNEWLINE "" ; cout << ( double ) ( - b + sqrt_val ) / ( 2 * a ) << "" STRNEWLINE "" << ( double ) ( - b - sqrt_val ) / ( 2 * a ) ; } else if ( d == 0 ) { cout << "" Roots ▁ are ▁ real ▁ and ▁ same ▁ STRNEWLINE "" ; cout << - ( double ) b / ( 2 * a ) ; } { cout << "" Roots ▁ are ▁ complex ▁ STRNEWLINE "" ; cout << - ( double ) b / ( 2 * a ) << "" ▁ + ▁ i "" << sqrt_val << "" STRNEWLINE "" << - ( double ) b / ( 2 * a ) << "" ▁ - ▁ i "" << sqrt_val ; } } int main ( ) { int a = 1 , b = -7 , c = 12 ; findRoots ( a , b , c ) ; return 0 ; }","import java . io . * ; import static java . lang . Math . * ; class Quadratic { static void findRoots ( int a , int b , int c ) { if ( a == 0 ) { System . out . println ( "" Invalid "" ) ; return ; } int d = b * b - 4 * a * c ; double sqrt_val = sqrt ( abs ( d ) ) ; if ( d > 0 ) { System . out . println ( ""Roots are real and different NEW_LINE""); System . out . println ( ( double ) ( - b + sqrt_val ) / ( 2 * a ) + ""NEW_LINE"" + ( double ) ( - b - sqrt_val ) / ( 2 * a ) ) ; } else if ( d == 0 ) { System . out . println ( ""Roots are real and same NEW_LINE""); System . out . println ( - ( double ) b / ( 2 * a ) + ""NEW_LINE"" + - ( double ) b / ( 2 * a ) ) ; } { System . out . println ( ""Roots are complex NEW_LINE""); System . out . println ( - ( double ) b / ( 2 * a ) + "" ▁ + ▁ i "" + sqrt_val + ""NEW_LINE"" + - ( double ) b / ( 2 * a ) + "" ▁ - ▁ i "" + sqrt_val ) ; } } public static void main ( String args [ ] ) { int a = 1 , b = - 7 , c = 12 ; findRoots ( a , b , c ) ; } }","import java.lang.*; public class Main { public static void main(String[] args){ findRoots(1, -7, 12); } private static void findRoots(int a, int b, int c) { if (a == 0){ System.out.println(""Invalid""); return; } int d = b * b - 4 * a * c; double sqrt_val = Math.sqrt(Math.abs(d)); if (d > 0) { System.out.printf(""Roots are real and different\n%.2f\n%.2f"",(- b + sqrt_val)/(2.0 * a), (- b - sqrt_val)/(2.0 * a)); } else if (d == 0) { System.out.printf(""Roots are real and same\n%.2f"",- (double) b / (2.0 * a)); } else{ System.out.printf(""Roots are complex\n%.2f + i %.2f\n%.2f - i %.2f"", -(double)b / (2.0 * a), sqrt_val, -(double) b / (2.0 * a), sqrt_val); } } } ",10.53231430053711,0.5535854525874215,0.48569234442991094,0.39093804980813934,0.9473684210526316,0.5578671611814869
1687,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int ceilSearch ( int arr [ ] , int low , int high , int x ) { int i ; if ( x <= arr [ low ] ) return low ; for ( i = low ; i < high ; i ++ ) { if ( arr [ i ] == x ) return i ; if ( arr [ i ] < x && arr [ i + 1 ] >= x ) return i + 1 ; } return -1 ; } int main ( ) { int arr [ ] = { 1 , 2 , 8 , 10 , 10 , 12 , 19 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; int x = 3 ; int index = ceilSearch ( arr , 0 , n - 1 , x ) ; if ( index == -1 ) cout << "" Ceiling ▁ of ▁ "" << x << "" ▁ doesn ' t ▁ exist ▁ in ▁ array ▁ "" ; else cout << "" ceiling ▁ of ▁ "" << x << "" ▁ is ▁ "" << arr [ index ] ; return 0 ; }","class Main { static int ceilSearch ( int arr [ ] , int low , int high , int x ) { int i ; if ( x <= arr [ low ] ) return low ; for ( i = low ; i < high ; i ++ ) { if ( arr [ i ] == x ) return i ; if ( arr [ i ] < x && arr [ i + 1 ] >= x ) return i + 1 ; } return - 1 ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 2 , 8 , 10 , 10 , 12 , 19 } ; int n = arr . length ; int x = 3 ; int index = ceilSearch ( arr , 0 , n - 1 , x ) ; if ( index == - 1 ) System . out . println ( "" Ceiling ▁ of ▁ "" + x + "" ▁ doesn ' t ▁ exist ▁ in ▁ array "" ) ; else System . out . println ( "" ceiling ▁ of ▁ "" + x + "" ▁ is ▁ "" + arr [ index ] ) ; } }","import java.util.*; class Main { static int ceilSearch(int arr[], int low, int high, int x) { int i; if (x <= arr[low]) return low; for (i = low; i < high; i++) { if (arr[i] == x) return i; if (arr[i] < x && arr[i + 1] >= x) return i + 1; } return -1; } public static void main(String[] args) { int arr[] = { 1, 2, 8, 10, 10, 12, 19 }; int n = arr.length; int x = 3; int index = ceilSearch(arr, 0, n - 1, x); if (index == -1) System.out.println(""Ceiling of "" + x + "" doesn't exist in array""); else System.out.println(""ceiling of "" + x + "" is "" + arr[index]); } } ",6.675631284713745,0.8516496136860219,0.8120929922603172,0.7600778537653385,1.0,0.8320544976357369
8588,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; bool isPalRec ( char str [ ] , int s , int e ) { if ( s == e ) return true ; if ( str [ s ] != str [ e ] ) return false ; if ( s < e + 1 ) return isPalRec ( str , s + 1 , e - 1 ) ; return true ; } bool isPalindrome ( char str [ ] ) { int n = strlen ( str ) ; if ( n == 0 ) return true ; return isPalRec ( str , 0 , n - 1 ) ; } int main ( ) { char str [ ] = "" geeg "" ; if ( isPalindrome ( str ) ) cout << "" Yes "" ; else cout << "" No "" ; return 0 ; }","import java . io . * ; class GFG { static boolean isPalRec ( String str , int s , int e ) { if ( s == e ) return true ; if ( ( str . charAt ( s ) ) != ( str . charAt ( e ) ) ) return false ; if ( s < e + 1 ) return isPalRec ( str , s + 1 , e - 1 ) ; return true ; } static boolean isPalindrome ( String str ) { int n = str . length ( ) ; if ( n == 0 ) return true ; return isPalRec ( str , 0 , n - 1 ) ; } public static void main ( String args [ ] ) { String str = "" geeg "" ; if ( isPalindrome ( str ) ) System . out . println ( "" Yes "" ) ; else System . out . println ( "" No "" ) ; } }","import java.lang.*; class Main { static boolean isPalRec(String str, int s, int e) { if (s == e) return true; if ((str.charAt(s)) != (str.charAt(e))) return false; if (s < e + 1) return isPalRec(str, s+1, e-1); return true; } static boolean isPalindrome(String str) { int n = str.length(); if (n == 0) return true; return isPalRec(str, 0, n - 1); } public static void main(String[] args) { String str = ""geeg""; if (isPalindrome(str)) System.out.print(""Yes""); else System.out.print(""No""); } } ",7.527100086212158,0.8074961064704321,0.7624661750369188,0.6846339748075518,1.0,0.7792437823652862
7323,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define d  256  NEW_LINE void search ( char pat [ ] , char txt [ ] , int q ) { int M = strlen ( pat ) ; int N = strlen ( txt ) ; int i , j ; int h = 1 ; for ( i = 0 ; i < M - 1 ; i ++ ) h = ( h * d ) % q ; for ( i = 0 ; i < M ; i ++ ) { p = ( d * p + pat [ i ] ) % q ; t = ( d * t + txt [ i ] ) % q ; } for ( i = 0 ; i <= N - M ; i ++ ) { if ( p == t ) { bool flag = true ; for ( j = 0 ; j < M ; j ++ ) { if ( txt [ i + j ] != pat [ j ] ) { flag = false ; break ; } if ( flag ) cout << i << "" ▁ "" ; } if ( j == M ) cout << "" Pattern ▁ found ▁ at ▁ index ▁ "" << i << endl ; } if ( i < N - M ) { t = ( d * ( t - txt [ i ] * h ) + txt [ i + M ] ) % q ; if ( t < 0 ) t = ( t + q ) ; } } } int main ( ) { char txt [ ] = "" GEEKS ▁ FOR ▁ GEEKS "" ; char pat [ ] = "" GEEK "" ; int q = 101 ; search ( pat , txt , q ) ; return 0 ; }","public class Main { public final static int d = 256 ; static void search ( String pat , String txt , int q ) { int M = pat . length ( ) ; int N = txt . length ( ) ; int i , j ; int h = 1 ; for ( i = 0 ; i < M - 1 ; i ++ ) h = ( h * d ) % q ; for ( i = 0 ; i < M ; i ++ ) { p = ( d * p + pat . charAt ( i ) ) % q ; t = ( d * t + txt . charAt ( i ) ) % q ; } for ( i = 0 ; i <= N - M ; i ++ ) { if ( p == t ) { for ( j = 0 ; j < M ; j ++ ) { if ( txt . charAt ( i + j ) != pat . charAt ( j ) ) break ; } if ( j == M ) System . out . println ( "" Pattern ▁ found ▁ at ▁ index ▁ "" + i ) ; } if ( i < N - M ) { t = ( d * ( t - txt . charAt ( i ) * h ) + txt . charAt ( i + M ) ) % q ; if ( t < 0 ) t = ( t + q ) ; } } } public static void main ( String [ ] args ) { String txt = "" GEEKS ▁ FOR ▁ GEEKS "" ; String pat = "" GEEK "" ; int q = 101 ; search ( pat , txt , q ) ; } }","import java.lang.Math; public class Main { static final int d = 256; void search(char[] pat, char[] txt, int q) { int M = pat.length; int N = txt.length; long h = 1; for (int i = 0; i < M-1; i++) h = (h * d) % q; long p = 0, t = 0; for (int i = 0; i < M; i++) { p = (d * p + pat[i]) % q; t = (d * t + txt[i]) % q; } for (int i = 0; i <= N - M; i++) { if(p == t) { boolean flag = true; for (int j = 0; j < M; j++) { if (txt[i + j] != pat[j]) { flag = false; break; } } if(flag) System.out.println(""Found at index ""+ i); } if (i < N - M) { t = (d * (t - txt[i]*h) + txt[i + M]) % q; if(t < 0) t += q; } } } public static void main(String[] args){ String txt = ""GEEKS FOR GEEKS""; String pat = ""GEEK""; int q = 101; new Main().search(pat.toCharArray(), txt.toCharArray(), q); } } ",12.584059238433838,0.7811492753855195,0.6898414720433093,0.5564328956346524,0.8181818181818181,0.6349575723988021
1944,C++,Java,"#include <iostream> NEW_LINE using namespace std ; int count ( int n ) { int table [ n + 1 ] , i ; for ( int j = 0 ; j < n + 1 ; j ++ ) table [ j ] = 0 ; table [ 0 ] = 1 ; for ( i = 3 ; i <= n ; i ++ ) table [ i ] += table [ i - 3 ] ; for ( i = 5 ; i <= n ; i ++ ) table [ i ] += table [ i - 5 ] ; for ( i = 10 ; i <= n ; i ++ ) table [ i ] += table [ i - 10 ] ; return table [ n ] ; } int main ( void ) { int n = 20 ; cout << "" Count ▁ for ▁ "" << n << "" ▁ is ▁ "" << count ( n ) << endl ; n = 13 ; cout << "" Count ▁ for ▁ "" << n << "" ▁ is ▁ "" << count ( n ) << endl ; return 0 ; }","import java . util . Arrays ; class GFG { static int count ( int n ) { int table [ ] = new int [ n + 1 ] , i ; Arrays . fill ( table , 0 ) ; table [ 0 ] = 1 ; for ( i = 3 ; i <= n ; i ++ ) table [ i ] += table [ i - 3 ] ; for ( i = 5 ; i <= n ; i ++ ) table [ i ] += table [ i - 5 ] ; for ( i = 10 ; i <= n ; i ++ ) table [ i ] += table [ i - 10 ] ; return table [ n ] ; } public static void main ( String [ ] args ) { int n = 20 ; System . out . println ( "" Count ▁ for ▁ "" + n + "" ▁ is ▁ "" + count ( n ) ) ; n = 13 ; System . out . println ( "" Count ▁ for ▁ "" + n + "" ▁ is ▁ "" + count ( n ) ) ; } }","import java.util.*; public class Main { static int count(int n) { int[] table = new int[n + 1]; for (int j = 0; j < n + 1; ++j) table[j] = 0; table[0] = 1; for (int i = 3; i <= n; i += 3) ++table[i]; for (int i = 5; i <= n; i += 5) ++table[i]; for (int i = 10; i <= n; i += 10) ++table[i]; return table[n]; } public static void main(String[] args) { int n = 20; System.out.println(""Count for "" + n + "" is "" + count(n)); n = 13; System.out.println(""Count for "" + n + "" is "" + count(n)); } } ",7.6842591762542725,0.7670051286980311,0.6728272628700281,0.5479801275712005,1.0,0.6835860892998403
13895,C++,Java,#include <iostream> NEW_LINE #include <cmath> NEW_LINE unsigned countBits ( unsigned int number ) { return ( int ) log2 ( number ) + 1 ; } int main ( ) { unsigned int num = 65 ; std :: cout << countBits ( num ) << ' ' ; return 0 ; },import java . io . * ; class GFG { static int countBits ( int number ) { return ( int ) ( Math . log ( number ) / Math . log ( 2 ) + 1 ) ; } public static void main ( String [ ] args ) { int num = 65 ; System . out . println ( countBits ( num ) ) ; } },import java.lang.*; class Main { static int countBits (int number ){ return ( int) (Math.log(number )/Math.log(2))+1; } public static void main () { int num = 65 ; System.out.print(countBits(num)); } } ,4.5994932651519775,0.6660290584875135,0.6073088334755972,0.5033113350658638,0.923076923076923,0.6292410114691815
1010,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void calculateSpan ( int price [ ] , int n , int S [ ] ) { S [ 0 ] = 1 ; for ( int i = 1 ; i < n ; i ++ ) { S [ i ] = 1 ; for ( int j = i - 1 ; ( j >= 0 ) && ( price [ i ] >= price [ j ] ) ; j -- ) S [ i ] ++ ; } } void printArray ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; i ++ ) cout << arr [ i ] << "" ▁ "" ; } int main ( ) { int price [ ] = { 10 , 4 , 5 , 90 , 120 , 80 } ; int n = sizeof ( price ) / sizeof ( price [ 0 ] ) ; int S [ n ] ; calculateSpan ( price , n , S ) ; printArray ( S , n ) ; return 0 ; }","import java . util . Arrays ; class GFG { static void calculateSpan ( int price [ ] , int n , int S [ ] ) { S [ 0 ] = 1 ; for ( int i = 1 ; i < n ; i ++ ) { S [ i ] = 1 ; for ( int j = i - 1 ; ( j >= 0 ) && ( price [ i ] >= price [ j ] ) ; j -- ) S [ i ] ++ ; } } static void printArray ( int arr [ ] ) { System . out . print ( Arrays . toString ( arr ) ) ; } public static void main ( String [ ] args ) { int price [ ] = { 10 , 4 , 5 , 90 , 120 , 80 } ; int n = price . length ; int S [ ] = new int [ n ] ; calculateSpan ( price , n , S ) ; printArray ( S ) ; } }","import java.util.*; class Main { static void calculateSpan(int price[], int n, int S[]){ S[0] = 1; for (int i=1; i<n; i++) { S[i] = 1; for (int j=i-1; (j>=0) && (price[i]>=price[j]); j--){ S[i]++; } } } static void printArray(int arr[], int n){ for (int i=0; i<n; i++) { System.out.print(arr[i] + "" ""); } } public static void main(String[] args){ int price[] = {10, 4, 5, 90, 120, 80}; int n=price.length; int S[] = new int[n]; calculateSpan(price, n, S); printArray(S, n); } } ",8.505300998687744,0.8359788359788359,0.7890104125092833,0.7060942202276949,1.0,0.7942659541593864
12814,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; double sum ( int x , int n ) { double i , total = 1.0 , multi = x ; for ( i = 1 ; i <= n ; i ++ ) { total = total + multi / i ; multi = multi * x ; } return total ; } int main ( ) { int x = 2 ; int n = 5 ; cout << fixed << setprecision ( 2 ) << sum ( x , n ) ; return 0 ; }","class GFG { static double sum ( int x , int n ) { double i , total = 1.0 , multi = x ; for ( i = 1 ; i <= n ; i ++ ) { total = total + multi / i ; multi = multi * x ; } return total ; } public static void main ( String [ ] args ) { int x = 2 ; int n = 5 ; System . out . printf ( "" % .2f "" , sum ( x , n ) ) ; } }","import java.math.BigDecimal; import java.math.RoundingMode; public class Main { public static void main(String[] args) { int x = 2; int n = 5; System.out.println(new BigDecimal(sum(x, n)).setScale(2, RoundingMode.HALF_UP)); } public static double sum(int x, int n) { double total = 1.0; double multi = x; for (double i = 1; i <= n; i++) { total += multi / i; multi *= x; } return total; } } ",4.8658130168914795,0.7735849056603774,0.7181387543088393,0.6102175065231993,0.9411764705882353,0.7095051957427101
7012,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define NUM_LINE  2 NEW_LINE #define NUM_STATION  4 NEW_LINE int min ( int a , int b ) { return a < b ? a : b ; } int carAssembly ( int a [ ] [ NUM_STATION ] , int t [ ] [ NUM_STATION ] , int * e , int * x ) { int T1 [ NUM_STATION ] , T2 [ NUM_STATION ] , i ; T1 [ 0 ] = e [ 0 ] + a [ 0 ] [ 0 ] ; T2 [ 0 ] = e [ 1 ] + a [ 1 ] [ 0 ] ; for ( i = 1 ; i < NUM_STATION ; ++ i ) { T1 [ i ] = min ( T1 [ i - 1 ] + a [ 0 ] [ i ] , T2 [ i - 1 ] + t [ 1 ] [ i ] + a [ 0 ] [ i ] ) ; T2 [ i ] = min ( T2 [ i - 1 ] + a [ 1 ] [ i ] , T1 [ i - 1 ] + t [ 0 ] [ i ] + a [ 1 ] [ i ] ) ; } return min ( T1 [ NUM_STATION - 1 ] + x [ 0 ] , T2 [ NUM_STATION - 1 ] + x [ 1 ] ) ; } int main ( ) { int a [ ] [ NUM_STATION ] = { { 4 , 5 , 3 , 2 } , { 2 , 10 , 1 , 4 } } ; int t [ ] [ NUM_STATION ] = { { 0 , 7 , 4 , 5 } , { 0 , 9 , 2 , 8 } } ; int e [ ] = { 10 , 12 } , x [ ] = { 18 , 7 } ; cout << carAssembly ( a , t , e , x ) ; return 0 ; }","import java . io . * ; class GFG { static int NUM_LINE = 2 ; static int NUM_STATION = 4 ; static int min ( int a , int b ) { return a < b ? a : b ; } static int carAssembly ( int a [ ] [ ] , int t [ ] [ ] , int e [ ] , int x [ ] ) { int T1 [ ] = new int [ NUM_STATION ] ; int T2 [ ] = new int [ NUM_STATION ] ; int i ; T1 [ 0 ] = e [ 0 ] + a [ 0 ] [ 0 ] ; T2 [ 0 ] = e [ 1 ] + a [ 1 ] [ 0 ] ; for ( i = 1 ; i < NUM_STATION ; ++ i ) { T1 [ i ] = min ( T1 [ i - 1 ] + a [ 0 ] [ i ] , T2 [ i - 1 ] + t [ 1 ] [ i ] + a [ 0 ] [ i ] ) ; T2 [ i ] = min ( T2 [ i - 1 ] + a [ 1 ] [ i ] , T1 [ i - 1 ] + t [ 0 ] [ i ] + a [ 1 ] [ i ] ) ; } return min ( T1 [ NUM_STATION - 1 ] + x [ 0 ] , T2 [ NUM_STATION - 1 ] + x [ 1 ] ) ; } public static void main ( String [ ] args ) { int a [ ] [ ] = { { 4 , 5 , 3 , 2 } , { 2 , 10 , 1 , 4 } } ; int t [ ] [ ] = { { 0 , 7 , 4 , 5 } , { 0 , 9 , 2 , 8 } } ; int e [ ] = { 10 , 12 } , x [ ] = { 18 , 7 } ; System . out . println ( carAssembly ( a , t , e , x ) ) ; } }","import java.lang.*; public class Main { static int min(int a, int b) { return (a < b) ? a : b; } static int carAssembly(int[][] a, int[][] t, int[] e, int[] x) { int NUM_STATION = 4; // assuming it as final since its not changing in method. int T1[] = new int[NUM_STATION]; int T2[] = new int[NUM_STATION]; T1[0] = e[0] + a[0][0]; T2[0] = e[1] + a[1][0]; for(int i = 1; i < NUM_STATION; ++i) { T1[i] = min(T1[i-1]+a[0][i], T2[i-1]+t[1][i]+a[0][i]); T2[i] = min(T2[i-1]+a[1][i], T1[i-1]+t[0][i]+a[1][i]); } return min(T1[NUM_STATION-1]+x[0], T2[NUM_STATION-1]+x[1]); } public static void main (String[] args) { int a[][] = {{4, 5, 3, 2},{2, 10, 1, 4}}; int t[][] = {{0, 7, 4, 5},{0, 9, 2, 8}}; int e[] = {10, 12}; int x[] = {18, 7}; System.out.println(carAssembly(a, t, e, x)); } } ",15.902650117874146,0.8615066327281975,0.811034598420026,0.7308415354539992,0.9473684210526316,0.7957996011335889
2066,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define INT_SIZE  32 NEW_LINE int getSingle ( int arr [ ] , int n ) { int result = 0 ; int x , sum ; for ( int i = 0 ; i < INT_SIZE ; i ++ ) { sum = 0 ; x = ( 1 << i ) ; for ( int j = 0 ; j < n ; j ++ ) { if ( arr [ j ] & x ) sum ++ ; } if ( ( sum % 3 ) != 0 ) result |= x ; } return result ; } int main ( ) { int arr [ ] = { 12 , 1 , 12 , 3 , 12 , 1 , 1 , 2 , 3 , 2 , 2 , 3 , 7 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" The ▁ element ▁ with ▁ single ▁ occurrence ▁ is ▁ "" << getSingle ( arr , n ) ; return 0 ; }","class GFG { static final int INT_SIZE = 32 ; static int getSingle ( int arr [ ] , int n ) { int result = 0 ; int x , sum ; for ( int i = 0 ; i < INT_SIZE ; i ++ ) { sum = 0 ; x = ( 1 << i ) ; for ( int j = 0 ; j < n ; j ++ ) { if ( ( arr [ j ] & x ) == 0 ) sum ++ ; } if ( ( sum % 3 ) != 0 ) result |= x ; } return result ; } public static void main ( String args [ ] ) { int arr [ ] = { 12 , 1 , 12 , 3 , 12 , 1 , 1 , 2 , 3 , 2 , 2 , 3 , 7 } ; int n = arr . length ; System . out . println ( "" The ▁ element ▁ with ▁ single ▁ occurrence ▁ is ▁ "" + getSingle ( arr , n ) ) ; } }","import java.util.*; public class Main { static int getSingle(int[] arr, int n){ int result = 0; int sum; for (int i = 0; i < 32; i++) { sum = 0; int x = (1 << i); for (int j = 0; j < n; j++) { if ((arr[j] & x) != 0 ){ sum ++ ; } } if((sum % 3) != 0){ result |= x; } } return result; } public static void main(String[] args){ int arr[]={12, 1, 12, 3, 12, 1, 1, 2, 3, 2, 2, 3, 7}; int n = arr.length; System.out.print(""The element with a single occurrence is ""+getSingle(arr, n)); } } ",10.876331090927124,0.8600589144544365,0.787265002046981,0.686416849376201,0.9473684210526316,0.7647023208791301
1584,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int minJumps ( int arr [ ] , int n ) { if ( n == 1 ) return 0 ; int res = INT_MAX ; for ( int i = n - 2 ; i >= 0 ; i -- ) { if ( i + arr [ i ] >= n - 1 ) { int sub_res = minJumps ( arr , i + 1 ) ; if ( sub_res != INT_MAX ) res = min ( res , sub_res + 1 ) ; } } return res ; } int main ( ) { int arr [ ] = { 1 , 3 , 6 , 3 , 2 , 3 , 6 , 8 , 9 , 5 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" Minimum ▁ number ▁ of ▁ jumps ▁ to "" ; cout << "" ▁ reach ▁ the ▁ end ▁ is ▁ "" << minJumps ( arr , n ) ; return 0 ; }","import java . util . * ; import java . io . * ; class GFG { static int minJumps ( int arr [ ] , int l , int h ) { if ( h == l ) return 0 ; if ( arr [ l ] == 0 ) return Integer . MAX_VALUE ; int min = Integer . MAX_VALUE ; for ( int i = l + 1 ; i <= h && i <= l + arr [ l ] ; i ++ ) { int jumps = minJumps ( arr , i , h ) ; if ( jumps != Integer . MAX_VALUE && jumps + 1 < min ) min = jumps + 1 ; } return min ; } public static void main ( String args [ ] ) { int arr [ ] = { 1 , 3 , 6 , 3 , 2 , 3 , 6 , 8 , 9 , 5 } ; int n = arr . length ; System . out . print ( "" Minimum ▁ number ▁ of ▁ jumps ▁ to ▁ reach ▁ end ▁ is ▁ "" + minJumps ( arr , 0 , n - 1 ) ) ; } }","import java.util.*; public class Main { static int minJumps(int[] arr, int n) { if (n == 1) return 0; Integer res = Integer.MAX_VALUE; for (int i = n - 2; i >= 0; i--) { if (i + arr[i] >= n - 1) { Integer subRes = minJumps(Arrays.copyOfRange(arr, 0, i + 1), i + 1); if (!subRes.equals(Integer.MAX_VALUE)) res = Math.min(res, subRes+1); } } return res; } public static void main (String[] args) { int arr[] = {1, 3, 6, 3, 2, 3, 6, 8, 9, 5}; System.out.print(""Minimum number of jumps to reach the end is ""); System.out.println(minJumps(arr, arr.length)); } } ",8.60064172744751,0.6434642375113472,0.5126644815155432,0.35453858293958607,1.0,0.5481770080577102
1531,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void print2largest ( int arr [ ] , int arr_size ) { int i , first , second ; if ( arr_size < 2 ) { cout << "" ▁ Invalid ▁ Input ▁ "" ; return ; } first = second = INT_MIN ; for ( i = 0 ; i < arr_size ; i ++ ) { if ( arr [ i ] > first ) { second = first ; first = arr [ i ] ; } else if ( arr [ i ] > second && arr [ i ] != first ) { second = arr [ i ] ; } } if ( second == INT_MIN ) cout << "" There ▁ is ▁ no ▁ second ▁ largest "" "" element STRNEWLINE "" ; else cout << "" The ▁ second ▁ largest ▁ element ▁ is ▁ "" << second ; } int main ( ) { int arr [ ] = { 12 , 35 , 1 , 10 , 34 , 1 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; print2largest ( arr , n ) ; return 0 ; }","class GFG { public static void print2largest ( int arr [ ] , int arr_size ) { int i , first , second ; if ( arr_size < 2 ) { System . out . print ( "" ▁ Invalid ▁ Input ▁ "" ) ; return ; } first = second = Integer . MIN_VALUE ; for ( i = 0 ; i < arr_size ; i ++ ) { if ( arr [ i ] > first ) { second = first ; first = arr [ i ] ; } else if ( arr [ i ] > second && arr [ i ] != first ) second = arr [ i ] ; } if ( second == Integer . MIN_VALUE ) System . out . print ( "" There ▁ is ▁ no ▁ second ▁ largest "" + "" elementNEW_LINE""); else System . out . print ( "" The ▁ second ▁ largest ▁ element "" + "" ▁ is ▁ "" + second ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 12 , 35 , 1 , 10 , 34 , 1 } ; int n = arr . length ; print2largest ( arr , n ) ; } }","import java.util.*; public class Main { public static void print2Largest (int[] arr, int arrSize) { if(arrSize < 2){ System.out.println("" Invalid Input ""); return; } int first, second; first= second= Integer.MIN_VALUE; for(int i = 0; i < arrSize; i++) { if(arr[i] > first){ second = first; first = arr[i]; } else if (arr[i] > second && arr[i] != first){ second = arr[i]; } } if(second == Integer.MIN_VALUE) System.out.println(""There is no second largest element""); else System.out.println(""The second largest element is "" + second); } public static void main (String[] args) { int arr[] = {12, 35, 1, 10, 34, 1}; int n = arr.length; print2Largest(arr, n); } } ",7.503188133239746,0.7406715092792873,0.6607402293019022,0.556072401828883,1.0,0.689250681280218
1015,C++,Java,"#include <iostream> NEW_LINE using namespace std ; void printNGE ( int arr [ ] , int n ) { int next , i , j ; for ( i = 0 ; i < n ; i ++ ) { next = -1 ; for ( j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] < arr [ j ] ) { next = arr [ j ] ; break ; } } cout << arr [ i ] << "" ▁ - - ▁ "" << next << endl ; } } int main ( ) { int arr [ ] = { 11 , 13 , 21 , 3 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; printNGE ( arr , n ) ; return 0 ; }","class Main { static void printNGE ( int arr [ ] , int n ) { int next , i , j ; for ( i = 0 ; i < n ; i ++ ) { next = - 1 ; for ( j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] < arr [ j ] ) { next = arr [ j ] ; break ; } } System . out . println ( arr [ i ] + "" ▁ - - ▁ "" + next ) ; } } public static void main ( String args [ ] ) { int arr [ ] = { 11 , 13 , 21 , 3 } ; int n = arr . length ; printNGE ( arr , n ) ; } }","import java.util.*; public class Main { static void printNGE (int arr[], int n) { int next, i, j; for(i=0; i<n; i++) { next = -1; for(j=i+1; j<n; j++) { if(arr[i] < arr[j]) { next = arr[j]; break; } } System.out<｜begin▁of▁sentence｜>.print(arr[i] + "" -- "" + next); } } public static void main (String[] args) { int arr[] = {11, 13, 21, 3}; int n = arr.length; printNGE(arr, n); } } ",4.904725074768066,0.828609035192211,0.7860512363376188,0.7105425049268537,1.0,0.7973797534487975
2174,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void nextGreatest ( int arr [ ] , int size ) { int max_from_right = arr [ size - 1 ] ; arr [ size - 1 ] = -1 ; for ( int i = size - 2 ; i >= 0 ; i -- ) { int temp = arr [ i ] ; arr [ i ] = max_from_right ; if ( max_from_right < temp ) max_from_right = temp ; } } void printArray ( int arr [ ] , int size ) { int i ; for ( i = 0 ; i < size ; i ++ ) cout << arr [ i ] << "" ▁ "" ; cout << endl ; } int main ( ) { int arr [ ] = { 16 , 17 , 4 , 3 , 5 , 2 } ; int size = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; nextGreatest ( arr , size ) ; cout << "" The ▁ modified ▁ array ▁ is : ▁ STRNEWLINE "" ; printArray ( arr , size ) ; return ( 0 ) ; }","import java . io . * ; class NextGreatest { static void nextGreatest ( int arr [ ] ) { int size = arr . length ; int max_from_right = arr [ size - 1 ] ; arr [ size - 1 ] = - 1 ; for ( int i = size - 2 ; i >= 0 ; i -- ) { int temp = arr [ i ] ; arr [ i ] = max_from_right ; if ( max_from_right < temp ) max_from_right = temp ; } } static void printArray ( int arr [ ] ) { for ( int i = 0 ; i < arr . length ; i ++ ) System . out . print ( arr [ i ] + "" ▁ "" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 16 , 17 , 4 , 3 , 5 , 2 } ; nextGreatest ( arr ) ; System . out . println ( "" The ▁ modified ▁ array : "" ) ; printArray ( arr ) ; } }","import java.util.*; public class Main { static void nextGreatest(int[] arr, int size) { int max_from_right = arr[size - 1]; arr[size - 1] = -1; for (int i = size - 2; i >= 0; i--) { int temp = arr[i]; arr[i] = max_from_right; if (max_from_right < temp) max_from_right = temp; } } static void printArray(int[] arr, int size) { for (int i = 0; i < size; i++) System.out<｜begin▁of▁sentence｜>("" "" + arr[i]); System.out.println(); } public static void main(String [] args){ int[] arr = {16, 17, 4, 3, 5, 2}; int size = arr.length; nextGreatest(arr, size); System.out.println(""The modified array is:""); printArray(arr, size); } } ",8.899499893188477,0.8549222797927462,0.7781837496289219,0.6665901269474399,1.0,0.7666130888632079
11738,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; double sum ( int n ) { double i , s = 0.0 ; for ( i = 1 ; i <= n ; i ++ ) s = s + 1 / i ; return s ; } int main ( ) { int n = 5 ; cout << "" Sum ▁ is ▁ "" << sum ( n ) ; return 0 ; }","import java . io . * ; class GFG { static double sum ( int n ) { double i , s = 0.0 ; for ( i = 1 ; i <= n ; i ++ ) s = s + 1 / i ; return s ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . printf ( "" Sum ▁ is ▁ % f "" , sum ( n ) ) ; } }","import java.util.*; public class Main { static double sum ( int n ){ double i, s = 0.0 ; for ( i=1 ; i<=n; i++) s = s + 1/i; return s; } public static void main(String [] args){ int n = 5; System.out.println(""Sum is "" + sum (n)); } } ",4.667909860610962,0.7204830627086241,0.6376049321810605,0.5216324476880375,1.0,0.6651427133816262
1981,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int getMedian ( int ar1 [ ] , int ar2 [ ] , int n ) { int i = 0 ; int j = 0 ; int count ; int m1 = -1 , m2 = -1 ; for ( count = 0 ; count <= n ; count ++ ) { if ( i == n ) { m1 = m2 ; m2 = ar2 [ 0 ] ; break ; } else if ( j == n ) { m1 = m2 ; m2 = ar1 [ 0 ] ; break ; } if ( ar1 [ i ] <= ar2 [ j ] ) { m1 = m2 ; m2 = ar1 [ i ] ; i ++ ; } else { m1 = m2 ; m2 = ar2 [ j ] ; j ++ ; } } return ( m1 + m2 ) / 2 ; } int main ( ) { int ar1 [ ] = { 1 , 12 , 15 , 26 , 38 } ; int ar2 [ ] = { 2 , 13 , 17 , 30 , 45 } ; int n1 = sizeof ( ar1 ) / sizeof ( ar1 [ 0 ] ) ; int n2 = sizeof ( ar2 ) / sizeof ( ar2 [ 0 ] ) ; if ( n1 == n2 ) cout << "" Median ▁ is ▁ "" << getMedian ( ar1 , ar2 , n1 ) ; else cout << "" Doesn ' t ▁ work ▁ for ▁ arrays "" << "" ▁ of ▁ unequal ▁ size "" ; getchar ( ) ; return 0 ; }","class Main { static int getMedian ( int ar1 [ ] , int ar2 [ ] , int n ) { int i = 0 ; int j = 0 ; int count ; int m1 = - 1 , m2 = - 1 ; for ( count = 0 ; count <= n ; count ++ ) { if ( i == n ) { m1 = m2 ; m2 = ar2 [ 0 ] ; break ; } else if ( j == n ) { m1 = m2 ; m2 = ar1 [ 0 ] ; break ; } if ( ar1 [ i ] <= ar2 [ j ] ) { m1 = m2 ; m2 = ar1 [ i ] ; i ++ ; } else { m1 = m2 ; m2 = ar2 [ j ] ; j ++ ; } } return ( m1 + m2 ) / 2 ; } public static void main ( String [ ] args ) { int ar1 [ ] = { 1 , 12 , 15 , 26 , 38 } ; int ar2 [ ] = { 2 , 13 , 17 , 30 , 45 } ; int n1 = ar1 . length ; int n2 = ar2 . length ; if ( n1 == n2 ) System . out . println ( "" Median ▁ is ▁ "" + getMedian ( ar1 , ar2 , n1 ) ) ; else System . out . println ( "" arrays ▁ are ▁ of ▁ unequal ▁ size "" ) ; } }","import java.util.*; public class Main { static int getMedian(int ar1[], int ar2[], int n){ int i = 0, j = 0, count; int m1 = -1, m2 = -1; for (count=0; count<=n; ++count) { if (i==n) { m1=m2; m2=ar2[0]; break; } else if(j == n){ m1 = m2; m2 = ar1[0]; break; } if (ar1[i]<=ar2[j]) { m1=m2; m2=ar1[i++]; } else{ m1=m2; m2=ar2[j++]; } } return (m1 + m2) / 2; } public static void main(String[] args){ int ar1[] = {1, 12, 15, 26, 38}; int ar2[] = {2, 13, 17, 30, 45}; int n1 = ar1.length;//sizeof(ar1)/sizeof(ar1[0]); int n2 = ar2.length;//sizeof(ar2)/sizeof(ar2[0]); if (n1==n2) System.out.println(""Median is "" + getMedian(ar1, ar2, n1)); else System.out.println(""Doesn't work for arrays of unequal size""); } } ",9.635705947875977,0.7615113330576039,0.6911028928703731,0.600527825350389,1.0,0.7203694777452723
13443,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int seriesSum ( int calculated , int current , int N ) { int i , cur = 1 ; if ( current == N + 1 ) return 0 ; for ( i = calculated ; i < calculated + current ; i ++ ) cur *= i ; return cur + seriesSum ( i , current + 1 , N ) ; } int main ( ) { int N = 5 ; cout << seriesSum ( 1 , 1 , N ) << endl ; return 0 ; }","class GFG { static int seriesSum ( int calculated , int current , int N ) { int i , cur = 1 ; if ( current == N + 1 ) return 0 ; for ( i = calculated ; i < calculated + current ; i ++ ) cur *= i ; return cur + seriesSum ( i , current + 1 , N ) ; } public static void main ( String [ ] args ) { int N = 5 ; System . out . println ( seriesSum ( 1 , 1 , N ) ) ; } }","import java.util.*; public class Main { public static void main(String[] args) { int N = 5; System.out.println(seriesSum(1, 1, N)); } public static int seriesSum(int calculated, int current, int N){ int i, cur = 1; if (current == N+1) return 0; for(i = calculated; i < calculated + current; i++){ cur *= i; } return cur + seriesSum(i, current+1, N); } } ",5.937903165817261,0.875,0.8295220287108142,0.763969673940412,1.0,0.8347787717582884
2291,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int getMissingNo ( int a [ ] , int n ) { int total = ( n + 1 ) * ( n + 2 ) / 2 ; for ( int i = 0 ; i < n ; i ++ ) total -= a [ i ] ; return total ; } int main ( ) { int arr [ ] = { 1 , 2 , 4 , 5 , 6 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; int miss = getMissingNo ( arr , n ) ; cout << miss ; }","import java . util . * ; import java . util . Arrays ; class GFG { public static List < Integer > findDisappearedNumbers ( int [ ] nums ) { for ( int i = 0 ; i < nums . length ; i ++ ) { int index = Math . abs ( nums [ i ] ) ; if ( nums [ index - 1 ] > 0 ) { nums [ index - 1 ] *= - 1 ; } } List < Integer > res = new ArrayList < > ( ) ; for ( int i = 0 ; i < nums . length ; i ++ ) { if ( nums [ i ] > 0 ) { res . add ( i + 1 ) ; } } return res ; } public static void main ( String [ ] args ) { int [ ] a = { 1 , 2 , 4 , 5 , 6 } ; System . out . println ( findDisappearedNumbers ( a ) ) ; } }","import java.util.*; public class Main { static int getMissingNo (int a[], int n) { int total = ((n + 1) * (n + 2)) / 2; for (int i = 0; i < n; i++) total -= a[i]; return total; } public static void main(String args[]){ int arr[] = {1, 2, 4, 5, 6}; int n = arr.length; int miss = getMissingNo (arr, n); System.out.println(miss); } } ",5.391080141067505,0.40918609775031434,0.30883642767939556,0.2030530370139917,0.888888888888889,0.4088037925764608
4857,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void flip ( int arr [ ] , int i ) { int temp , start = 0 ; while ( start < i ) { temp = arr [ start ] ; arr [ start ] = arr [ i ] ; arr [ i ] = temp ; start ++ ; i -- ; } } int findMax ( int arr [ ] , int n ) { int mi , i ; for ( mi = 0 , i = 0 ; i < n ; ++ i ) if ( arr [ i ] > arr [ mi ] ) mi = i ; return mi ; } void pancakeSort ( int * arr , int n ) { for ( int curr_size = n ; curr_size > 1 ; -- curr_size ) { int mi = findMax ( arr , curr_size ) ; if ( mi != curr_size - 1 ) { flip ( arr , mi ) ; flip ( arr , curr_size - 1 ) ; } } } void printArray ( int arr [ ] , int n ) { for ( int i = 0 ; i < n ; ++ i ) cout << arr [ i ] << "" ▁ "" ; } int main ( ) { int arr [ ] = { 23 , 10 , 20 , 11 , 12 , 6 , 7 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; pancakeSort ( arr , n ) ; cout << "" Sorted ▁ Array ▁ "" << endl ; printArray ( arr , n ) ; return 0 ; }","import java . io . * ; class PancakeSort { static void flip ( int arr [ ] , int i ) { int temp , start = 0 ; while ( start < i ) { temp = arr [ start ] ; arr [ start ] = arr [ i ] ; arr [ i ] = temp ; start ++ ; i -- ; } } static int findMax ( int arr [ ] , int n ) { int mi , i ; for ( mi = 0 , i = 0 ; i < n ; ++ i ) if ( arr [ i ] > arr [ mi ] ) mi = i ; return mi ; } static int pancakeSort ( int arr [ ] , int n ) { for ( int curr_size = n ; curr_size > 1 ; -- curr_size ) { int mi = findMax ( arr , curr_size ) ; if ( mi != curr_size - 1 ) { flip ( arr , mi ) ; flip ( arr , curr_size - 1 ) ; } } return 0 ; } static void printArray ( int arr [ ] , int arr_size ) { for ( int i = 0 ; i < arr_size ; i ++ ) System . out . print ( arr [ i ] + "" ▁ "" ) ; System . out . println ( "" "" ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 23 , 10 , 20 , 11 , 12 , 6 , 7 } ; int n = arr . length ; pancakeSort ( arr , n ) ; System . out . println ( "" Sorted ▁ Array : ▁ "" ) ; printArray ( arr , n ) ; } }","import java.util.*; public class Main { public static void flip(int[] arr, int i){ int temp, start = 0; while (start < i) { temp = arr[start]; arr[start] = arr[i]; arr[i] = temp; start++; i--; } } public static int findMax(int[] arr, int n){ int mi = 0, i; for (i=0 ; i<n; ++i) { if (arr[i] > arr[mi]) { mi = i; } } return mi; } public static void pancakeSort(int[] arr, int n){ for (int curr_size=n ; curr_size>1;--curr_size) { int mi = findMax(arr, curr_size); if (mi != curr_size-1) { flip(arr, mi); flip(arr, curr_size-1); } } } public static void printArray(int[] arr, int n){ for (int i=0 ;i<n; ++i) { System.out.print(arr[i]+"" ""); } } public static void main(){ int[] arr ={23 ,10 ,20, 11, 12, 6, 7}; int n= arr.length; pancakeSort(arr,n); System.out.println(""Sorted Array ""); printArray(arr,n); } } ",12.623867988586426,0.7756506066822817,0.7050597244516574,0.583864388484755,0.9473684210526316,0.692915598255118
1844,C++,Java,"#include <bits/stdc++.h> NEW_LINE #include <limits.h> NEW_LINE #define R  3 NEW_LINE #define C  3 NEW_LINE using namespace std ; int min ( int x , int y , int z ) ; int minCost ( int cost [ R ] [ C ] , int m , int n ) { int i , j ; int tc [ R ] [ C ] ; tc [ 0 ] [ 0 ] = cost [ 0 ] [ 0 ] ; for ( i = 1 ; i <= m ; i ++ ) tc [ i ] [ 0 ] = tc [ i - 1 ] [ 0 ] + cost [ i ] [ 0 ] ; for ( j = 1 ; j <= n ; j ++ ) tc [ 0 ] [ j ] = tc [ 0 ] [ j - 1 ] + cost [ 0 ] [ j ] ; for ( i = 1 ; i <= m ; i ++ ) for ( j = 1 ; j <= n ; j ++ ) tc [ i ] [ j ] = min ( tc [ i - 1 ] [ j - 1 ] , tc [ i - 1 ] [ j ] , tc [ i ] [ j - 1 ] ) + cost [ i ] [ j ] ; return tc [ m ] [ n ] ; } int min ( int x , int y , int z ) { if ( x < y ) return ( x < z ) ? x : z ; else return ( y < z ) ? y : z ; } int main ( ) { int cost [ R ] [ C ] = { { 1 , 2 , 3 } , { 4 , 8 , 2 } , { 1 , 5 , 3 } } ; cout << "" ▁ "" << minCost ( cost , 2 , 2 ) ; return 0 ; }","import java . util . * ; class MinimumCostPath { private static int minCost ( int cost [ ] [ ] , int m , int n ) { int i , j ; int tc [ ] [ ] = new int [ m + 1 ] [ n + 1 ] ; tc [ 0 ] [ 0 ] = cost [ 0 ] [ 0 ] ; for ( i = 1 ; i <= m ; i ++ ) tc [ i ] [ 0 ] = tc [ i - 1 ] [ 0 ] + cost [ i ] [ 0 ] ; for ( j = 1 ; j <= n ; j ++ ) tc [ 0 ] [ j ] = tc [ 0 ] [ j - 1 ] + cost [ 0 ] [ j ] ; for ( i = 1 ; i <= m ; i ++ ) for ( j = 1 ; j <= n ; j ++ ) tc [ i ] [ j ] = min ( tc [ i - 1 ] [ j - 1 ] , tc [ i - 1 ] [ j ] , tc [ i ] [ j - 1 ] ) + cost [ i ] [ j ] ; return tc [ m ] [ n ] ; } private static int min ( int x , int y , int z ) { if ( x < y ) return ( x < z ) ? x : z ; else return ( y < z ) ? y : z ; } public static void main ( String args [ ] ) { int cost [ ] [ ] = { { 1 , 2 , 3 } , { 4 , 8 , 2 } , { 1 , 5 , 3 } } ; System . out . println ( minCost ( cost , 2 , 2 ) ) ; } }","import java.lang.*; public class Main { static final int R = 3; static final int C = 3; public static void main(String[] args) { int cost[][] = {{1, 2, 3}, {4, 8, 2}, {1, 5, 3}}; System.out.println(minCost(cost, 2, 2)); } public static int minCost(int cost[][], int m, int n) { int tc[][] = new int[R][C]; tc[0][0] = cost[0][0]; for(int i = 1; i <= m; i++){ tc[i][0] = tc[i-1][0] + cost[i][0]; } for(int j=1; j<=n; j++) { tc[0][j] = tc[0][j-1] + cost[0][j]; } for(int i=1; i<=m; i++) { for(int j=1; j<=n; j++) { tc[i][j] = min(tc[i-1][j-1], tc[i-1][j], tc[i][j-1]) + cost[i][j]; } } return tc[m][n]; } public static int min(int x, int y, int z) { if (x < y) { return (x<z)?x:z; } else { return (y<z)?y:z; } } } ",14.462225914001465,0.8291891809789081,0.7672573058066816,0.6735119300853866,0.9166666666666666,0.7464583510597705
2012,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int count ( int n ) { if ( n < 3 ) return n ; if ( n >= 3 && n < 10 ) return n - 1 ; int po = 1 ; while ( n / po > 9 ) po = po * 10 ; int msd = n / po ; if ( msd != 3 ) return count ( msd ) * count ( po - 1 ) + count ( msd ) + count ( n % po ) ; else return count ( msd * po - 1 ) ; } int main ( ) { cout << count ( 578 ) << "" ▁ "" ; return 0 ; }",import java . io . * ; class GFG { static int count ( int n ) { if ( n < 3 ) return n ; if ( n >= 3 && n < 10 ) return n - 1 ; int po = 1 ; while ( n / po > 9 ) po = po * 10 ; int msd = n / po ; if ( msd != 3 ) return count ( msd ) * count ( po - 1 ) + count ( msd ) + count ( n % po ) ; else return count ( msd * po - 1 ) ; } public static void main ( String [ ] args ) { int n = 578 ; System . out . println ( count ( n ) ) ; } },public class Main { public static void main(String[] args){ System.out.print(count(578)); } static int count(int n) { if (n < 3) return n; if (n >= 3 && n < 10) return n - 1; int po = 1; while (n / po > 9) po *= 10; int msd = n / po; if (msd != 3) return count(msd) * count(po - 1) + count(msd) + count(n % po); else return count(msd * po - 1); } } ,4.1190972328186035,0.861813381430269,0.833470716164167,0.7936465344519376,1.0,0.8555525741163563
13911,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int isKthBitSet ( int x , int k ) { return ( x & ( 1 << ( k - 1 ) ) ) ? 1 : 0 ; } int leftmostSetBit ( int x ) { int count = 0 ; while ( x ) { count ++ ; x = x >> 1 ; } return count ; } int isBinPalindrome ( int x ) { int l = leftmostSetBit ( x ) ; int r = 1 ; while ( l > r ) { if ( isKthBitSet ( x , l ) != isKthBitSet ( x , r ) ) return 0 ; l -- ; r ++ ; } return 1 ; } int findNthPalindrome ( int n ) { int pal_count = 0 ; int i = 0 ; for ( i = 1 ; i <= INT_MAX ; i ++ ) { if ( isBinPalindrome ( i ) ) { pal_count ++ ; } if ( pal_count == n ) break ; } return i ; } int main ( ) { int n = 9 ; cout << findNthPalindrome ( n ) ; }","import java . io . * ; class GFG { static int INT_MAX = 2147483647 ; static int isKthBitSet ( int x , int k ) { return ( ( x & ( 1 << ( k - 1 ) ) ) > 0 ) ? 1 : 0 ; } static int leftmostSetBit ( int x ) { int count = 0 ; while ( x > 0 ) { count ++ ; x = x >> 1 ; } return count ; } static int isBinPalindrome ( int x ) { int l = leftmostSetBit ( x ) ; int r = 1 ; while ( l > r ) { if ( isKthBitSet ( x , l ) != isKthBitSet ( x , r ) ) return 0 ; l -- ; r ++ ; } return 1 ; } static int findNthPalindrome ( int n ) { int pal_count = 0 ; int i = 0 ; for ( i = 1 ; i <= INT_MAX ; i ++ ) { if ( isBinPalindrome ( i ) > 0 ) { pal_count ++ ; } if ( pal_count == n ) break ; } return i ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . println ( findNthPalindrome ( n ) ) ; } }","import java.lang.*; class Main { static int isKthBitSet (int x, int k) { return ((x & (1 << (k - 1))) != 0) ? 1 : 0; } static int leftmostSetBit (int x) { int count = 0; while (x > 0) { count++; x = x >> 1; } return count; } static int isBinPalindrome(int x){ int l = leftmostSetBit(x); int r = 1; while (l > r) { if (isKthBitSet(x, l) != isKthBitSet(x, r)) return 0; l--; r++; } return 1; } static int findNthPalindrome(int n){ int pal_count = 0; for (int i = 1; i <= Integer.MAX_VALUE; i++) { if (isBinPalindrome(i) != 0) pal_count++; if (pal_count == n) return i; } return -1; // Return error value if no such number is found. } public static void main(String[] args){ int n = 9; System.out.println(findNthPalindrome(n)); } } ",11.534937858581543,0.872356437960755,0.837424682565913,0.7781043773016394,1.0,0.8446730641111475
9298,C++,Java,"#include <iostream> NEW_LINE using namespace std ; void CalPeri ( ) { int s = 5 , Perimeter ; Perimeter = 10 * s ; cout << "" The ▁ Perimeter ▁ of ▁ Decagon ▁ is ▁ : ▁ "" << Perimeter ; } int main ( ) { CalPeri ( ) ; return 0 ; }","import java . io . * ; class GFG { static void CalPeri ( ) { int S = 5 , Perimeter ; Perimeter = 10 * S ; System . out . println ( "" The ▁ Perimeter ▁ of ▁ Decagon ▁ is ▁ : ▁ "" + Perimeter ) ; } public static void main ( String [ ] args ) { CalPeri ( ) ; } }","import java.util.*; public class Main { public static void main(String[] args){ int s = 5, Perimeter; Perimeter = 10 * s; System.out.println("" The Perimeter of Decagon is : ""+Perimeter); } } ",2.0658700466156006,0.5289847841969808,0.42570584725752786,0.3206934872215414,1.0,0.524485441055079
1704,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int fact ( int n ) ; void printRepeating ( int arr [ ] , int size ) { int S = 0 ; int P = 1 ; int x , y ; int D ; int n = size - 2 , i ; for ( i = 0 ; i < size ; i ++ ) { S = S + arr [ i ] ; P = P * arr [ i ] ; } S = S - n * ( n + 1 ) / 2 ; P = P / fact ( n ) ; D = sqrt ( S * S - 4 * P ) ; x = ( D + S ) / 2 ; y = ( S - D ) / 2 ; cout << "" The ▁ two ▁ Repeating ▁ elements ▁ are ▁ "" << x << "" ▁ & ▁ "" << y ; } int fact ( int n ) { return ( n == 0 ) ? 1 : n * fact ( n - 1 ) ; } int main ( ) { int arr [ ] = { 4 , 2 , 4 , 5 , 2 , 3 , 1 } ; int arr_size = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; printRepeating ( arr , arr_size ) ; return 0 ; }","class RepeatElement { void printRepeating ( int arr [ ] , int size ) { int S = 0 ; int P = 1 ; int x , y ; int D ; int n = size - 2 , i ; for ( i = 0 ; i < size ; i ++ ) { S = S + arr [ i ] ; P = P * arr [ i ] ; } S = S - n * ( n + 1 ) / 2 ; P = P / fact ( n ) ; D = ( int ) Math . sqrt ( S * S - 4 * P ) ; x = ( D + S ) / 2 ; y = ( S - D ) / 2 ; System . out . println ( "" The ▁ two ▁ repeating ▁ elements ▁ are ▁ : "" ) ; System . out . print ( x + "" ▁ "" + y ) ; } int fact ( int n ) { return ( n == 0 ) ? 1 : n * fact ( n - 1 ) ; } public static void main ( String [ ] args ) { RepeatElement repeat = new RepeatElement ( ) ; int arr [ ] = { 4 , 2 , 4 , 5 , 2 , 3 , 1 } ; int arr_size = arr . length ; repeat . printRepeating ( arr , arr_size ) ; } }","import java.lang.*; // for Math related classes like Math.sqrt() etc. import java.util.*; // for ArrayList public class Main { static int fact(int n); static void printRepeating(ArrayList<Integer> arr) { int size = arr.size(); int S = 0, P = 1; int D, x, y; int n = size - 2; for (int i = 0; i < size; i++) { S += arr.get(i); P *= arr.get(i); } S = S - n * (n + 1) / 2 ; P = P / fact(n) ; D = (int) Math.sqrt((S * S ) - (4 * P)); x = (D + S) / 2; y = (S - D) / 2; System.out.println(""The two repeating elements are ""+x+"" & ""+y); } static int fact(int n) { return (n == 0)? 1: n * fact(n-1); } public static void main(String[] args) { ArrayList<Integer> arr = new ArrayList<>(); Collections.addAll(arr, 4 ,2, 4, 5, 2, 3, 1); printRepeating(arr); } } ",11.715423822402954,0.7662835249042146,0.6648959685418468,0.5327605503132814,1.0,0.672932385219297
13537,C++,Java,"#include <iostream> NEW_LINE using namespace std ; class gfg { public : double sum ( int n ) { double i , s = 0.0 ; for ( i = 1 ; i <= n ; i ++ ) s = s + 1 / i ; return s ; } } ; int main ( ) { gfg g ; int n = 5 ; cout << "" Sum ▁ is ▁ "" << g . sum ( n ) ; return 0 ; }","import java . io . * ; class GFG { static double sum ( int n ) { double i , s = 0.0 ; for ( i = 1 ; i <= n ; i ++ ) s = s + 1 / i ; return s ; } public static void main ( String args [ ] ) { int n = 5 ; System . out . printf ( "" Sum ▁ is ▁ % f "" , sum ( n ) ) ; } }","import java.util.*; class Gfg { public double sum(int n){ int i; double s = 0.0; for (i=1; i <=n ; ++i) s = s + 1 / i; return s; } } public class MainClass { public static void main(String [] args){ Gfg g = new Gfg(); int n = 5; System.out.println(""Sum is "" + g.sum(n)); } } ",3.3497111797332764,0.7444444444444445,0.6402051793452037,0.4808952446136893,0.9411764705882353,0.6189796124060531
13913,C++,Java,"#include <iostream> NEW_LINE #include <bits/stdc++.h> NEW_LINE using namespace std ; int constructNthNumber ( int group_no , int aux_num , int op ) { int INT_SIZE = 32 ; int a [ INT_SIZE ] = { 0 } ; int num = 0 , len_f ; int i = 0 ; if ( op == 2 ) { len_f = 2 * group_no ; a [ len_f - 1 ] = a [ 0 ] = 1 ; while ( aux_num ) { a [ group_no + i ] = a [ group_no - 1 - i ] = aux_num & 1 ; aux_num = aux_num >> 1 ; i ++ ; } } else if ( op == 0 ) { len_f = 2 * group_no + 1 ; a [ len_f - 1 ] = a [ 0 ] = 1 ; a [ group_no ] = 0 ; while ( aux_num ) { a [ group_no + 1 + i ] = a [ group_no - 1 - i ] = aux_num & 1 ; aux_num = aux_num >> 1 ; i ++ ; } } else { len_f = 2 * group_no + 1 ; a [ len_f - 1 ] = a [ 0 ] = 1 ; a [ group_no ] = 1 ; while ( aux_num ) { a [ group_no + 1 + i ] = a [ group_no - 1 - i ] = aux_num & 1 ; aux_num = aux_num >> 1 ; i ++ ; } } for ( i = 0 ; i < len_f ; i ++ ) num += ( 1 << i ) * a [ i ] ; return num ; } int getNthNumber ( int n ) { int group_no = 0 , group_offset ; int count_upto_group = 0 , count_temp = 1 ; int op , aux_num ; while ( count_temp < n ) { group_no ++ ; count_upto_group = count_temp ; count_temp += 3 * ( 1 << ( group_no - 1 ) ) ; } group_offset = n - count_upto_group - 1 ; if ( ( group_offset + 1 ) <= ( 1 << ( group_no - 1 ) ) ) { op = 2 ; aux_num = group_offset ; } else { if ( ( ( group_offset + 1 ) - ( 1 << ( group_no - 1 ) ) ) % 2 ) op = 0 ; else op = 1 ; aux_num = ( ( group_offset ) - ( 1 << ( group_no - 1 ) ) ) / 2 ; } return constructNthNumber ( group_no , aux_num , op ) ; } int main ( ) { int n = 9 ; cout << getNthNumber ( n ) ; return 0 ; }","class GFG { static int INT_SIZE = 32 ; static int constructNthNumber ( int group_no , int aux_num , int op ) { int a [ ] = new int [ INT_SIZE ] ; int num = 0 , len_f ; int i = 0 ; if ( op == 2 ) { len_f = 2 * group_no ; a [ len_f - 1 ] = a [ 0 ] = 1 ; while ( aux_num > 0 ) { a [ group_no + i ] = a [ group_no - 1 - i ] = aux_num & 1 ; aux_num = aux_num >> 1 ; i ++ ; } } else if ( op == 0 ) { len_f = 2 * group_no + 1 ; a [ len_f - 1 ] = a [ 0 ] = 1 ; a [ group_no ] = 0 ; while ( aux_num > 0 ) { a [ group_no + 1 + i ] = a [ group_no - 1 - i ] = aux_num & 1 ; aux_num = aux_num >> 1 ; i ++ ; } } { len_f = 2 * group_no + 1 ; a [ len_f - 1 ] = a [ 0 ] = 1 ; a [ group_no ] = 1 ; while ( aux_num > 0 ) { a [ group_no + 1 + i ] = a [ group_no - 1 - i ] = aux_num & 1 ; aux_num = aux_num >> 1 ; i ++ ; } } for ( i = 0 ; i < len_f ; i ++ ) num += ( 1 << i ) * a [ i ] ; return num ; } static int getNthNumber ( int n ) { int group_no = 0 , group_offset ; int count_upto_group = 0 , count_temp = 1 ; int op , aux_num ; while ( count_temp < n ) { group_no ++ ; count_upto_group = count_temp ; count_temp += 3 * ( 1 << ( group_no - 1 ) ) ; } group_offset = n - count_upto_group - 1 ; if ( ( group_offset + 1 ) <= ( 1 << ( group_no - 1 ) ) ) { aux_num = group_offset ; } else { if ( ( ( group_offset + 1 ) - ( 1 << ( group_no - 1 ) ) ) % 2 == 1 ) else aux_num = ( ( group_offset ) - ( 1 << ( group_no - 1 ) ) ) / 2 ; } return constructNthNumber ( group_no , aux_num , op ) ; } public static void main ( String [ ] args ) { int n = 9 ; System . out . printf ( "" % d "" , getNthNumber ( n ) ) ; } }","import java.util.*; class Main { static final int INT_SIZE = 32; static int[] a = new int[INT_SIZE]; static int constructNthNumber(int group_no, int aux_num, int op) { int num = 0, len_f; int i = 0; if (op == 2){ len_f = 2 * group_no; a[len_f - 1] = a[0] = 1; while(aux_num != 0) { a[group_no + i] = a[group_no - 1 - i] = aux_num & 1; aux_num >>= 1; i++; } } else if (op == 0){ len_f = 2 * group_no + 1; a[len_f - 1] = a[0] = 1; a[group_no] = 0; while(aux_num != 0) { a[group_no + i + 1] = a[group_no - 1 - i] = aux_num & 1; aux_num >>= 1; i++; } } else { len_f = 2 * group_no + 1; a[len_f - 1] = a[0] = 1; a[group_no] = 1; while(aux_num != 0) { a[group_no + i + 1] = a[group_no - 1 - i] = aux_num & 1; aux_num >>= 1; i++; } } for(i = 0; i < len_f; i++) num += (1 << i) * a[i]; return num; } static int getNthNumber(int n){ int group_no=0,group_offset,count_upto_group = 0, count_temp =1; int op,aux_num; while(count_temp < n) { group_no++; count_upto_group = count_temp; count_temp += 3 * (1 << (group_no - 1)); } group_offset=n-count_upto_group-1; if((group_offset + 1) <= (1<<(group_no - 1))){ op = 2; aux_num = group_offset; }else{ if(((group_offset +1 )-(1 <<(group_no - 1))) % 2 == 0)op=0; else op=1; aux_num = ((group_offset)-(1<<(group_no-1)))/2; } return constructNthNumber(group_no,aux_num,op); } public static void main (String[] args) { int n = 9; System.out.println(getNthNumber(n)); } } ",20.787806034088135,0.9144665442446489,0.8695613565723809,0.7919559642740994,0.9600000000000001,0.8423691749918696
11721,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void midptellipse ( int rx , int ry , int xc , int yc ) { float dx , dy , d1 , d2 , x , y ; x = 0 ; y = ry ; d1 = ( ry * ry ) - ( rx * rx * ry ) + ( 0.25 * rx * rx ) ; dx = 2 * ry * ry * x ; dy = 2 * rx * rx * y ; while ( dx < dy ) { cout << x + xc << "" ▁ , ▁ "" << y + yc << endl ; cout << - x + xc << "" ▁ , ▁ "" << y + yc << endl ; cout << x + xc << "" ▁ , ▁ "" << - y + yc << endl ; cout << - x + xc << "" ▁ , ▁ "" << - y + yc << endl ; if ( d1 < 0 ) { x ++ ; dx = dx + ( 2 * ry * ry ) ; d1 = d1 + dx + ( ry * ry ) ; } else { x ++ ; y -- ; dx = dx + ( 2 * ry * ry ) ; dy = dy - ( 2 * rx * rx ) ; d1 = d1 + dx - dy + ( ry * ry ) ; } } d2 = ( ( ry * ry ) * ( ( x + 0.5 ) * ( x + 0.5 ) ) ) + ( ( rx * rx ) * ( ( y - 1 ) * ( y - 1 ) ) ) - ( rx * rx * ry * ry ) ; while ( y >= 0 ) { cout << x + xc << "" ▁ , ▁ "" << y + yc << endl ; cout << - x + xc << "" ▁ , ▁ "" << y + yc << endl ; cout << x + xc << "" ▁ , ▁ "" << - y + yc << endl ; cout << - x + xc << "" ▁ , ▁ "" << - y + yc << endl ; if ( d2 > 0 ) { y -- ; dy = dy - ( 2 * rx * rx ) ; d2 = d2 + ( rx * rx ) - dy ; } else { y -- ; x ++ ; dx = dx + ( 2 * ry * ry ) ; dy = dy - ( 2 * rx * rx ) ; d2 = d2 + dx - dy + ( rx * rx ) ; } } } int main ( ) { midptellipse ( 10 , 15 , 50 , 50 ) ; return 0 ; }","import java . util . * ; import java . text . DecimalFormat ; class GFG { static void midptellipse ( float rx , float ry , float xc , float yc ) { float dx , dy , d1 , d2 , x , y ; x = 0 ; y = ry ; d1 = ( ry * ry ) - ( rx * rx * ry ) + ( 0.25f * rx * rx ) ; dx = 2 * ry * ry * x ; dy = 2 * rx * rx * y ; DecimalFormat df = new DecimalFormat ( "" # , # # # , # #0.00000"" ) ; while ( dx < dy ) { System . out . println ( df . format ( ( x + xc ) ) + "" , ▁ "" + df . format ( ( y + yc ) ) ) ; System . out . println ( df . format ( ( - x + xc ) ) + "" , ▁ "" + df . format ( ( y + yc ) ) ) ; System . out . println ( df . format ( ( x + xc ) ) + "" , ▁ "" + df . format ( ( - y + yc ) ) ) ; System . out . println ( df . format ( ( - x + xc ) ) + "" , ▁ "" + df . format ( ( - y + yc ) ) ) ; if ( d1 < 0 ) { x ++ ; dx = dx + ( 2 * ry * ry ) ; d1 = d1 + dx + ( ry * ry ) ; } else { x ++ ; y -- ; dx = dx + ( 2 * ry * ry ) ; dy = dy - ( 2 * rx * rx ) ; d1 = d1 + dx - dy + ( ry * ry ) ; } } d2 = ( ( ry * ry ) * ( ( x + 0.5f ) * ( x + 0.5f ) ) ) + ( ( rx * rx ) * ( ( y - 1 ) * ( y - 1 ) ) ) - ( rx * rx * ry * ry ) ; while ( y >= 0 ) { System . out . println ( df . format ( ( x + xc ) ) + "" , ▁ "" + df . format ( ( y + yc ) ) ) ; System . out . println ( df . format ( ( - x + xc ) ) + "" , ▁ "" + df . format ( ( y + yc ) ) ) ; System . out . println ( df . format ( ( x + xc ) ) + "" , ▁ "" + df . format ( ( - y + yc ) ) ) ; System . out . println ( df . format ( ( - x + xc ) ) + "" , ▁ "" + df . format ( ( - y + yc ) ) ) ; if ( d2 > 0 ) { y -- ; dy = dy - ( 2 * rx * rx ) ; d2 = d2 + ( rx * rx ) - dy ; } else { y -- ; x ++ ; dx = dx + ( 2 * ry * ry ) ; dy = dy - ( 2 * rx * rx ) ; d2 = d2 + dx - dy + ( rx * rx ) ; } } } public static void main ( String args [ ] ) { midptellipse ( 10 , 15 , 50 , 50 ) ; } }","import java.util.*; public class Main { public static void midptellipse(int rx, int ry, int xc, int yc) { float dx = 0; float dy = (float)(2 * rx * rx); float d1 = (ry * ry) - (rx * rx * ry) + (rx * rx / 4); float d2 = ((float)((ry * ry) * Math.pow((xc + 0.5), 2))) + ((float)((rx * rx) * Math.pow((yc - 1), 2))) - (rx * rx * ry * ry); float x = 0; float y = ry; while (dx < dy){ drawPoints(x, y, xc, yc); if (d1 < 0) { d1 += ((ry * ry) * ((int)(2 * x + 3)); ++x; } else { ++y; --x; dy -= (float)(2 * rx * rx); d1 += dx + dy + (rx * rx); } } while (y >= 0) { drawPoints(x, y, xc, yc); if (d2 > 0){ --y; dy -= (float)(2 * rx * rx); d2 += (rx * rx) - dy; } else { ++y; ++x; dx += (float)(2 * ry * ry); dy -= (float)(2 * rx * rx); d2 = dx + dy + (rx * rx); } } } public static void drawPoints(float x, float y, int xc, int yc) { System.out.println((int)(x + xc) + "" , "" + (y + yc)); System.out.println(-(int)(x + xc) + "" , "" + (y + yc)); System.out.println((int)(x + xc) + "" , "" + -(int)(y + yc)); System.out.println(-(int)(x + xc) + "" , "" + -(int)(y + yc)); } public static void main() { midptellipse(10, 15, 50, 50); } } ",20.744987726211548,0.5701828744457949,0.48443943475017254,0.3528770687304137,0.823529411764706,0.49407277164070135
2065,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int getSingle ( int arr [ ] , int n ) { int ones = 0 , twos = 0 ; int common_bit_mask ; for ( int i = 0 ; i < n ; i ++ ) { twos = twos | ( ones & arr [ i ] ) ; ones = ones ^ arr [ i ] ; common_bit_mask = ~ ( ones & twos ) ; ones &= common_bit_mask ; twos &= common_bit_mask ; } return ones ; } int main ( ) { int arr [ ] = { 3 , 3 , 2 , 3 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" The ▁ element ▁ with ▁ single ▁ occurrence ▁ is ▁ "" << getSingle ( arr , n ) ; return 0 ; }","class GFG { static int getSingle ( int arr [ ] , int n ) { int ones = 0 , twos = 0 ; int common_bit_mask ; for ( int i = 0 ; i < n ; i ++ ) { twos = twos | ( ones & arr [ i ] ) ; ones = ones ^ arr [ i ] ; common_bit_mask = ~ ( ones & twos ) ; ones &= common_bit_mask ; twos &= common_bit_mask ; } return ones ; } public static void main ( String args [ ] ) { int arr [ ] = { 3 , 3 , 2 , 3 } ; int n = arr . length ; System . out . println ( "" The ▁ element ▁ with ▁ single ▁ occurrence ▁ is ▁ "" + getSingle ( arr , n ) ) ; } }","import java.lang.*; import java.util.Arrays; class Main { static int getSingle(int arr[]) { int ones = 0, twos = 0; for (int i = 0; i < Arrays.lengthOfArray(arr); i++) { twos |= ones & arr[i]; ones ^= arr[i]; int common_bit_mask = ~(ones & twos); ones &= common_bit_mask; twos &= common_bit_mask; } return ones; } public static void main (String[] args) { int arr[] = {3, 3, 2, 3}; System.out.println(""The element with single occurrence is "" + getSingle(arr)); } } ",8.650903940200806,0.7892248455873784,0.7136368797271575,0.6087888740353825,1.0,0.7261522118247677
13427,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void countDivisors ( int n ) { int count = 0 ; for ( int i = 1 ; i <= sqrt ( n ) + 1 ; i ++ ) { if ( n % i == 0 ) count += ( n / i == i ) ? 1 : 2 ; } if ( count % 2 == 0 ) cout << "" Even "" << endl ; else cout << "" Odd "" << endl ; } int main ( ) { cout << "" The ▁ count ▁ of ▁ divisor : ▁ "" ; countDivisors ( 10 ) ; return 0 ; }","import java . io . * ; import java . math . * ; class GFG { static void countDivisors ( int n ) { int count = 0 ; for ( int i = 1 ; i <= Math . sqrt ( n ) + 1 ; i ++ ) { if ( n % i == 0 ) count += ( n / i == i ) ? 1 : 2 ; } if ( count % 2 == 0 ) System . out . println ( "" Even "" ) ; else System . out . println ( "" Odd "" ) ; } public static void main ( String args [ ] ) { System . out . print ( "" The ▁ count ▁ of ▁ divisor : ▁ "" ) ; countDivisors ( 10 ) ; } }","import java.lang.*; public class Main { static void countDivisors(int n) { int count = 0; for (int i = 1; i <= Math.sqrt(n) + 1; i++) { if (n % i == 0) count += (n / i == i) ? 1 : 2; } if (count % 2 == 0) System.out.println(""Even""); else System.out.println(""Odd""); } public static void main(String[] args) { System.out.print(""The count of divisor: ""); countDivisors(10); } } ",6.528098106384277,0.7280635383333814,0.667462286301672,0.5746184381217803,1.0,0.7022329066852462
848,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int search ( int mat [ 4 ] [ 4 ] , int n , int x ) { if ( n == 0 ) return -1 ; int smallest = mat [ 0 ] [ 0 ] , largest = mat [ n - 1 ] [ n - 1 ] ; if ( x < smallest x > largest ) return -1 ; int i = 0 , j = n - 1 ; while ( i < n && j >= 0 ) { if ( mat [ i ] [ j ] == x ) { cout << "" n ▁ Found ▁ at ▁ "" << i << "" , ▁ "" << j ; return 1 ; } if ( mat [ i ] [ j ] > x ) j -- ; else i ++ ; } cout << "" n ▁ Element ▁ not ▁ found "" ; return 0 ; } int main ( ) { int mat [ 4 ] [ 4 ] = { { 10 , 20 , 30 , 40 } , { 15 , 25 , 35 , 45 } , { 27 , 29 , 37 , 48 } , { 32 , 33 , 39 , 50 } } ; search ( mat , 4 , 29 ) ; return 0 ; }","class GFG { private static void search ( int [ ] [ ] mat , int n , int x ) { int i = 0 , j = n - 1 ; while ( i < n && j >= 0 ) { if ( mat [ i ] [ j ] == x ) { System . out . print ( "" n ▁ Found ▁ at ▁ "" + i + "" ▁ "" + j ) ; return ; } if ( mat [ i ] [ j ] > x ) j -- ; else i ++ ; } System . out . print ( "" n ▁ Element ▁ not ▁ found "" ) ; return ; } public static void main ( String [ ] args ) { int mat [ ] [ ] = { { 10 , 20 , 30 , 40 } , { 15 , 25 , 35 , 45 } , { 27 , 29 , 37 , 48 } , { 32 , 33 , 39 , 50 } } ; search ( mat , 4 , 29 ) ; } }","import java.util.Scanner; // You may need this import statement depending on your use case public class Main { public static int search(int[][] mat, int n, int x) { if (n == 0) return -1; int smallest = mat[0][0]; int largest = mat[n-1][n-1]; if (x < smallest || x > largest) return -1; int i = 0, j = n - 1; while(i<n && j>=0){ if(mat[i][j] == x){ System.out.println(""Found at ""+ i +"", ""+ j); return 1; } if(mat[i][j] > x) j--; else i++; } System.out.println(""Element not found""); return 0; } public static void main (String[] args){ int mat[][] = {{10, 20, 30, 40}, {15, 25, 35, 45}, {27, 29, 37, 48}, {32, 33, 39, 50}}; search(mat, 4, 29); } } ",10.508633136749268,0.7136929460580913,0.6700983598658352,0.6157396024487063,0.9090909090909091,0.7037449944413671
13539,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void printFibonacciNumbers ( int n ) { int f1 = 0 , f2 = 1 , i ; if ( n < 1 ) return ; cout << f1 << "" ▁ "" ; for ( i = 1 ; i < n ; i ++ ) { cout << f2 << "" ▁ "" ; int next = f1 + f2 ; f1 = f2 ; f2 = next ; } } int main ( ) { printFibonacciNumbers ( 7 ) ; return 0 ; }","class Test { static void printFibonacciNumbers ( int n ) { int f1 = 0 , f2 = 1 , i ; if ( n < 1 ) return ; System . out . print ( f1 + "" ▁ "" ) ; for ( i = 1 ; i < n ; i ++ ) { System . out . print ( f2 + "" ▁ "" ) ; int next = f1 + f2 ; f1 = f2 ; f2 = next ; } } public static void main ( String [ ] args ) { printFibonacciNumbers ( 7 ) ; } }","import java.util.*; class Main { public static void printFibonacciNumbers(int n) { int f1 = 0; int f2 = 1; if (n < 1) return; System.out.print(f1 + "" ""); for (int i=1; i<n; i++) { System.out.print(f2 + "" ""); int next = f1+f2; f1 = f2; f2 = next; } } public static void main(String[] args) { Scanner scanner = new Scanner(System.in); System.out.print(""Enter a number: ""); int n = scanner.nextInt(); printFibonacciNumbers(n); } } ",6.976055860519409,0.6721311475409836,0.6100588434241805,0.5011383666428226,0.9473684210526316,0.6350073829657653
1954,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define d  256 NEW_LINE void search ( char pat [ ] , char txt [ ] , int q ) { int M = strlen ( pat ) ; int N = strlen ( txt ) ; int i , j ; int p = 0 ; int t = 0 ; int h = 1 ; for ( i = 0 ; i < M - 1 ; i ++ ) h = ( h * d ) % q ; for ( i = 0 ; i < M ; i ++ ) { p = ( d * p + pat [ i ] ) % q ; t = ( d * t + txt [ i ] ) % q ; } for ( i = 0 ; i <= N - M ; i ++ ) { if ( p == t ) { for ( j = 0 ; j < M ; j ++ ) { if ( txt [ i + j ] != pat [ j ] ) break ; } if ( j == M ) cout << "" Pattern ▁ found ▁ at ▁ index ▁ "" << i << endl ; } if ( i < N - M ) { t = ( d * ( t - txt [ i ] * h ) + txt [ i + M ] ) % q ; if ( t < 0 ) t = ( t + q ) ; } } } int main ( ) { char txt [ ] = "" GEEKS ▁ FOR ▁ GEEKS "" ; char pat [ ] = "" GEEK "" ; int q = 101 ; search ( pat , txt , q ) ; return 0 ; }","public class Main { public final static int d = 256 ; static void search ( String pat , String txt , int q ) { int M = pat . length ( ) ; int N = txt . length ( ) ; int i , j ; int p = 0 ; int t = 0 ; int h = 1 ; for ( i = 0 ; i < M - 1 ; i ++ ) h = ( h * d ) % q ; for ( i = 0 ; i < M ; i ++ ) { p = ( d * p + pat . charAt ( i ) ) % q ; t = ( d * t + txt . charAt ( i ) ) % q ; } for ( i = 0 ; i <= N - M ; i ++ ) { if ( p == t ) { for ( j = 0 ; j < M ; j ++ ) { if ( txt . charAt ( i + j ) != pat . charAt ( j ) ) break ; } if ( j == M ) System . out . println ( "" Pattern ▁ found ▁ at ▁ index ▁ "" + i ) ; } if ( i < N - M ) { t = ( d * ( t - txt . charAt ( i ) * h ) + txt . charAt ( i + M ) ) % q ; if ( t < 0 ) t = ( t + q ) ; } } } public static void main ( String [ ] args ) { String txt = "" GEEKS ▁ FOR ▁ GEEKS "" ; String pat = "" GEEK "" ; int q = 101 ; search ( pat , txt , q ) ; } }","import java.lang.*; public class Main { private static final int d = 256; void search(char[] pat, char[] txt, int q) { int M = pat.length; int N = txt.length; int i, j; int p = 0; int t = 0;<｜begin▁of▁sentence｜>",3.2960288524627686,0.011639238399102832,0.009994734566067857,0.00783500564926902,0.75,0.2304845039544883
13546,C++,Java,"#include <iostream> NEW_LINE using namespace std ; int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } int main ( ) { int a = 98 , b = 56 ; cout << "" GCD ▁ of ▁ "" << a << "" ▁ and ▁ "" << b << "" ▁ is ▁ "" << gcd ( a , b ) ; return 0 ; }","class Test { static int gcd ( int a , int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } public static void main ( String [ ] args ) { int a = 98 , b = 56 ; System . out . println ( "" GCD ▁ of ▁ "" + a + "" ▁ and ▁ "" + b + "" ▁ is ▁ "" + gcd ( a , b ) ) ; } }","import java.lang.*; public class Main { static int gcd (int a , int b ){ if (b == 0) return a ; else return gcd ( b , a % b ); } public static void main(String[] args){ int a = 98, b = 56; System.out.println(""GCD of "" + a +"" and ""+ b +"" is "" + gcd (a ,b )); } } ",4.039473056793213,0.859747644872894,0.8029283605848822,0.7292954898288423,0.9411764705882353,0.7928597840566601
2096,C++,Java,"#include <iostream> NEW_LINE using namespace std ; #define bool  int NEW_LINE class GFG { public : bool isPowerOfFour ( int n ) { if ( n == 0 ) return 0 ; while ( n != 1 ) { if ( n % 4 != 0 ) return 0 ; n = n / 4 ; } return 1 ; } } ; int main ( ) { GFG g ; int test_no = 64 ; if ( g . isPowerOfFour ( test_no ) ) cout << test_no << "" ▁ is ▁ a ▁ power ▁ of ▁ 4"" ; else cout << test_no << "" is ▁ not ▁ a ▁ power ▁ of ▁ 4"" ; getchar ( ) ; }","class GFG { static int isPowerOfFour ( int n ) { if ( n == 0 ) return 0 ; while ( n != 1 ) { if ( n % 4 != 0 ) return 0 ; n = n / 4 ; } return 1 ; } public static void main ( String [ ] args ) { int test_no = 64 ; if ( isPowerOfFour ( test_no ) == 1 ) System . out . println ( test_no + "" ▁ is ▁ a ▁ power ▁ of ▁ 4"" ) ; else System . out . println ( test_no + "" is ▁ not ▁ a ▁ power ▁ of ▁ 4"" ) ; } }","import java.util.Scanner; class GFG { boolean isPowerOfFour (int n) { if (n == 0) return false; while(n != 1){ if(n % 4 != 0) return false; n = n / 4; } return true; } } public class Main { public static void main (String[] args) { GFG g = new GFG(); int test_no = 64; if(g.isPowerOfFour(test_no)) System.out<｜begin▁of▁sentence｜>.format(""The number %d is a power of 4"", test_no); else System.out.printf(""The number %d is not a power of 4"", test_no); } } ",6.4964799880981445,0.7175572519083969,0.6081266054788679,0.4830016901860849,0.8333333333333333,0.5881011831302594
7050,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int maxSumIS ( int arr [ ] , int n ) { int i , j , max = 0 ; int msis [ n ] ; for ( i = 0 ; i < n ; i ++ ) msis [ i ] = arr [ i ] ; for ( i = 1 ; i < n ; i ++ ) for ( j = 0 ; j < i ; j ++ ) if ( arr [ i ] > arr [ j ] && msis [ i ] < msis [ j ] + arr [ i ] ) msis [ i ] = msis [ j ] + arr [ i ] ; for ( i = 0 ; i < n ; i ++ ) if ( max < msis [ i ] ) max = msis [ i ] ; return max ; } int main ( ) { int arr [ ] = { 1 , 101 , 2 , 3 , 100 , 4 , 5 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" Sum ▁ of ▁ maximum ▁ sum ▁ increasing ▁ "" "" subsequence ▁ is ▁ "" << maxSumIS ( arr , n ) << endl ; return 0 ; }","class GFG { static int maxSumIS ( int arr [ ] , int n ) { int i , j , max = 0 ; int msis [ ] = new int [ n ] ; for ( i = 0 ; i < n ; i ++ ) msis [ i ] = arr [ i ] ; for ( i = 1 ; i < n ; i ++ ) for ( j = 0 ; j < i ; j ++ ) if ( arr [ i ] > arr [ j ] && msis [ i ] < msis [ j ] + arr [ i ] ) msis [ i ] = msis [ j ] + arr [ i ] ; for ( i = 0 ; i < n ; i ++ ) if ( max < msis [ i ] ) max = msis [ i ] ; return max ; } public static void main ( String args [ ] ) { int arr [ ] = new int [ ] { 1 , 101 , 2 , 3 , 100 , 4 , 5 } ; int n = arr . length ; System . out . println ( "" Sum ▁ of ▁ maximum ▁ sum ▁ "" + "" increasing ▁ subsequence ▁ is ▁ "" + maxSumIS ( arr , n ) ) ; } }","import java.util.*; public class Main { static int maxSumIS(int arr[], int n) { int i, j, max = 0; int msis[] = new int[n]; for (i=0; i<n; i++) msis[i] = arr[i]; for(i=1; i<n; i++){ for(j=0; j<i; j++){ if(arr[i] > arr[j] && msis[i] < msis[j] + arr[i]) msis[i] = msis[j] + arr[i]; } <｜begin▁of▁sentence｜> for(i=0; i<n; i++){ if(max < msis[i]) max = msis[i]; } return max; } public static void main (String[] args) { int arr[] = {1, 101, 2, 3, 100, 4, 5}; int n = arr.length; System.out.println(""Sum of maximum sum increasing subsequence is "" + maxSumIS(arr, n)); } } ",9.67651891708374,0.8224303899047116,0.7615356821975046,0.6842688393693106,1.0,0.7789881875585174
8947,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int exponentMod ( int A , int B , int C ) { if ( A == 0 ) return 0 ; if ( B == 0 ) return 1 ; long y ; if ( B % 2 == 0 ) { y = exponentMod ( A , B / 2 , C ) ; y = ( y * y ) % C ; } else { y = A % C ; y = ( y * exponentMod ( A , B - 1 , C ) % C ) % C ; } return ( int ) ( ( y + C ) % C ) ; } int main ( ) { int A = 2 , B = 5 , C = 13 ; cout << "" Power ▁ is ▁ "" << exponentMod ( A , B , C ) ; return 0 ; }","import java . io . * ; class GFG { static int exponentMod ( int A , int B , int C ) { if ( A == 0 ) return 0 ; if ( B == 0 ) return 1 ; long y ; if ( B % 2 == 0 ) { y = exponentMod ( A , B / 2 , C ) ; y = ( y * y ) % C ; } else { y = A % C ; y = ( y * exponentMod ( A , B - 1 , C ) % C ) % C ; } return ( int ) ( ( y + C ) % C ) ; } public static void main ( String args [ ] ) { int A = 2 , B = 5 , C = 13 ; System . out . println ( "" Power ▁ is ▁ "" + exponentMod ( A , B , C ) ) ; } }","import java.lang.*; public class Main { static long exponentMod(long A, long B, long C) { if (A == 0) return 0; if (B == 0) return 1; long y; if (B % 2 == 0) { y = exponentMod(A, B / 2, C); y = (y * y) % C; } else { y = A % C; y = (y * exponentMod(A, B - 1, C) % C) % C; } return (int)((y + C) % C); } public static void main(String[] args){ int A = 2, B = 5, C = 13; System.out.println(""Power is ""+exponentMod(A,B,C)); } } ",6.379076242446899,0.9001248539126734,0.8580824982104026,0.8031563407201086,1.0,0.8622094385040759
9368,C++,Java,"#include <bits/stdc++.h> NEW_LINE #include <math.h> NEW_LINE using namespace std ; void octant ( float x , float y , float z ) { if ( x >= 0 && y >= 0 && z >= 0 ) cout << "" Point ▁ lies ▁ in ▁ 1st ▁ octant STRNEWLINE "" ; else if ( x < 0 && y >= 0 && z >= 0 ) cout << "" Point ▁ lies ▁ in ▁ 2nd ▁ octant STRNEWLINE "" ; else if ( x < 0 && y < 0 && z >= 0 ) cout << "" Point ▁ lies ▁ in ▁ 3rd ▁ octant STRNEWLINE "" ; else if ( x >= 0 && y < 0 && z >= 0 ) cout << "" Point ▁ lies ▁ in ▁ 4th ▁ octant STRNEWLINE "" ; else if ( x >= 0 && y >= 0 && z < 0 ) cout << "" Point ▁ lies ▁ in ▁ 5th ▁ octant STRNEWLINE "" ; else if ( x < 0 && y >= 0 && z < 0 ) cout << "" Point ▁ lies ▁ in ▁ 6th ▁ octant STRNEWLINE "" ; else if ( x < 0 && y < 0 && z < 0 ) cout << "" Point ▁ lies ▁ in ▁ 7th ▁ octant STRNEWLINE "" ; else if ( x >= 0 && y < 0 && z < 0 ) cout << "" Point ▁ lies ▁ in ▁ 8th ▁ octant STRNEWLINE "" ; } int main ( ) { float x = 2 , y = 3 , z = 4 ; octant ( x , y , z ) ; x = -4 , y = 2 , z = -8 ; octant ( x , y , z ) ; x = -6 , y = -2 , z = 8 ; octant ( x , y , z ) ; return 0 ; }","import java . util . * ; class solution { static void octant ( float x , float y , float z ) { if ( x >= 0 && y >= 0 && z >= 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 1st ▁ octant "" ) ; else if ( x < 0 && y >= 0 && z >= 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 2nd ▁ octant "" ) ; else if ( x < 0 && y < 0 && z >= 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 3rd ▁ octant "" ) ; else if ( x >= 0 && y < 0 && z >= 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 4th ▁ octant "" ) ; else if ( x >= 0 && y >= 0 && z < 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 5th ▁ octant "" ) ; else if ( x < 0 && y >= 0 && z < 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 6th ▁ octant "" ) ; else if ( x < 0 && y < 0 && z < 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 7th ▁ octant "" ) ; else if ( x >= 0 && y < 0 && z < 0 ) System . out . println ( "" Point ▁ lies ▁ in ▁ 8th ▁ octant "" ) ; } public static void main ( String args [ ] ) { float x = 2 , y = 3 , z = 4 ; octant ( x , y , z ) ; x = - 4 ; y = 2 ; z = - 8 ; octant ( x , y , z ) ; x = - 6 ; y = - 2 ; z = 8 ; octant ( x , y , z ) ; } }","import java.util.*; public class Main { public static void getQuadrant(float x, float y, float z) { if (x >= 0 && y >= 0 && z >= 0){ System.out.println(""Point lies in the 1st octant""); } else if (x < 0 && y >= 0 && z >= 0){ System.out.println(""Point lies in the 2nd octant""); } else if (x < 0 && y < 0 && z >= 0) { System.out.println(""Point lies in the 3rd octant""); } else if (x >= 0 && y < 0 && z >= 0){ System.out.println(""Point lies in the 4th octant""); } else if (x >= 0 && y >= 0 && z < 0) { System.out.println(""Point lies in the 5th octant""); } else if (x < 0 && y >= 0 && z < 0){ System.out.println(""Point lies in the 6th octant""); } else if (x < 0 && y < 0 && z < 0) { System.out.println(""Point lies in the 7th octant""); } else if (x >= 0 && y < 0 && z < 0){ System.out.println(""Point lies in the 8th octant""); } } public static void main(String[] args) { float x = 2, y = 3, z = 4; getQuadrant(x, y, z); x = -4; y = 2; z = -8; getQuadrant(x, y, z); x = -6; y = -2; z = 8; getQuadrant(x, y, z); } } ",13.32741928100586,0.7577359249997869,0.6659313604658655,0.5583043237902605,1.0,0.6908130266531823
2090,C++,Java,#include <bits/stdc++.h> NEW_LINE using namespace std ; int addOne ( int x ) { int m = 1 ; while ( x & m ) { x = x ^ m ; m <<= 1 ; } x = x ^ m ; return x ; } int main ( ) { cout << addOne ( 13 ) ; return 0 ; },class GFG { static int addOne ( int x ) { int m = 1 ; while ( ( int ) ( x & m ) >= 1 ) { x = x ^ m ; m <<= 1 ; } x = x ^ m ; return x ; } public static void main ( String [ ] args ) { System . out . println ( addOne ( 13 ) ) ; } },public class Main { public static void main(String[] args) { System.out.println(addOne(13)); } private static int addOne(int x) { int m = 1; while ((x & m) != 0) { x = x ^ m; m <<= 1; } return x ^ m; } } ,2.623054027557373,0.8039778280295369,0.7574824464674859,0.6616490606660748,0.9411764705882353,0.7455072836427229
12740,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int divisorSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; ++ i ) sum += ( n / i ) * i ; return sum ; } int main ( ) { int n = 4 ; cout << "" ▁ "" << divisorSum ( n ) << endl ; n = 5 ; cout << "" ▁ "" << divisorSum ( n ) << endl ; return 0 ; }",import java . io . * ; class GFG { static int divisorSum ( int n ) { int sum = 0 ; for ( int i = 1 ; i <= n ; ++ i ) sum += ( n / i ) * i ; return sum ; } public static void main ( String args [ ] ) { int n = 4 ; System . out . println ( divisorSum ( n ) ) ; n = 5 ; System . out . println ( divisorSum ( n ) ) ; } },"import java.lang.*; class Main { static int divisorSum (int n ){ int sum = 0 ; for ( int i = 1 ; i <= n ; ++ i ) sum += ( n / i) * i ; return sum; } public static void main(String[] args){ Main obj = new Main(); System.out.println("" "" + obj.divisorSum(4)); System.out.println("" "" +obj.divisorSum(5)); } } ",3.2299792766571045,0.7637476428261679,0.6811119100697758,0.6027778971124002,0.9411764705882353,0.7042974691551507
12813,C++,Java,"#include <math.h> NEW_LINE #include <iostream> NEW_LINE #include <boost/format.hpp> NEW_LINE class gfg { public : double sum ( int x , int n ) { double i , total = 1.0 ; for ( i = 1 ; i <= n ; i ++ ) total = total + ( pow ( x , i ) / i ) ; return total ; } } ; int main ( ) { gfg g ; int x = 2 ; int n = 5 ; std :: cout << boost :: format ( "" % .2f "" ) % g . sum ( x , n ) ; return 0 ; }","import static java . lang . Math . pow ; class GFG { static double sum ( int x , int n ) { double i , total = 1.0 ; for ( i = 1 ; i <= n ; i ++ ) total = total + ( Math . pow ( x , i ) / i ) ; return total ; } public static void main ( String [ ] args ) { int x = 2 ; int n = 5 ; System . out . printf ( "" % .2f "" , sum ( x , n ) ) ; } }","import java.lang.Math; public class Gfg { public double sum(int x, int n) { double i, total = 1.0; for (i=1; i <= n; i++ ) total = total + (Math.pow(x, (int) i) / i); return total; } } public class MainClass { public static void main(String[] args) { Gfg g = new Gfg(); int x = 2; int n = 5; System.out.printf(""%.2f"",g.sum(x,n)); } } ",5.439870834350586,0.7706422018348624,0.7067462882846132,0.6058843210311515,0.9411764705882353,0.7064719658982767
12673,C++,Java,#include <bits/stdc++.h> NEW_LINE using namespace std ; float AvgofSquareN ( int n ) { return ( float ) ( ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; } int main ( ) { int n = 10 ; cout << AvgofSquareN ( n ) ; return 0 ; },import java . io . * ; public class GFG { static float AvgofSquareN ( int n ) { return ( float ) ( ( n + 1 ) * ( 2 * n + 1 ) ) / 6 ; } static public void main ( String [ ] args ) { int n = 2 ; System . out . println ( AvgofSquareN ( n ) ) ; } },public class Main { static float avgOfSquareN(int n) { return (float)((n + 1) * (2 * n + 1)) / 6; } public static void main(String[] args) { int n = 10; System.out.println(avgOfSquareN(n)); } } ,2.1602790355682373,0.7665540695749673,0.7080876200396408,0.6354392280721852,1.0,0.7448074596505296
7057,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int knapSack ( int W , int wt [ ] , int val [ ] , int n ) { if ( n == 0 W == 0 ) return 0 ; if ( wt [ n - 1 ] > W ) return knapSack ( W , wt , val , n - 1 ) ; else return max ( val [ n - 1 ] + knapSack ( W - wt [ n - 1 ] , wt , val , n - 1 ) , knapSack ( W , wt , val , n - 1 ) ) ; } int main ( ) { int val [ ] = { 60 , 100 , 120 } ; int wt [ ] = { 10 , 20 , 30 } ; int W = 50 ; int n = sizeof ( val ) / sizeof ( val [ 0 ] ) ; cout << knapSack ( W , wt , val , n ) ; return 0 ; }","class Knapsack { static int max ( int a , int b ) { return ( a > b ) ? a : b ; } static int knapSack ( int W , int wt [ ] , int val [ ] , int n ) { if ( n == 0 W == 0 ) return 0 ; if ( wt [ n - 1 ] > W ) return knapSack ( W , wt , val , n - 1 ) ; else return max ( val [ n - 1 ] + knapSack ( W - wt [ n - 1 ] , wt , val , n - 1 ) , knapSack ( W , wt , val , n - 1 ) ) ; } public static void main ( String args [ ] ) { int val [ ] = new int [ ] { 60 , 100 , 120 } ; int wt [ ] = new int [ ] { 10 , 20 , 30 } ; int W = 50 ; int n = val . length ; System . out . println ( knapSack ( W , wt , val , n ) ) ; } }","import java.util.*; class Main { static int max(int a, int b) { return (a > b) ? a : b; } static int knapSack(int W, int wt[], int val[], int n) { if (n == 0 || W == 0) return 0; if (wt[n - 1] > W) return knapSack(W, wt, val, n - 1); else return max(val[n - 1] + knapSack(W - wt[n - 1], wt, val, n - 1), knapSack(W, wt, val, n - 1)); } public static void main(String[] args) { int val[] = {60, 100, 120}; int wt[] = {10, 20, 30}; int W = 50; int n = val.length; System.out.println(knapSack(W, wt, val, n)); } } ",6.826528072357178,0.9219793969623974,0.8972939265664573,0.863471277865312,0.9473684210526316,0.8886404208215078
2149,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void swap ( int * xp , int * yp ) { * xp = * xp ^ * yp ; * yp = * xp ^ * yp ; * xp = * xp ^ * yp ; } int main ( ) { int x = 10 ; swap ( & x , & x ) ; cout << "" After ▁ swap ( & x , ▁ & x ) : ▁ x ▁ = ▁ "" << x ; return 0 ; }","class GFG { static void swap ( int [ ] xp , int [ ] yp ) { xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; yp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; xp [ 0 ] = xp [ 0 ] ^ yp [ 0 ] ; } public static void main ( String [ ] args ) { int [ ] x = { 10 } ; swap ( x , x ) ; System . out . println ( "" After ▁ swap ( & x , ▁ & x ) : ▁ x ▁ = ▁ "" + x [ 0 ] ) ; } }","import java.lang.*; // NEW_LINE // using namespace std; public class Main { public static void main(String [] args) { int x = 10; swap(&x, &x); System.out.println(""After swap(&x, &x): x = "" + x); } // equivalent of swap function in C++: public static void swap(int[] xp, int[] yp) { int temp = xp[0]; xp[0] = yp[0]; yp[0] = temp; } } ",5.917028188705444,0.6764266570909114,0.594152789047577,0.4643751440847008,1.0,0.6250626008592906
8793,C++,Java,"#include <iostream> NEW_LINE #include <string.h> NEW_LINE using namespace std ; class gfg { public : void divideString ( char str [ ] , int n ) { int str_size = strlen ( str ) ; int i ; int part_size ; if ( str_size % n != 0 ) { cout << "" Invalid ▁ Input : ▁ String ▁ size "" ; cout << "" ▁ is ▁ not ▁ divisible ▁ by ▁ n "" ; return ; } part_size = str_size / n ; for ( i = 0 ; i < str_size ; i ++ ) { if ( i % part_size == 0 ) cout << endl ; cout << str [ i ] ; } } } ; int main ( ) { gfg g ; char str [ ] = "" a _ simple _ divide _ string _ quest "" ; g . divideString ( str , 4 ) ; return 0 ; }","class GFG { static void divideString ( String str , int n ) { int str_size = str . length ( ) ; int part_size ; if ( str_size % n != 0 ) { System . out . println ( "" Invalid ▁ Input : ▁ String ▁ size "" + "" is ▁ not ▁ divisible ▁ by ▁ n "" ) ; return ; } part_size = str_size / n ; for ( int i = 0 ; i < str_size ; i ++ ) { if ( i % part_size == 0 ) System . out . println ( ) ; System . out . print ( str . charAt ( i ) ) ; } } public static void main ( String [ ] args ) { String str = "" a _ simple _ divide _ string _ quest "" ; divideString ( str , 4 ) ; } }","import java.lang.StringBuilder; class Gfg { void divideString( String str , int n ){ int str_size = str.length(); if (str_size % n != 0){ System.out.println(""Invalid Input : String size is not divisible by n""); return; } int part_size = str_size / n; for(int i = 0; i < str_size; i++ ){ if (i % part_size == 0) System.out.println(); System.out.print(str.charAt(i)); } } } public class Main { public static void main (String[] args){ Gfg g = new Gfg(); String str = "" a simple divide string quest""; g.divideString(str, 4); } } ",5.441495895385742,0.7205273621761527,0.6317213218648553,0.5187362998385175,0.9473684210526316,0.6473259362027517
2142,C++,Java,#include <bits/stdc++.h> NEW_LINE using namespace std ; unsigned int swapBits ( unsigned int x ) { unsigned int even_bits = x & 0xAAAAAAAA ; unsigned int odd_bits = x & 0x55555555 ; even_bits >>= 1 ; odd_bits <<= 1 ; return ( even_bits odd_bits ) ; } int main ( ) { unsigned int x = 23 ; cout << swapBits ( x ) ; return 0 ; },class GFG { static int swapBits ( int x ) { int even_bits = x & 0xAAAAAAAA ; int odd_bits = x & 0x55555555 ; even_bits >>= 1 ; odd_bits <<= 1 ; return ( even_bits odd_bits ) ; } public static void main ( String [ ] args ) { int x = 23 ; System . out . println ( swapBits ( x ) ) ; } },import java.lang.*; public class Main { static int swapBits(int x) { int even_bits = x & 0xAAAAAAAA; int odd_bits = x & 0x55555555; even_bits >>= 1; odd_bits <<= 1; return (even_bits | odd_bits); } public static void main(String[] args) { int x = 23; System.out<｜begin▁of▁sentence｜>.println(swapBits(x)); } } ,4.927803039550781,0.8518518518518519,0.8255189164891872,0.7909017716181405,1.0,0.8536312401326982
1683,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int equilibrium ( int arr [ ] , int n ) { int sum = 0 ; int leftsum = 0 ; for ( int i = 0 ; i < n ; ++ i ) sum += arr [ i ] ; for ( int i = 0 ; i < n ; ++ i ) { sum -= arr [ i ] ; if ( leftsum == sum ) return i ; leftsum += arr [ i ] ; } return -1 ; } int main ( ) { int arr [ ] = { -7 , 1 , 5 , 2 , -4 , 3 , 0 } ; int arr_size = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" First ▁ equilibrium ▁ index ▁ is ▁ "" << equilibrium ( arr , arr_size ) ; return 0 ; }","class EquilibriumIndex { int equilibrium ( int arr [ ] , int n ) { int sum = 0 ; int leftsum = 0 ; for ( int i = 0 ; i < n ; ++ i ) sum += arr [ i ] ; for ( int i = 0 ; i < n ; ++ i ) { sum -= arr [ i ] ; if ( leftsum == sum ) return i ; leftsum += arr [ i ] ; } return - 1 ; } public static void main ( String [ ] args ) { EquilibriumIndex equi = new EquilibriumIndex ( ) ; int arr [ ] = { - 7 , 1 , 5 , 2 , - 4 , 3 , 0 } ; int arr_size = arr . length ; System . out . println ( "" First ▁ equilibrium ▁ index ▁ is ▁ "" + equi . equilibrium ( arr , arr_size ) ) ; } }","import java.util.*; public class Main { static int equilibrium(int arr[], int n) { int sum = 0; int leftsum = 0; for (int i=0; i<n; ++i) sum += arr[i]; for (int i=0; i<n; ++i) { sum -= arr[i]; if (leftsum == sum) return i; leftsum += arr[i]; } return -1; } public static void main(String[] args) { int arr[] = {-7, 1, 5, 2, -4, 3, 0}; int arr_size = arr.length; System.out.println(""First equilibrium index is "" + equilibrium(arr, arr_size)); } } ",7.63640284538269,0.771750297575925,0.7160487581800822,0.6329294665986278,0.9473684210526316,0.727261152934829
1862,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int knapSack ( int W , int wt [ ] , int val [ ] , int n ) { int i , w ; int K [ n + 1 ] [ W + 1 ] ; for ( i = 0 ; i <= n ; i ++ ) { for ( w = 0 ; w <= W ; w ++ ) { if ( i == 0 w == 0 ) K [ i ] [ w ] = 0 ; else if ( wt [ i - 1 ] <= w ) K [ i ] [ w ] = max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] ) ; else K [ i ] [ w ] = K [ i - 1 ] [ w ] ; } } return K [ n ] [ W ] ; } int main ( ) { int val [ ] = { 60 , 100 , 120 } ; int wt [ ] = { 10 , 20 , 30 } ; int W = 50 ; int n = sizeof ( val ) / sizeof ( val [ 0 ] ) ; cout << knapSack ( W , wt , val , n ) ; return 0 ; }","class Knapsack { static int max ( int a , int b ) { return ( a > b ) ? a : b ; } static int knapSack ( int W , int wt [ ] , int val [ ] , int n ) { int i , w ; int K [ ] [ ] = new int [ n + 1 ] [ W + 1 ] ; for ( i = 0 ; i <= n ; i ++ ) { for ( w = 0 ; w <= W ; w ++ ) { if ( i == 0 w == 0 ) K [ i ] [ w ] = 0 ; else if ( wt [ i - 1 ] <= w ) K [ i ] [ w ] = max ( val [ i - 1 ] + K [ i - 1 ] [ w - wt [ i - 1 ] ] , K [ i - 1 ] [ w ] ) ; else K [ i ] [ w ] = K [ i - 1 ] [ w ] ; } } return K [ n ] [ W ] ; } public static void main ( String args [ ] ) { int val [ ] = new int [ ] { 60 , 100 , 120 } ; int wt [ ] = new int [ ] { 10 , 20 , 30 } ; int W = 50 ; int n = val . length ; System . out . println ( knapSack ( W , wt , val , n ) ) ; } }","public class Main { public static void main(String[] args) { int val[] = {60, 100, 120}; int wt[] = {10, 20, 30}; int W = 50; int n = val.length; // sizeof(val)/sizeof(val[0]) in C++ System.out.println(knapSack(W, wt, val, n)); } static int max(int a, int b) { return (a > b)? a : b; } static int knapSack(int W, int wt[], int val[], int n) { int i, w; int K[][] = new int[n+1][W+1]; for (i = 0; i <= n; i++) { for (w = 0; w <= W; w++) { if(i == 0 || w == 0) K[i][w] = 0; else if(wt[i-1] <= w) K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]], K[i-1][w]); else K[i][w] = K[i-1][w]; } } return K[n][W]; } } ",11.462133884429932,0.8413999631797477,0.7982398695040315,0.7292431010625512,1.0,0.8104701707437858
2143,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int isPowerOfTwo ( unsigned n ) { return n && ( ! ( n & ( n - 1 ) ) ) ; } int findPosition ( unsigned n ) { if ( ! isPowerOfTwo ( n ) ) return -1 ; unsigned i = 1 , pos = 1 ; while ( ! ( i & n ) ) { i = i << 1 ; ++ pos ; } return pos ; } int main ( void ) { int n = 16 ; int pos = findPosition ( n ) ; ( pos == -1 ) ? cout << "" n ▁ = ▁ "" << n << "" , ▁ Invalid ▁ number "" << endl : cout << "" n ▁ = ▁ "" << n << "" , ▁ Position ▁ "" << pos << endl ; n = 12 ; pos = findPosition ( n ) ; ( pos == -1 ) ? cout << "" n ▁ = ▁ "" << n << "" , ▁ Invalid ▁ number "" << endl : cout << "" n ▁ = ▁ "" << n << "" , ▁ Position ▁ "" << pos << endl ; n = 128 ; pos = findPosition ( n ) ; ( pos == -1 ) ? cout << "" n ▁ = ▁ "" << n << "" , ▁ Invalid ▁ number "" << endl : cout << "" n ▁ = ▁ "" << n << "" , ▁ Position ▁ "" << pos << endl ; return 0 ; }","class GFG { static boolean isPowerOfTwo ( int n ) { return ( n > 0 && ( ( n & ( n - 1 ) ) == 0 ) ) ? true : false ; } static int findPosition ( int n ) { if ( ! isPowerOfTwo ( n ) ) return - 1 ; int i = 1 , pos = 1 ; while ( ( i & n ) == 0 ) { i = i << 1 ; ++ pos ; } return pos ; } public static void main ( String [ ] args ) { int n = 16 ; int pos = findPosition ( n ) ; if ( pos == - 1 ) System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Invalid ▁ number "" ) ; else System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Position ▁ "" + pos ) ; n = 12 ; pos = findPosition ( n ) ; if ( pos == - 1 ) System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Invalid ▁ number "" ) ; else System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Position ▁ "" + pos ) ; n = 128 ; pos = findPosition ( n ) ; if ( pos == - 1 ) System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Invalid ▁ number "" ) ; else System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Position ▁ "" + pos ) ; } }","import java.io.*; import java.util.*; public class Main { static int isPowerOfTwo(int n) { return (n & (n - 1)) == 0 ? 1 : 0; } static int findPosition(int n) { if (!isPowerOfTwo(n)) return -1; int i = 1, pos = 1; while ((i & n) == 0) { i = i << 1; ++pos; } return pos; } public static void main (String[] args) { int n=16, pos=findPosition(n); if (pos == -1) System.out.println(""n = "" + n + "", Invalid number""); else System.out.println(""n = "" + n + "", Position = "" + pos); n = 12; pos=findPosition(n); if (pos == -1) System.out.println(""n = "" + n + "", Invalid number""); else System.out.println(""n = "" + n + "", Position = "" + pos); n=128; pos=findPosition(n); if (pos == -1) System.out.println(""n = "" + n + "", Invalid number""); else System.out.println(""n = "" + n + "", Position = "" + pos); } } ",11.561749935150146,0.7012119962566943,0.6102793439365688,0.4956796177305441,0.8695652173913044,0.6078452976287722
1703,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void printRepeating ( int arr [ ] , int size ) { int * count = new int [ sizeof ( int ) * ( size - 2 ) ] ; int i ; cout << "" ▁ Repeating ▁ elements ▁ are ▁ "" ; for ( i = 0 ; i < size ; i ++ ) { if ( count [ arr [ i ] ] == 1 ) cout << arr [ i ] << "" ▁ "" ; else count [ arr [ i ] ] ++ ; } } int main ( ) { int arr [ ] = { 4 , 2 , 4 , 5 , 2 , 3 , 1 } ; int arr_size = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; printRepeating ( arr , arr_size ) ; return 0 ; }","class RepeatElement { void printRepeating ( int arr [ ] , int size ) { int count [ ] = new int [ size ] ; int i ; System . out . println ( "" Repeated ▁ elements ▁ are ▁ : ▁ "" ) ; for ( i = 0 ; i < size ; i ++ ) { if ( count [ arr [ i ] ] == 1 ) System . out . print ( arr [ i ] + "" ▁ "" ) ; else count [ arr [ i ] ] ++ ; } } public static void main ( String [ ] args ) { RepeatElement repeat = new RepeatElement ( ) ; int arr [ ] = { 4 , 2 , 4 , 5 , 2 , 3 , 1 } ; int arr_size = arr . length ; repeat . printRepeating ( arr , arr_size ) ; } }","import java.util.*; class Main { static void printRepeating(int arr[], int size) { int count[] = new int[size + 1]; System.out.print(""▁ Repeating ▁ elements ▁ are ▁ ""); for (int i = 0; i < size; i++) { if (count[arr[i]] == 1) System.out.print(arr[i] + "" ▁ ""); else count[arr[i]]++; } } public static void main (String[] args) { int arr[] = {4, 2, 4, 5, 2, 3, 1}; int arr_size = arr.length; printRepeating(arr, arr_size); } } ",7.76269793510437,0.8191112082427663,0.7734995438703391,0.7048347496124333,1.0,0.7933843247287033
7056,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int max ( int a , int b ) { return ( a > b ) ? a : b ; } int eggDrop ( int n , int k ) { int eggFloor [ n + 1 ] [ k + 1 ] ; int res ; int i , j , x ; for ( i = 1 ; i <= n ; i ++ ) { eggFloor [ i ] [ 1 ] = 1 ; eggFloor [ i ] [ 0 ] = 0 ; } for ( j = 1 ; j <= k ; j ++ ) eggFloor [ 1 ] [ j ] = j ; for ( i = 2 ; i <= n ; i ++ ) { for ( j = 2 ; j <= k ; j ++ ) { eggFloor [ i ] [ j ] = INT_MAX ; for ( x = 1 ; x <= j ; x ++ ) { res = 1 + max ( eggFloor [ i - 1 ] [ x - 1 ] , eggFloor [ i ] [ j - x ] ) ; if ( res < eggFloor [ i ] [ j ] ) eggFloor [ i ] [ j ] = res ; } } } return eggFloor [ n ] [ k ] ; } int main ( ) { int n = 2 , k = 36 ; cout << "" Minimum number of trials "" STRNEWLINE TABSYMBOL TABSYMBOL "" in worst case with "" << n << "" ▁ eggs ▁ and ▁ "" << k << "" ▁ floors ▁ is ▁ "" << eggDrop ( n , k ) ; return 0 ; }","class EggDrop { static int max ( int a , int b ) { return ( a > b ) ? a : b ; } static int eggDrop ( int n , int k ) { int eggFloor [ ] [ ] = new int [ n + 1 ] [ k + 1 ] ; int res ; int i , j , x ; for ( i = 1 ; i <= n ; i ++ ) { eggFloor [ i ] [ 1 ] = 1 ; eggFloor [ i ] [ 0 ] = 0 ; } for ( j = 1 ; j <= k ; j ++ ) eggFloor [ 1 ] [ j ] = j ; for ( i = 2 ; i <= n ; i ++ ) { for ( j = 2 ; j <= k ; j ++ ) { eggFloor [ i ] [ j ] = Integer . MAX_VALUE ; for ( x = 1 ; x <= j ; x ++ ) { res = 1 + max ( eggFloor [ i - 1 ] [ x - 1 ] , eggFloor [ i ] [ j - x ] ) ; if ( res < eggFloor [ i ] [ j ] ) eggFloor [ i ] [ j ] = res ; } } } return eggFloor [ n ] [ k ] ; } public static void main ( String args [ ] ) { int n = 2 , k = 10 ; System . out . println ( "" Minimum ▁ number ▁ of ▁ trials ▁ in ▁ worst "" + "" ▁ case ▁ with ▁ "" + n + "" ▁ eggs ▁ and ▁ "" + k + "" ▁ floors ▁ is ▁ "" + eggDrop ( n , k ) ) ; } }","public class Main { static int max(int a, int b) { return (a > b) ? a : b; } static int eggDrop(int n, int k) { int[][] eggFloor = new int[n+1][k+1]; int res; int i, j, x; for (i = 1; i <= n; i++) { eggFloor[i][1] = 1; eggFloor[i][0] = 0; } for (j = 1; j <= k; j++) eggFloor[1][j] = j; for (i = 2; i <= n; i++) { for (j = 2; j <= k; j++) { eggFloor[i][j] = Integer.MAX_VALUE; for (x = 1; x <= j; x++) { res = 1 + Math.max(eggFloor[i-1][x-1], eggFloor[i][j-x]); if (res < eggFloor[i][j]) eggFloor[i][j] = res; } <｜begin▁of▁sentence｜> ▁ eggs ▁ and ▁ floors ▁ is ▁ +",8.811545848846436,0.624825585790286,0.5966175429965929,0.5470533275818507,0.888888888888889,0.6496039959739621
13544,C++,Java,"#include <iostream> NEW_LINE using namespace std ; long long gcd ( long long int a , long long int b ) { if ( b == 0 ) return a ; return gcd ( b , a % b ) ; } long long lcm ( int a , int b ) { return ( a / gcd ( a , b ) ) * b ; } int main ( ) { int a = 15 , b = 20 ; cout << "" LCM ▁ of ▁ "" << a << "" ▁ and ▁ "" << b << "" ▁ is ▁ "" << lcm ( a , b ) ; return 0 ; }","class Test { static int gcd ( int a , int b ) { if ( a == 0 ) return b ; return gcd ( b % a , a ) ; } static int lcm ( int a , int b ) { return ( a / gcd ( a , b ) ) * b ; } public static void main ( String [ ] args ) { int a = 15 , b = 20 ; System . out . println ( "" LCM ▁ of ▁ "" + a + "" ▁ and ▁ "" + b + "" ▁ is ▁ "" + lcm ( a , b ) ) ; } }","public class Main { public static long gcd(long a, long b){ if (b == 0) return a; else return gcd(b, a % b); } public static long lcm(int a, int b){ return (a / gcd(a, b)) * b; } public static void main(String[] args) { int a = 15, b = 20; System.out.println("" LCM of "" + a + "" and "" + b + "" is "" + lcm(a, b)); } } ",5.150990009307861,0.8559765050737648,0.7566682556032492,0.6362379912946426,0.9411764705882353,0.7277195350827204
1610,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; #define NA  -1 NEW_LINE void moveToEnd ( int mPlusN [ ] , int size ) { int j = size - 1 ; for ( int i = size - 1 ; i >= 0 ; i -- ) if ( mPlusN [ i ] != NA ) { mPlusN [ j ] = mPlusN [ i ] ; j -- ; } } int merge ( int mPlusN [ ] , int N [ ] , int m , int n ) { int i = n ; int j = 0 ; int k = 0 ; while ( k < ( m + n ) ) { if ( ( j == n ) || ( i < ( m + n ) && mPlusN [ i ] <= N [ j ] ) ) { mPlusN [ k ] = mPlusN [ i ] ; k ++ ; i ++ ; } else { mPlusN [ k ] = N [ j ] ; k ++ ; j ++ ; } } } void printArray ( int arr [ ] , int size ) { for ( int i = 0 ; i < size ; i ++ ) cout << arr [ i ] << "" ▁ "" ; cout << endl ; } int main ( ) { int mPlusN [ ] = { 2 , 8 , NA , NA , NA , 13 , NA , 15 , 20 } ; int N [ ] = { 5 , 7 , 9 , 25 } ; int n = sizeof ( N ) / sizeof ( N [ 0 ] ) ; int m = sizeof ( mPlusN ) / sizeof ( mPlusN [ 0 ] ) - n ; moveToEnd ( mPlusN , m + n ) ; merge ( mPlusN , N , m , n ) ; printArray ( mPlusN , m + n ) ; return 0 ; }","class MergeArrays { void moveToEnd ( int mPlusN [ ] , int size ) { int i , j = size - 1 ; for ( i = size - 1 ; i >= 0 ; i -- ) { if ( mPlusN [ i ] != - 1 ) { mPlusN [ j ] = mPlusN [ i ] ; j -- ; } } } void merge ( int mPlusN [ ] , int N [ ] , int m , int n ) { int i = n ; int j = 0 ; int k = 0 ; while ( k < ( m + n ) ) { if ( ( i < ( m + n ) && mPlusN [ i ] <= N [ j ] ) || ( j == n ) ) { mPlusN [ k ] = mPlusN [ i ] ; k ++ ; i ++ ; } else { mPlusN [ k ] = N [ j ] ; k ++ ; j ++ ; } } } void printArray ( int arr [ ] , int size ) { int i ; for ( i = 0 ; i < size ; i ++ ) System . out . print ( arr [ i ] + "" ▁ "" ) ; System . out . println ( "" "" ) ; } public static void main ( String [ ] args ) { MergeArrays mergearray = new MergeArrays ( ) ; int mPlusN [ ] = { 2 , 8 , - 1 , - 1 , - 1 , 13 , - 1 , 15 , 20 } ; int N [ ] = { 5 , 7 , 9 , 25 } ; int n = N . length ; int m = mPlusN . length - n ; mergearray . moveToEnd ( mPlusN , m + n ) ; mergearray . merge ( mPlusN , N , m , n ) ; mergearray . printArray ( mPlusN , m + n ) ; } }","import java.util.*; public class Main { public static final int NA = -1; void moveToEnd(int[] mPlusN, int size) { int j = size - 1; for (int i = size - 1; i >= 0; i--) { if (mPlusN[i] != NA) { mPlusN[j] = mPlusN[i]; j--; } } } void merge(int[] mPlusN, int[] N, int m, int n) { int i = n; int j = 0; int k = 0; while (k < (m + n)) { if ((j == n) || (i < (m + n) && mPlusN[i] <= N[j])) { mPlusN[k] = mPlusN[i]; k++; i++; } else { mPlusN[k] = N[j]; k++; j++; } } } void printArray(int[] arr, int size) { for (int i = 0; i < size; i++) { System.out.print(arr[i] + "" ""); } System.out.println(); } public static void main(String[] args){ int mPlusN[] = {2, 8, NA, NA, NA, 13, NA, 15, 20}; int N[] = {5, 7, 9, 25}; int n = N.length; int m = mPlusN.length - n; Main obj = new Main(); obj.moveToEnd(mPlusN, m + n); obj.merge(mPlusN, N, m, n); obj.printArray(mPlusN, m + n); } } ",10.95128607749939,0.846720075344623,0.7896273355035812,0.6897623871041149,0.9565217391304348,0.7697901927120108
11743,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int nthTermOfTheSeries ( int n ) { int nthTerm ; if ( n % 2 == 0 ) nthTerm = pow ( n - 1 , 2 ) + n ; else nthTerm = pow ( n + 1 , 2 ) + n ; return nthTerm ; } int main ( ) { int n ; n = 8 ; cout << nthTermOfTheSeries ( n ) << endl ; n = 12 ; cout << nthTermOfTheSeries ( n ) << endl ; n = 102 ; cout << nthTermOfTheSeries ( n ) << endl ; n = 999 ; cout << nthTermOfTheSeries ( n ) << endl ; n = 9999 ; cout << nthTermOfTheSeries ( n ) << endl ; return 0 ; }","import java . lang . Math ; class GFG { static long nthTermOfTheSeries ( int n ) { long nthTerm ; if ( n % 2 == 0 ) nthTerm = ( long ) Math . pow ( n - 1 , 2 ) + n ; else nthTerm = ( long ) Math . pow ( n + 1 , 2 ) + n ; return nthTerm ; } public static void main ( String [ ] args ) { int n ; n = 8 ; System . out . println ( nthTermOfTheSeries ( n ) ) ; n = 12 ; System . out . println ( nthTermOfTheSeries ( n ) ) ; n = 102 ; System . out . println ( nthTermOfTheSeries ( n ) ) ; n = 999 ; System . out . println ( nthTermOfTheSeries ( n ) ) ; n = 9999 ; System . out . println ( nthTermOfTheSeries ( n ) ) ; } }","import java.lang.*; public class Main { static int nthTermOfTheSeries (int n ){ int nthTerm ; if(n % 2 == 0) nthTerm = (int)Math.pow((double)(n - 1), 2) + n; else nthTerm = (int)Math.pow((double)(n + 1), 2) + n; return nthTerm; } public static void main(String []args){ int n = 8; System.out.println(nthTermOfTheSeries(n)); n = 12; System.out.println(nthTermOfTheSeries(n)); n = 102; System.out.println(nthTermOfTheSeries(n)); n = 999; System.out.println(nthTermOfTheSeries(n)); n = 9999; System.out.println(nthTermOfTheSeries(n)); } } ",5.434967994689941,0.7424804786198644,0.6887940805752442,0.6033842347892885,1.0,0.722368964352502
13474,C++,Java,"#include <iostream> NEW_LINE using namespace std ; int countSquares ( int m , int n ) { if ( n < m ) swap ( m , n ) ; return m * ( m + 1 ) * ( 2 * m + 1 ) / 6 + ( n - m ) * m * ( m + 1 ) / 2 ; } int main ( ) { int m = 4 , n = 3 ; cout << "" Count ▁ of ▁ squares ▁ is ▁ "" << countSquares ( m , n ) ; }","class GFG { static int countSquares ( int m , int n ) { if ( n < m ) { int temp = m ; m = n ; n = temp ; } return m * ( m + 1 ) * ( 2 * m + 1 ) / 6 + ( n - m ) * m * ( m + 1 ) / 2 ; } public static void main ( String [ ] args ) { int m = 4 , n = 3 ; System . out . println ( "" Count ▁ of ▁ squares ▁ is ▁ "" + countSquares ( m , n ) ) ; } }","import java.lang.*; public class Main { static int countSquares(int m, int n){ if (n < m) { int temp = m; m = n; n = temp; } return ((m * (m + 1) * (2 * m + 1)) / 6 + ((n - m) * m * (m + 1)) / 2); } public static void main(String[] args){ int m = 4, n = 3; System.out.println(""Count of squares is ""+ countSquares(m, n)); } } ",3.8188798427581787,0.8934426229508197,0.854984508448565,0.7885458350176228,1.0,0.8519820845123358
13562,C++,Java,"#include <iostream> NEW_LINE using namespace std ; void printArray ( int arr [ ] , int size ) { for ( int i = 0 ; i < size ; i ++ ) cout << "" ▁ "" << arr [ i ] ; cout << "" STRNEWLINE "" ; return ; } void printSequencesRecur ( int arr [ ] , int n , int k , int index ) { int i ; if ( k == 0 ) { printArray ( arr , index ) ; } if ( k > 0 ) { for ( i = 1 ; i <= n ; ++ i ) { arr [ index ] = i ; printSequencesRecur ( arr , n , k - 1 , index + 1 ) ; } } } void printSequences ( int n , int k ) { int * arr = new int [ k ] ; printSequencesRecur ( arr , n , k , 0 ) ; return ; } int main ( ) { int n = 3 ; int k = 2 ; printSequences ( n , k ) ; return 0 ; }","class GfG { static void printArray ( int arr [ ] , int size ) { for ( int i = 0 ; i < size ; i ++ ) System . out . print ( arr [ i ] + "" ▁ "" ) ; System . out . println ( ) ; return ; } static void printSequencesRecur ( int arr [ ] , int n , int k , int index ) { int i ; if ( k == 0 ) { printArray ( arr , index ) ; } if ( k > 0 ) { for ( i = 1 ; i <= n ; ++ i ) { arr [ index ] = i ; printSequencesRecur ( arr , n , k - 1 , index + 1 ) ; } } } static void printSequences ( int n , int k ) { int arr [ ] = new int [ k ] ; printSequencesRecur ( arr , n , k , 0 ) ; return ; } public static void main ( String [ ] args ) { int n = 3 ; int k = 2 ; printSequences ( n , k ) ; } }","import java.lang.*; public class Main { public static void main(String[] args){ int n = 3; int k = 2; printSequences(n,k); } public static void printArray(int arr[], int size) { for (int i=0; i<size; i++) System.out.print(""▁"" + arr[i]); System.out.println(); } public static void printSequencesRecur(int arr[], int n, int k, int index) { if (k == 0){ printArray(arr,index); return; } if (k > 0) { for (int i=1; i<=n; ++i) { arr[index] = i; printSequencesRecur(arr, n, k-1, index+1); } } } public static void printSequences(int n, int k) { int[] arr = new int[k]; printSequencesRecur(arr,n,k,0); } } ",6.858501195907593,0.8281602665091196,0.7650088823174549,0.6755356591575007,1.0,0.7728749614102504
1955,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void search ( string pat , string txt ) { int M = pat . size ( ) ; int N = txt . size ( ) ; int i = 0 ; while ( i <= N - M ) { int j ; for ( j = 0 ; j < M ; j ++ ) if ( txt [ i + j ] != pat [ j ] ) break ; if ( j == M ) { cout << "" Pattern ▁ found ▁ at ▁ index ▁ "" << i << endl ; i = i + M ; } else if ( j == 0 ) i = i + 1 ; else i = i + j ; } } int main ( ) { string txt = "" ABCEABCDABCEABCD "" ; string pat = "" ABCD "" ; search ( pat , txt ) ; return 0 ; }","class GFG { static void search ( String pat , String txt ) { int M = pat . length ( ) ; int N = txt . length ( ) ; int i = 0 ; while ( i <= N - M ) { int j ; for ( j = 0 ; j < M ; j ++ ) if ( txt . charAt ( i + j ) != pat . charAt ( j ) ) break ; if ( j == M ) { System . out . println ( "" Pattern ▁ found ▁ at ▁ index ▁ "" + i ) ; i = i + M ; } else if ( j == 0 ) i = i + 1 ; else i = i + j ; } } public static void main ( String [ ] args ) { String txt = "" ABCEABCDABCEABCD "" ; String pat = "" ABCD "" ; search ( pat , txt ) ; } }","import java.util.*; public class Main { public static void main(String[] args) { String txt = "" ABCEABCDABCEABCD ""; String pat = "" ABCD ""; search(pat, txt); } public static void search(String pattern, String text) { int M = pattern.length(); int N = text.length(); int i = 0; while (i <= N - M) { int j; for (j = 0; j < M; j++) if (text.charAt(i + j) != pattern.charAt(j)) break; if (j == M) { System.out.println(""Pattern found at index ""+ i); i = i + M; } else if (j == 0) i = i + 1; else i = i + j; } } } ",9.40357780456543,0.8547931820588829,0.8100687106195464,0.7395407476704302,1.0,0.8176785233693011
2018,C++,Java,"#include <bits/stdc++.h> NEW_LINE #include <string.h> NEW_LINE using namespace std ; int fact ( int n ) { return ( n <= 1 ) ? 1 : n * fact ( n - 1 ) ; } int findSmallerInRight ( char * str , int low , int high ) { int countRight = 0 , i ; for ( i = low + 1 ; i <= high ; ++ i ) if ( str [ i ] < str [ low ] ) ++ countRight ; return countRight ; } int findRank ( char * str ) { int len = strlen ( str ) ; int mul = fact ( len ) ; int rank = 1 ; int countRight ; int i ; for ( i = 0 ; i < len ; ++ i ) { mul /= len - i ; countRight = findSmallerInRight ( str , i , len - 1 ) ; rank += countRight * mul ; } return rank ; } int main ( ) { char str [ ] = "" string "" ; cout << findRank ( str ) ; return 0 ; }","import java . io . * ; import java . util . * ; class GFG { static int fact ( int n ) { return ( n <= 1 ) ? 1 : n * fact ( n - 1 ) ; } static int findSmallerInRight ( String str , int low , int high ) { int countRight = 0 , i ; for ( i = low + 1 ; i <= high ; ++ i ) if ( str . charAt ( i ) < str . charAt ( low ) ) ++ countRight ; return countRight ; } static int findRank ( String str ) { int len = str . length ( ) ; int mul = fact ( len ) ; int rank = 1 ; int countRight ; for ( int i = 0 ; i < len ; ++ i ) { mul /= len - i ; countRight = findSmallerInRight ( str , i , len - 1 ) ; rank += countRight * mul ; } return rank ; } public static void main ( String [ ] args ) { String str = "" string "" ; System . out . println ( findRank ( str ) ) ; } }","import java.lang.*; class Main { static int fact(int n) { return (n <= 1) ? 1 : n * fact(n - 1); } static int findSmallerInRight(String str, int low, int high) { int countRight = 0; for (int i = low + 1; i <= high; ++i) if (str.charAt(i) < str.charAt(low)) ++countRight; return countRight; } static int findRank(String str) { int len = str.length(); int mul = fact(len); int rank = 1; int countRight; for (int i = 0; i < len; ++i) { mul /= len - i; countRight = findSmallerInRight(str, i, len - 1); rank += countRight * mul; } return rank; } public static void main (String[] args) { String str = ""\""string\""""; System.out.println(findRank(str)); } } ",10.36000680923462,0.8330956560310091,0.8045134214451019,0.753188448440476,1.0,0.8272319139083333
1656,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int findElement ( int arr [ ] , int n , int key ) { int i ; for ( i = 0 ; i < n ; i ++ ) if ( arr [ i ] == key ) return i ; return -1 ; } int main ( ) { int arr [ ] = { 12 , 34 , 10 , 6 , 40 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; int key = 40 ; int position = findElement ( arr , n , key ) ; if ( position == - 1 ) cout << "" Element ▁ not ▁ found "" ; else cout << "" Element ▁ Found ▁ at ▁ Position : ▁ "" << position + 1 ; return 0 ; }","class Main { static int findElement ( int arr [ ] , int n , int key ) { for ( int i = 0 ; i < n ; i ++ ) if ( arr [ i ] == key ) return i ; return - 1 ; } public static void main ( String args [ ] ) { int arr [ ] = { 12 , 34 , 10 , 6 , 40 } ; int n = arr . length ; int key = 40 ; int position = findElement ( arr , n , key ) ; if ( position == - 1 ) System . out . println ( "" Element ▁ not ▁ found "" ) ; else System . out . println ( "" Element ▁ Found ▁ at ▁ Position : ▁ "" + ( position + 1 ) ) ; } }","import java.util.*; public class Main { static int findElement(int arr[], int n, int key) { for (int i = 0; i < n; i++) if (arr[i] == key) return i; return -1; } public static void main(String args[]){ int arr[] = {12, 34, 10, 6, 40}; int n = arr.length; int key = 40; int position = findElement(arr, n, key); if (position == -1) System.out.print(""Element not found""); else System.out.print(""Element Found at Position: "" + (position + 1)); } } ",4.972618103027344,0.8320922003867604,0.7842354301726813,0.7194321361700352,1.0,0.8036024953190246
12321,C++,Java,"#include <bits/stdc++.h> NEW_LINE #include <iomanip> NEW_LINE #include <iostream> NEW_LINE #include <math.h> NEW_LINE using namespace std ; void distance ( float x1 , float y1 , float z1 , float x2 , float y2 , float z2 ) { float d = sqrt ( pow ( x2 - x1 , 2 ) + pow ( y2 - y1 , 2 ) + pow ( z2 - z1 , 2 ) * 1.0 ) ; std :: cout << std :: fixed ; std :: cout << std :: setprecision ( 2 ) ; cout << "" ▁ Distance ▁ is ▁ "" << d ; return ; } int main ( ) { float x1 = 2 ; float y1 = -5 ; float z1 = 7 ; float x2 = 3 ; float y2 = 4 ; float z2 = 5 ; distance ( x1 , y1 , z1 , x2 , y2 , z2 ) ; return 0 ; }","import java . io . * ; import java . lang . Math ; class GFG { static void distance ( float x1 , float y1 , float z1 , float x2 , float y2 , float z2 ) { double d = Math . pow ( ( Math . pow ( x2 - x1 , 2 ) + Math . pow ( y2 - y1 , 2 ) + Math . pow ( z2 - z1 , 2 ) * 1.0 ) , 0.5 ) ; System . out . println ( "" Distance ▁ is ▁ "" + d ) ; return ; } public static void main ( String [ ] args ) { float x1 = 2 ; float y1 = - 5 ; float z1 = 7 ; float x2 = 3 ; float y2 = 4 ; float z2 = 5 ; distance ( x1 , y1 , z1 , x2 , y2 , z2 ) ; } }","import java.lang.*; import java.io.*; import java.util.*; import java.text.*; public class Main { public static void main(String[] args) { float x1 = 2, y1 = -5, z1 = 7; float x2 = 3, y2 = 4, z2 = 5; distance(x1, y1, z1, x2, y2, z2); } public static void distance(float x1, float y1, float z1, float x2, float y2, float z2) { double d = Math.sqrt(Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2) + Math.pow((z2 - z1), 2) * 1.0); DecimalFormat df = new DecimalFormat(""##.##""); System.out.println(""Distance is ""+df.format(d)); } } ",6.008617162704468,0.7602339181286549,0.6720627847551944,0.5477364753027251,0.8333333333333334,0.6334155327119075
2133,C++,Java,#include <iostream> NEW_LINE #include <math.h> NEW_LINE using namespace std ; class gfg { public : unsigned int getFirstSetBitPos ( int n ) { return log2 ( n & - n ) + 1 ; } } ; int main ( ) { gfg g ; int n = 12 ; cout << g . getFirstSetBitPos ( n ) ; return 0 ; },class GFG { public static int getFirstSetBitPos ( int n ) { return ( int ) ( ( Math . log10 ( n & - n ) ) / Math . log10 ( 2 ) ) + 1 ; } public static void main ( String [ ] args ) { int n = 12 ; System . out . println ( getFirstSetBitPos ( n ) ) ; } },import java.lang.*; public class gfg { public static int getFirstSetBitPos(int n){ return (int)(Math.log(n & -n) / Math.log(2)) + 1; } } class Main{ public static void main(String[] args){ gfg g = new gfg(); int n = 12; System.out.println(g.getFirstSetBitPos(n)); } } ,2.949995994567871,0.7272727272727273,0.6488856845230502,0.543127390400521,0.9333333333333333,0.6601891732803646
2190,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int maxDiff ( int arr [ ] , int arr_size ) { int max_diff = arr [ 1 ] - arr [ 0 ] ; for ( int i = 0 ; i < arr_size ; i ++ ) { for ( int j = i + 1 ; j < arr_size ; j ++ ) { if ( arr [ j ] - arr [ i ] > max_diff ) max_diff = arr [ j ] - arr [ i ] ; } } return max_diff ; } int main ( ) { int arr [ ] = { 1 , 2 , 90 , 10 , 110 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" Maximum ▁ difference ▁ is ▁ "" << maxDiff ( arr , n ) ; return 0 ; }","class MaximumDiffrence { int maxDiff ( int arr [ ] , int arr_size ) { int max_diff = arr [ 1 ] - arr [ 0 ] ; int i , j ; for ( i = 0 ; i < arr_size ; i ++ ) { for ( j = i + 1 ; j < arr_size ; j ++ ) { if ( arr [ j ] - arr [ i ] > max_diff ) max_diff = arr [ j ] - arr [ i ] ; } } return max_diff ; } public static void main ( String [ ] args ) { MaximumDifference maxdif = new MaximumDifference ( ) ; int arr [ ] = { 1 , 2 , 90 , 10 , 110 } ; System . out . println ( "" Maximum ▁ difference ▁ is ▁ "" + maxdif . maxDiff ( arr , 5 ) ) ; } }","import java.util.*; public class Main { static int maxDiff(int arr[], int arr_size) { int max_diff = arr[1] - arr[0]; for (int i = 0; i < arr_size; i++) { for (int j = i + 1; j < arr_size; j++) { if (arr[j] - arr[i] > max_diff) max_diff = arr[j] - arr[i]; } } return max_diff; } public static void main(String[] args) { int arr[] = new int[]{1, 2, 90, 10, 110}; int n = (arr.length); System.out.println(""Maximum difference is "" + maxDiff(arr, n)); } } ",5.95306396484375,0.8668011327006573,0.8104893496130079,0.7086613141932437,1.0,0.7960629199352706
1715,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; bool find3Numbers ( int A [ ] , int arr_size , int sum ) { int l , r ; for ( int i = 0 ; i < arr_size - 2 ; i ++ ) { for ( int j = i + 1 ; j < arr_size - 1 ; j ++ ) { for ( int k = j + 1 ; k < arr_size ; k ++ ) { if ( A [ i ] + A [ j ] + A [ k ] == sum ) { cout << "" Triplet ▁ is ▁ "" << A [ i ] << "" , ▁ "" << A [ j ] << "" , ▁ "" << A [ k ] ; return true ; } } } } return false ; } int main ( ) { int A [ ] = { 1 , 4 , 45 , 6 , 10 , 8 } ; int sum = 22 ; int arr_size = sizeof ( A ) / sizeof ( A [ 0 ] ) ; find3Numbers ( A , arr_size , sum ) ; return 0 ; }","class FindTriplet { boolean find3Numbers ( int A [ ] , int arr_size , int sum ) { int l , r ; for ( int i = 0 ; i < arr_size - 2 ; i ++ ) { for ( int j = i + 1 ; j < arr_size - 1 ; j ++ ) { for ( int k = j + 1 ; k < arr_size ; k ++ ) { if ( A [ i ] + A [ j ] + A [ k ] == sum ) { System . out . print ( "" Triplet ▁ is ▁ "" + A [ i ] + "" , ▁ "" + A [ j ] + "" , ▁ "" + A [ k ] ) ; return true ; } } } } return false ; } public static void main ( String [ ] args ) { FindTriplet triplet = new FindTriplet ( ) ; int A [ ] = { 1 , 4 , 45 , 6 , 10 , 8 } ; int sum = 22 ; int arr_size = A . length ; triplet . find3Numbers ( A , arr_size , sum ) ; } }","import java.util.*; public class Main { static boolean find3Numbers(int A[], int arr_size, int sum) { for (int i = 0; i < arr_size - 2; i++) { for (int j = i + 1; j < arr_size - 1; j++) { for (int k = j + 1; k < arr<｜begin▁of▁sentence｜>.length; k++) { if (A[i] + A[j] + A[k] == sum) { System.out.println(""Triplet is "" + A[i] + "", "" + A[j] + "", "" + A[k]); return true; } } } } return false; } public static void main(String[] args) { int A[] = {1, 4, 45, 6, 10, 8}; int sum = 22; int arr_size = A.length; find3Numbers(A, arr_size, sum); } } ",6.778473138809204,0.8389928927424976,0.7995294050581767,0.7401793189006337,0.9600000000000001,0.8061255232304436
12963,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int countDigit ( long long n ) { if ( n / 10 == 0 ) return 1 ; return 1 + countDigit ( n / 10 ) ; } int main ( void ) { long long n = 345289467 ; cout << "" Number ▁ of ▁ digits ▁ : "" << countDigit ( n ) ; return 0 ; }","import java . util . * ; class GFG { static int countDigit ( long n ) { if ( n / 10 == 0 ) return 1 ; return 1 + countDigit ( n / 10 ) ; } public static void main ( String [ ] args ) { long n = 345289467 ; System . out . print ( "" Number ▁ of ▁ digits ▁ : ▁ "" + countDigit ( n ) ) ; } }","import java.util.*; public class Main { static int countDigit(long n) { if (n / 10 == 0) return 1; return 1 + countDigit(n / 10); } public static void main(String[] args) { long n = 345289467L; System.out.println(""Number of digits : "" + countDigit(n)); } } ",6.271862030029297,0.8212123954606653,0.7627682306822979,0.7025610968479252,1.0,0.7917927677935477
1788,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int binarySearch ( int arr [ ] , int l , int r , int x ) { if ( r >= l ) { int mid = l + ( r - l ) / 2 ; if ( arr [ mid ] == x ) return mid ; if ( arr [ mid ] > x ) return binarySearch ( arr , l , mid - 1 , x ) ; return binarySearch ( arr , mid + 1 , r , x ) ; } return -1 ; } int main ( void ) { int arr [ ] = { 2 , 3 , 4 , 10 , 40 } ; int x = 10 ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; int result = binarySearch ( arr , 0 , n - 1 , x ) ; ( result == -1 ) ? cout << "" Element ▁ is ▁ not ▁ present ▁ in ▁ array "" : cout << "" Element ▁ is ▁ present ▁ at ▁ index ▁ "" << result ; return 0 ; }","class BinarySearch { int binarySearch ( int arr [ ] , int l , int r , int x ) { if ( r >= l ) { int mid = l + ( r - l ) / 2 ; if ( arr [ mid ] == x ) return mid ; if ( arr [ mid ] > x ) return binarySearch ( arr , l , mid - 1 , x ) ; return binarySearch ( arr , mid + 1 , r , x ) ; } return - 1 ; } public static void main ( String args [ ] ) { BinarySearch ob = new BinarySearch ( ) ; int arr [ ] = { 2 , 3 , 4 , 10 , 40 } ; int n = arr . length ; int x = 10 ; int result = ob . binarySearch ( arr , 0 , n - 1 , x ) ; if ( result == - 1 ) System . out . println ( "" Element ▁ not ▁ present "" ) ; else System . out . println ( "" Element ▁ found ▁ at ▁ index ▁ "" + result ) ; } }","import java.util.*; class Main { static int binarySearch(int arr[], int l, int r, int x) { if (r >= l) { int mid = l + (r - l)/2; if (arr[mid] == x) return mid; if (arr[mid] > x) return binarySearch(arr, l, mid-1, x); return binarySearch(arr, mid+1, r, x); } return -1; } public static void main(String[] args){ int arr[] = {2, 3, 4, 10, 40}; int x = 10; int n = arr.length; int result = binarySearch(arr, 0, n-1, x); if (result == -1) System.out.println(""Element is not present in array""); else System.out.println(""Element is present at index "" + result); } } ",7.260348081588745,0.7769743242431557,0.7194657366475664,0.6330449974990806,0.9473684210526316,0.7273420245651459
9263,C++,Java,#include <bits/stdc++.h> NEW_LINE #define PI  3.14159265 NEW_LINE using namespace std ; float area_circumscribed ( float c ) { return ( c * c * ( PI / 4 ) ) ; } int main ( ) { float c = 8 ; cout << area_circumscribed ( c ) ; return 0 ; },import java . lang . * ; class GFG { static double PI = 3.14159265 ; public static double area_cicumscribed ( double c ) { return ( c * c * ( PI / 4 ) ) ; } public static void main ( String [ ] args ) { double c = 8.0 ; System . out . println ( area_cicumscribed ( c ) ) ; } },public class Main { public static final double PI = 3.14159265; public static double areaCircumscribed(double c) { return (c * c * (PI / 4)); } public static void main(String[] args){ double c = 8; System.out.println(areaCircumscribed(c)); } } ,2.722672939300537,0.7620603769401614,0.708022396354202,0.6554712448399584,0.923076923076923,0.7357529483110478
12672,C++,Java,#include <bits/stdc++.h> NEW_LINE using namespace std ; float AvgofSquareN ( int n ) { float sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( i * i ) ; return sum / n ; } int main ( ) { int n = 2 ; cout << AvgofSquareN ( n ) ; return 0 ; },import java . io . * ; public class GFG { static float AvgofSquareN ( int n ) { float sum = 0 ; for ( int i = 1 ; i <= n ; i ++ ) sum += ( i * i ) ; return sum / n ; } static public void main ( String [ ] args ) { int n = 2 ; System . out . println ( AvgofSquareN ( n ) ) ; } },"import java.util.*; public class Main { static float avgOfSquareN (int n ){ float sum = 0 ; for( int i=1;i<=n;i++) sum += (float)(Math.pow(i,2)); return sum/n; } public static void main (String [] args){ int n =2; System.out.println(avgOfSquareN(n)); } } ",4.3916401863098145,0.6820615015414326,0.5894747188122882,0.45791889939202046,1.0,0.6205432295744142
2304,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void printTwoElements ( int arr [ ] , int size ) { int i ; cout << "" ▁ The ▁ repeating ▁ element ▁ is ▁ "" ; for ( i = 0 ; i < size ; i ++ ) { if ( arr [ abs ( arr [ i ] ) - 1 ] > 0 ) arr [ abs ( arr [ i ] ) - 1 ] = - arr [ abs ( arr [ i ] ) - 1 ] ; else cout << abs ( arr [ i ] ) << "" STRNEWLINE "" ; } cout << "" and ▁ the ▁ missing ▁ element ▁ is ▁ "" ; for ( i = 0 ; i < size ; i ++ ) { if ( arr [ i ] > 0 ) cout << ( i + 1 ) ; } } int main ( ) { int arr [ ] = { 7 , 3 , 4 , 5 , 5 , 6 , 2 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; printTwoElements ( arr , n ) ; }","import java . io . * ; class GFG { static void printTwoElements ( int arr [ ] , int size ) { int i ; System . out . print ( "" The ▁ repeating ▁ element ▁ is ▁ "" ) ; for ( i = 0 ; i < size ; i ++ ) { int abs_val = Math . abs ( arr [ i ] ) ; if ( arr [ abs_val - 1 ] > 0 ) arr [ abs_val - 1 ] = - arr [ abs_val - 1 ] ; else System . out . println ( abs_val ) ; } System . out . print ( "" And ▁ the ▁ missing ▁ element ▁ is ▁ "" ) ; for ( i = 0 ; i < size ; i ++ ) { if ( arr [ i ] > 0 ) System . out . println ( i + 1 ) ; } } public static void main ( String [ ] args ) { int arr [ ] = { 7 , 3 , 4 , 5 , 5 , 6 , 2 } ; int n = arr . length ; printTwoElements ( arr , n ) ; } }","import java.util.*; public class Main { public static void printTwoElements(int arr[], int size) { System.out.print(""The repeating element is ""); for (int i = 0; i < size; i++) { if (arr[Math.abs(arr[i]) - 1] > 0) arr[Math.abs(arr[i]) - 1] = -arr[Math.abs(arr[i]) - 1]; else System.out.println(Math.abs(arr[i])); } System.out.print(""and the missing element is ""); for (int i = 0; i < size; i++) { if (arr[i] > 0) System.out.println((i + 1)); } } public static void main(String[] args) { int arr[] = {7, 3, 4, 5, 5, 6, 2}; int n = arr.length; printTwoElements(arr, n); } } ",8.889294147491455,0.7610582888468398,0.6755919778078648,0.5588366477626858,1.0,0.69118565343388
2148,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int main ( ) { int x = 10 , y = 5 ; x = x ^ y ; y = x ^ y ; x = x ^ y ; cout << "" After ▁ Swapping : ▁ x ▁ = "" << x << "" , ▁ y = "" << y ; return 0 ; }","import java . io . * ; public class GFG { public static void main ( String a [ ] ) { int x = 10 ; int y = 5 ; x = x ^ y ; y = x ^ y ; x = x ^ y ; System . out . println ( "" After ▁ swap : ▁ x ▁ = ▁ "" + x + "" , ▁ y ▁ = ▁ "" + y ) ; } }","import java.util.*; public class Main { public static void main(String[] args) { int x = 10, y = 5; x = x ^ y; y = x ^ y; x = x ^ y; System.out.println(""After Swapping : x = "" + x + "" , y = "" + y); } } ",2.428617000579834,0.7485538313855835,0.666411568271357,0.5567051261892395,1.0,0.6896935883324676
9291,C++,Java,"#include <iostream> NEW_LINE using namespace std ; float area ( float r ) { return ( 0.5 ) * ( 3.14 ) * ( r * r ) ; } float perimeter ( float r ) { return ( 3.14 ) * ( r ) ; } int main ( ) { int r = 10 ; cout << "" The ▁ Area ▁ of ▁ Semicircle : ▁ "" << area ( r ) << endl ; cout << "" The ▁ Perimeter ▁ of ▁ Semicircle : ▁ "" << perimeter ( r ) << endl ; return 0 ; }","import java . io . * ; class GFG { static float area ( float r ) { return ( float ) ( ( 0.5 ) * ( 3.14 ) * ( r * r ) ) ; } static float perimeter ( float r ) { return ( float ) ( ( 3.14 ) * ( r ) ) ; } public static void main ( String [ ] args ) { float r = 10 ; System . out . println ( "" The ▁ Area ▁ of ▁ Semicircle : ▁ "" + area ( r ) ) ; System . out . println ( "" The ▁ Perimeter ▁ of ▁ Semicircle : "" + + perimeter ( r ) ) ; } }","import java.io.*; public class Main { private static final double PI = 3.14; public static void main(String[] args) { int r=10; System.out.println(""The Area of Semicircle: ""+ area(r)); System.out<｜begin▁of▁sentence｜>"" The Perimeter of Semicircle: ""+ perimeter(r)); } public static double area(double r) { return (0.5 * PI * Math.pow(r,2)) ; } public static double perimeter(double r) { return (PI * r); } } ",8.060343265533447,0.6055982833702062,0.4936635303928238,0.35234363157175547,0.8,0.4866405421002288
2076,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int swapBits ( unsigned int x , unsigned int p1 , unsigned int p2 , unsigned int n ) { unsigned int set1 = ( x >> p1 ) & ( ( 1U << n ) - 1 ) ; unsigned int set2 = ( x >> p2 ) & ( ( 1U << n ) - 1 ) ; unsigned int Xor = ( set1 ^ set2 ) ; Xor = ( Xor << p1 ) | ( Xor << p2 ) ; unsigned int result = x ^ Xor ; return result ; } int main ( ) { int res = swapBits ( 28 , 0 , 3 , 2 ) ; cout << "" Result ▁ = ▁ "" << res ; return 0 ; }","class GFG { static int swapBits ( int x , int p1 , int p2 , int n ) { int set1 = ( x >> p1 ) & ( ( 1 << n ) - 1 ) ; int set2 = ( x >> p2 ) & ( ( 1 << n ) - 1 ) ; int xor = ( set1 ^ set2 ) ; xor = ( xor << p1 ) | ( xor << p2 ) ; int result = x ^ xor ; return result ; } public static void main ( String [ ] args ) { int res = swapBits ( 28 , 0 , 3 , 2 ) ; System . out . println ( "" Result ▁ = ▁ "" + res ) ; } }","public class Main { public static void main(String[] args) { int res = swapBits(28, 0, 3, 2); System.out.println(""Result = "" + res); } static int swapBits(int x, int p1, int p2, int n) { int set1 = (x >> p1) & ((1 << n) - 1); int set2 = (x >> p2) & ((1 << n) - 1); int Xor = set1 ^ set2; Xor = (Xor << p1) | (Xor << p2); int result = x ^ Xor; return result; } } ",6.42154598236084,0.8924393712845816,0.8445571423241722,0.7744635272153573,1.0,0.8421244690507501
12300,C++,Java,"#include <iostream> NEW_LINE using namespace std ; int gcd ( int a , int b ) { if ( a == 0 && b == 0 ) return 0 ; if ( a == 0 ) return b ; if ( b == 0 ) return a ; if ( a == b ) return a ; if ( a > b ) return gcd ( a - b , b ) ; return gcd ( a , b - a ) ; } int main ( ) { int a = 0 , b = 56 ; cout << "" GCD ▁ of ▁ "" << a << "" ▁ and ▁ "" << b << "" ▁ is ▁ "" << gcd ( a , b ) ; return 0 ; }","class Test { static int gcd ( int a , int b ) { if ( a == 0 && b == 0 ) return 0 ; if ( a == 0 ) return b ; if ( b == 0 ) return a ; if ( a == b ) return a ; if ( a > b ) return gcd ( a - b , b ) ; return gcd ( a , b - a ) ; } public static void main ( String [ ] args ) { int a = 98 , b = 56 ; System . out . println ( "" GCD ▁ of ▁ "" + a + "" ▁ and ▁ "" + b + "" ▁ is ▁ "" + gcd ( a , b ) ) ; } }","public class Main { public static void main(String[] args){ int a = 0, b = 56; System.out.println(""GCD of "" + a + "" and "" + b + "" is "" + gcd(a,b)); } public static int gcd (int a, int b) { if(a == 0 && b == 0) return 0; if(a == 0) return b; if(b == 0) return a; if(a == b) return a; if(a > b) return gcd(a - b, b); return gcd(a, b - a); } } ",4.503494024276733,0.9062235674031973,0.8696853477667447,0.8211169287965762,1.0,0.8747818501576032
2311,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void findFourElements ( int A [ ] , int n , int X ) { for ( int i = 0 ; i < n - 3 ; i ++ ) { for ( int j = i + 1 ; j < n - 2 ; j ++ ) { for ( int k = j + 1 ; k < n - 1 ; k ++ ) { for ( int l = k + 1 ; l < n ; l ++ ) if ( A [ i ] + A [ j ] + A [ k ] + A [ l ] == X ) cout << A [ i ] << "" , ▁ "" << A [ j ] << "" , ▁ "" << A [ k ] << "" , ▁ "" << A [ l ] ; } } } } int main ( ) { int A [ ] = { 10 , 20 , 30 , 40 , 1 , 2 } ; int n = sizeof ( A ) / sizeof ( A [ 0 ] ) ; int X = 91 ; findFourElements ( A , n , X ) ; return 0 ; }","class FindFourElements { void findFourElements ( int A [ ] , int n , int X ) { for ( int i = 0 ; i < n - 3 ; i ++ ) { for ( int j = i + 1 ; j < n - 2 ; j ++ ) { for ( int k = j + 1 ; k < n - 1 ; k ++ ) { for ( int l = k + 1 ; l < n ; l ++ ) { if ( A [ i ] + A [ j ] + A [ k ] + A [ l ] == X ) System . out . print ( A [ i ] + "" ▁ "" + A [ j ] + "" ▁ "" + A [ k ] + "" ▁ "" + A [ l ] ) ; } } } } } public static void main ( String [ ] args ) { FindFourElements findfour = new FindFourElements ( ) ; int A [ ] = { 10 , 20 , 30 , 40 , 1 , 2 } ; int n = A . length ; int X = 91 ; findfour . findFourElements ( A , n , X ) ; } }","import java.util.*; public class Main { static void findFourElements(int[] A, int n, int X) { for (int i = 0; i < n - 3; i++) { for (int j = i + 1; j < n - 2; j++) { for (int k = j + 1; k < n - 1; k++) { for (int l = k + 1; l < n; l++) { if ((A[i] + A[j] + A[k] + A[l]) == X){ System.out.println(A[i]+"" ,""+ A[j]+"" ,""+ A[k]+"" ,""+ A[l]); } } } } } } public static void main (String[] args) { int[] A = {10, 20, 30, 40, 1, 2}; int n = A.length; int X = 91; findFourElements(A,n,X); } } ",7.923878908157349,0.8544544449357981,0.7978231578294038,0.713043828554235,0.9411764705882353,0.781483621164435
836,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int Identity ( int num ) { int row , col ; for ( row = 0 ; row < num ; row ++ ) { for ( col = 0 ; col < num ; col ++ ) { if ( row == col ) cout << 1 << "" ▁ "" ; else cout << 0 << "" ▁ "" ; } cout << endl ; } return 0 ; } int main ( ) { int size = 5 ; Identity ( size ) ; return 0 ; }","class GFG { static int identity ( int num ) { int row , col ; for ( row = 0 ; row < num ; row ++ ) { for ( col = 0 ; col < num ; col ++ ) { if ( row == col ) System . out . print ( 1 + "" ▁ "" ) ; else System . out . print ( 0 + "" ▁ "" ) ; } System . out . println ( ) ; } return 0 ; } public static void main ( String args [ ] ) { int size = 5 ; identity ( size ) ; } }","public class Main { static int identity(int num) { int row, col; for (row = 0; row < num; row++){ for (col = 0; col < num; col++){ if (row == col) System.out.print(""1▁""); else System.out.print(""0▁""); } System.out.println(); } return 0; } public static void main(String[] args) { int size = 5; identity(size); } } ",5.259943246841431,0.7440690686814341,0.6843535497431068,0.6058768682265249,1.0,0.7241138077585674
7322,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void search ( string pat , string txt ) { int M = pat . size ( ) ; int N = txt . size ( ) ; int i = 0 ; while ( i <= N - M ) { int j ; for ( j = 0 ; j < M ; j ++ ) if ( txt [ i + j ] != pat [ j ] ) break ; { cout << "" Pattern ▁ found ▁ at ▁ index ▁ "" << i << endl ; i = i + M ; } else if ( j == 0 ) i = i + 1 ; else i = i + j ; } } int main ( ) { string txt = "" ABCEABCDABCEABCD "" ; string pat = "" ABCD "" ; search ( pat , txt ) ; return 0 ; }","class GFG { static void search ( String pat , String txt ) { int M = pat . length ( ) ; int N = txt . length ( ) ; int i = 0 ; while ( i <= N - M ) { int j ; for ( j = 0 ; j < M ; j ++ ) if ( txt . charAt ( i + j ) != pat . charAt ( j ) ) break ; { System . out . println ( "" Pattern ▁ found ▁ at ▁ index ▁ "" + i ) ; i = i + M ; } else if ( j == 0 ) i = i + 1 ; else i = i + j ; } } public static void main ( String [ ] args ) { String txt = "" ABCEABCDABCEABCD "" ; String pat = "" ABCD "" ; search ( pat , txt ) ; } }","import java.util.*; public class Main { public static void main(String[] args) { String txt = "" ABCEABCDABCEABCD ""; String pat = "" ABCD ""; search(pat, txt); } public static void search(String pat, String txt) { int M = pat.length(); int N = txt.length(); int i = 0; while (i <= N - M) { int j; for (j = 0; j < M; j++) if ((txt.charAt(i + j)) != pat.charAt(j)) break; if (j == M) System.out<｜begin▁of▁sentence｜>(""Pattern found at index "" + i); if (j == 0) i = i + 1; else i = i + j; } } } ",7.186676025390625,0.8263805625349954,0.7734403187375561,0.694832302395185,1.0,0.7863826116766295
747,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; void printSorted ( int arr [ ] , int start , int end ) { if ( start > end ) return ; printSorted ( arr , start * 2 + 1 , end ) ; cout << arr [ start ] << "" ▁ "" ; printSorted ( arr , start * 2 + 2 , end ) ; } int main ( ) { int arr [ ] = { 4 , 2 , 5 , 1 , 3 } ; int arr_size = sizeof ( arr ) / sizeof ( int ) ; printSorted ( arr , 0 , arr_size - 1 ) ; getchar ( ) ; return 0 ; }","class GFG { private static void printSorted ( int [ ] arr , int start , int end ) { if ( start > end ) return ; printSorted ( arr , start * 2 + 1 , end ) ; System . out . print ( arr [ start ] + "" ▁ "" ) ; printSorted ( arr , start * 2 + 2 , end ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 4 , 2 , 5 , 1 , 3 } ; printSorted ( arr , 0 , arr . length - 1 ) ; } }","import java.util.*; class Main { public static void main(String args[]) { int arr[] = {4, 2, 5, 1, 3}; printSorted(arr, 0, arr.length - 1); } static void printSorted(int arr[], int start, int end) { if (start > end) return; printSorted(arr, start*2+1, end); System.out.print(arr[start] + "" ""); printSorted(arr, start*2+2, end); } } ",5.767852067947388,0.8578878349477654,0.788430386811661,0.6847509330604168,0.9411764705882353,0.7616785943187623
13565,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; # define MAX  11 NEW_LINE bool isMultipleof5 ( int n ) { char str [ MAX ] ; int len = strlen ( str ) ; if ( str [ len - 1 ] == '5' str [ len - 1 ] == '0' ) return true ; return false ; } int main ( ) { int n = 19 ; if ( isMultipleof5 ( n ) == true ) cout << n << "" ▁ is ▁ multiple ▁ of ▁ 5"" << endl ; else cout << n << "" ▁ is ▁ not ▁ multiple ▁ of ▁ 5"" << endl ; return 0 ; }","class GFG { static int MAX = 11 ; static boolean isMultipleof5 ( int n ) { char str [ ] = new char [ MAX ] ; int len = str . length ; if ( str [ len - 1 ] == '5' str [ len - 1 ] == '0' ) return true ; return false ; } public static void main ( String [ ] args ) { int n = 19 ; if ( isMultipleof5 ( n ) == true ) System . out . println ( n + "" ▁ is ▁ multiple ▁ "" + "" of ▁ 5"" ) ; else System . out . println ( n + "" ▁ is ▁ not ▁ a ▁ "" + "" multiple ▁ of ▁ 5"" ) ; } }","import java.util.Scanner; public class Main { static final int MAX = 11; public static boolean isMultipleof5(String n) { char[] str = new char[MAX]; int len = n.length(); if (n.charAt(len - 1) == '5' || n.charAt(len - 1) == '0') return true; return false; } public static void main(String[] args) { int n = 19; if (isMultipleof5(Integer.toString(n))) System.out.println(n + "" is multiple of 5""); else System.out.println(n + "" is not multiple of 5""); } } ",5.808479070663452,0.7142847735568593,0.6280534298844215,0.4923536760082687,0.962962962962963,0.633536462094677
1701,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int findPeakUtil ( int arr [ ] , int low , int high , int n ) { int mid = low + ( high - low ) / 2 ; if ( ( mid == 0 arr [ mid - 1 ] <= arr [ mid ] ) && ( mid == n - 1 arr [ mid + 1 ] <= arr [ mid ] ) ) return mid ; else if ( mid > 0 && arr [ mid - 1 ] > arr [ mid ] ) return findPeakUtil ( arr , low , ( mid - 1 ) , n ) ; else return findPeakUtil ( arr , ( mid + 1 ) , high , n ) ; } int findPeak ( int arr [ ] , int n ) { return findPeakUtil ( arr , 0 , n - 1 , n ) ; } int main ( ) { int arr [ ] = { 1 , 3 , 20 , 4 , 1 , 0 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; cout << "" Index ▁ of ▁ a ▁ peak ▁ point ▁ is ▁ "" << findPeak ( arr , n ) ; return 0 ; }","import java . util . * ; import java . lang . * ; import java . io . * ; class PeakElement { static int findPeakUtil ( int arr [ ] , int low , int high , int n ) { int mid = low + ( high - low ) / 2 ; if ( ( mid == 0 arr [ mid - 1 ] <= arr [ mid ] ) && ( mid == n - 1 arr [ mid + 1 ] <= arr [ mid ] ) ) return mid ; else if ( mid > 0 && arr [ mid - 1 ] > arr [ mid ] ) return findPeakUtil ( arr , low , ( mid - 1 ) , n ) ; else return findPeakUtil ( arr , ( mid + 1 ) , high , n ) ; } static int findPeak ( int arr [ ] , int n ) { return findPeakUtil ( arr , 0 , n - 1 , n ) ; } public static void main ( String [ ] args ) { int arr [ ] = { 1 , 3 , 20 , 4 , 1 , 0 } ; int n = arr . length ; System . out . println ( "" Index ▁ of ▁ a ▁ peak ▁ point ▁ is ▁ "" + findPeak ( arr , n ) ) ; } }","import java.util.*; class Main { static int findPeakUtil(int[] arr, int low, int high, int n){ int mid = low + (high - low) / 2; if((mid == 0 || arr[mid-1] <= arr[mid]) && (mid == n-1 || arr[mid+1] <= arr[mid])) return mid; else if(mid > 0 && arr[mid-1] > arr[mid]) return findPeakUtil(arr, low, mid - 1, n); else return findPeakUtil(arr, mid + 1, high, n); } static int findPeak(int[] arr, int n){ return findPeakUtil(arr, 0, n-1, n); } public static void main(String [] args){ int arr[] = {1,3,20,4,1,0}; int n = arr.length; System.out.println(""Index of a peak point is "" + findPeak(arr,n)); } } ",7.303745985031128,0.7320727360871205,0.6812731536281695,0.6028752779116949,1.0,0.7220126945381864
2147,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int main ( ) { int x = 10 , y = 5 ; x = x * y ; y = x / y ; x = x / y ; cout << "" After ▁ Swapping : ▁ x ▁ = "" << x << "" , ▁ y = "" << y ; }","import java . io . * ; class GFG { public static void main ( String [ ] args ) { int x = 10 ; int y = 5 ; x = x * y ; y = x / y ; x = x / y ; System . out . println ( "" After ▁ swaping : "" + "" ▁ x ▁ = ▁ "" + x + "" , ▁ y ▁ = ▁ "" + y ) ; } }","public class Main { public static void main(String[] args) { int x = 10, y = 5; x = x * y; y = x / y; x = x / y; System.out.print("" After Swapping : x ="" + x+"" , y ="" + y); } } ",3.1626241207122803,0.6093881255321393,0.5430834680316868,0.4809962704704479,1.0,0.6366973893293135
3997,C++,Java,"#include "" bits / stdc + + . h "" NEW_LINE using namespace std ; void printNSE ( int arr [ ] , int n ) { int next , i , j ; for ( i = 0 ; i < n ; i ++ ) { next = -1 ; for ( j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] > arr [ j ] ) { next = arr [ j ] ; break ; } } cout << arr [ i ] << "" ▁ - - ▁ "" << next << endl ; } } int main ( ) { int arr [ ] = { 11 , 13 , 21 , 3 } ; int n = sizeof ( arr ) / sizeof ( arr [ 0 ] ) ; printNSE ( arr , n ) ; return 0 ; }","class Main { static void printNSE ( int arr [ ] , int n ) { int next , i , j ; for ( i = 0 ; i < n ; i ++ ) { next = - 1 ; for ( j = i + 1 ; j < n ; j ++ ) { if ( arr [ i ] > arr [ j ] ) { next = arr [ j ] ; break ; } } System . out . println ( arr [ i ] + "" ▁ - - ▁ "" + next ) ; } } public static void main ( String args [ ] ) { int arr [ ] = { 11 , 13 , 21 , 3 } ; int n = arr . length ; printNSE ( arr , n ) ; } }","import java.lang.*; //for System.out.println public class Main { static void printNSE(int arr[], int n) { int next, i, j; for (i=0; i<n; i++) { next = -1; for (j=i+1; j<n; j++) { if (arr[i] > arr[j]) { next = arr[j]; break; } } System.out.println(arr[i] + "" -- "" + next); } } public static void main(String[] args) { int arr[] = {11, 13, 21, 3}; int n = arr.length; //sizeof(arr)/sizeof(arr[0]); printNSE(arr, n); } } ",5.7601189613342285,0.8322147651006712,0.7864718692288597,0.7060756523598861,1.0,0.7942529566519203
2144,C++,Java,"#include <bits/stdc++.h> NEW_LINE using namespace std ; int isPowerOfTwo ( unsigned n ) { return n && ( ! ( n & ( n - 1 ) ) ) ; } int findPosition ( unsigned n ) { if ( ! isPowerOfTwo ( n ) ) return -1 ; unsigned count = 0 ; while ( n ) { n = n >> 1 ; ++ count ; } return count ; } int main ( void ) { int n = 0 ; int pos = findPosition ( n ) ; ( pos == -1 ) ? cout << "" n ▁ = ▁ "" << n << "" , ▁ Invalid ▁ number STRNEWLINE "" : cout << "" n ▁ = ▁ "" << n << "" , ▁ Position ▁ "" << pos << endl ; n = 12 ; pos = findPosition ( n ) ; ( pos == -1 ) ? cout << "" n ▁ = ▁ "" << n << "" , ▁ Invalid ▁ number STRNEWLINE "" : cout << "" n ▁ = ▁ "" << n << "" , ▁ Position ▁ "" << pos << endl ; n = 128 ; pos = findPosition ( n ) ; ( pos == -1 ) ? cout << "" n ▁ = ▁ "" << n << "" , ▁ Invalid ▁ number STRNEWLINE "" : cout << "" n ▁ = ▁ "" << n << "" , ▁ Position ▁ "" << pos << endl ; return 0 ; }","class GFG { static boolean isPowerOfTwo ( int n ) { return n > 0 && ( ( n & ( n - 1 ) ) == 0 ) ; } static int findPosition ( int n ) { if ( ! isPowerOfTwo ( n ) ) return - 1 ; int count = 0 ; while ( n > 0 ) { n = n >> 1 ; ++ count ; } return count ; } public static void main ( String [ ] args ) { int n = 0 ; int pos = findPosition ( n ) ; if ( pos == - 1 ) System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Invalid ▁ number "" ) ; else System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Position ▁ "" + pos ) ; n = 12 ; pos = findPosition ( n ) ; if ( pos == - 1 ) System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Invalid ▁ number "" ) ; else System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Position ▁ "" + pos ) ; n = 128 ; pos = findPosition ( n ) ; if ( pos == - 1 ) System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Invalid ▁ number "" ) ; else System . out . println ( "" n ▁ = ▁ "" + n + "" , ▁ Position ▁ "" + pos ) ; } }","public class Main { static boolean isPowerOfTwo(int n) { return (n != 0 && ((n & (n - 1)) == 0)); } static int findPosition(int n) { if (!isPowerOfTwo(n)) return -1; int count = 0; while (n != 0) { n = n >> 1; ++count; } return count; } public static void main(String[] args) { int n = 0; int pos = findPosition(n); if (pos == -1) System.out.println(""n = "" + n + "", Invalid number""); else System.out.println(""n = "" + n + "", Position = "" + pos); n = 12; pos = findPosition(n); if (pos == -1) System.out.println(""n = "" + n + "", Invalid number""); else System.out.println(""n = "" + n + "", Position = "" + pos); n = 128; pos = findPosition(n); if (pos == -1) System.out.println(""n = "" + n + "", Invalid number""); else System.out.println(""n = "" + n + "", Position = "" + pos); } } ",8.175686836242676,0.7543419701942473,0.6808425703740134,0.5812774864136017,1.0,0.7068942404895211
9367,C++,Java,"#include <bits/stdc++.h> NEW_LINE #include <math.h> NEW_LINE #include <iostream> NEW_LINE #include <iomanip> NEW_LINE using namespace std ; void mirror_point ( float a , float b , float c , float d , float x1 , float y1 , float z1 ) { float k = ( - a * x1 - b * y1 - c * z1 - d ) / ( float ) ( a * a + b * b + c * c ) ; float x2 = a * k + x1 ; float y2 = b * k + y1 ; float z2 = c * k + z1 ; float x3 = 2 * x2 - x1 ; float y3 = 2 * y2 - y1 ; float z3 = 2 * z2 - z1 ; std :: cout << std :: fixed ; std :: cout << std :: setprecision ( 1 ) ; cout << "" ▁ x3 ▁ = ▁ "" << x3 ; cout << "" ▁ y3 ▁ = ▁ "" << y3 ; cout << "" ▁ z3 ▁ = ▁ "" << z3 ; } int main ( ) { float a = 1 ; float b = -2 ; float c = 0 ; float d = 0 ; float x1 = -1 ; float y1 = 3 ; float z1 = 4 ; mirror_point ( a , b , c , d , x1 , y1 , z1 ) ; return 0 ; }","import java . io . * ; class GFG { static void mirror_point ( int a , int b , int c , int d , int x1 , int y1 , int z1 ) { float k = ( - a * x1 - b * y1 - c * z1 - d ) / ( float ) ( a * a + b * b + c * c ) ; float x2 = a * k + x1 ; float y2 = b * k + y1 ; float z2 = c * k + z1 ; float x3 = 2 * x2 - x1 ; float y3 = 2 * y2 - y1 ; float z3 = 2 * z2 - z1 ; System . out . print ( "" x3 ▁ = ▁ "" + x3 + "" ▁ "" ) ; System . out . print ( "" y3 ▁ = ▁ "" + y3 + "" ▁ "" ) ; System . out . print ( "" z3 ▁ = ▁ "" + z3 + "" ▁ "" ) ; } public static void main ( String [ ] args ) { int a = 1 ; int b = - 2 ; int c = 0 ; int d = 0 ; int x1 = - 1 ; int y1 = 3 ; int z1 = 4 ; mirror_point ( a , b , c , d , x1 , y1 , z1 ) ; } }","import java.lang.*; class Main{ public static void main(String[] args){ float a = 1f, b = -2f, c = 0f, d = 0f, x1=-1f, y1=3f, z1=4f; mirrorPoint(a ,b ,c ,d ,x1 ,y1 ,z1); } public static void mirrorPoint(float a, float b, float c, float d, float x1, float y1, float z1){ double k = (- a * x1 - b * y1-c* z1 -d) / (double)(a * a + b * b+c * c); float x2=(float)(a * k + x1),y2=(float)(b *k + y1),z2=(float)(c * k + z1); float x3= (float)(2*x2 - x1) , y3 = (float)(2*y2-y1), z3 = (float)(2*z2-z1); System.out.printf(""x3 = %.1f, y3 = %.1f, z3 = %.1f"", x3, y3, z3); } } ",9.00148606300354,0.5617369781550502,0.4628666184961428,0.3231655109581377,0.9090909090909091,0.4989431303979691
